con
	_clkfreq = 297000000
	heapsize = 16000
	FR_OK = 0
	FR_DISK_ERR = 1
	FR_INT_ERR = 2
	FR_NOT_READY = 3
	FR_NO_FILE = 4
	FR_NO_PATH = 5
	FR_INVALID_NAME = 6
	FR_DENIED = 7
	FR_EXIST = 8
	FR_INVALID_OBJECT = 9
	FR_WRITE_PROTECTED = 10
	FR_INVALID_DRIVE = 11
	FR_NOT_ENABLED = 12
	FR_NO_FILESYSTEM = 13
	FR_MKFS_ABORTED = 14
	FR_TIMEOUT = 15
	FR_LOCKED = 16
	FR_NOT_ENOUGH_CORE = 17
	FR_TOO_MANY_OPEN_FILES = 18
	FR_INVALID_PARAMETER = 19
dat
	nop
	cogid	pa
	coginit	pa,##$404
	orgh	$10
	long	0	'reserved
	long	0 ' clock frequency: will default to 297000000
	long	0 ' clock mode: will default to $14d28fb
	orgh	$400
 _ret_	mov	result1, #0
	org	0
entry
	cmp	ptra, #0 wz
 if_ne	jmp	#spininit
	mov	ptra, ptr_stackspace_
	rdlong	pa, #20 wz
 if_ne	jmp	#skip_clock_set_
	hubset	#0
	hubset	##21833976
	waitx	##200000
	mov	pa, ##21833979
	hubset	pa
	wrlong	pa, #24
	wrlong	##297000000, #20
	jmp	#skip_clock_set_
	orgf	128
skip_clock_set_
	locknew	__lockreg
	wrlong	__lockreg, ptr___lockreg_
	call	#_main
cogexit
	waitx	##160000
	cogid	arg01
	cogstop	arg01
spininit
	rdlong	objptr, ptra
	add	ptra, #4
	rdlong	result1, ptra
	add	ptra, #4
	rdlong	arg01, ptra
	add	ptra, #4
	rdlong	arg02, ptra
	add	ptra, #4
	rdlong	arg03, ptra
	add	ptra, #4
	rdlong	arg04, ptra
	sub	ptra, #16
	call	result1
	jmp	#cogexit
FCACHE_LOAD_
    pop	fcache_tmpb_
    add	fcache_tmpb_, pa
    push	fcache_tmpb_
    sub	fcache_tmpb_, pa
    shr	pa, #2
    altd	pa
    mov	 0-0, ret_instr_
    sub	pa, #1
    setq	pa
    rdlong	$0, fcache_tmpb_
    jmp	#\$0 ' jmp to cache
ret_instr_
    ret
fcache_tmpb_
    long 0
COUNT_
    long 0
RETADDR_
    long 0
fp
    long 0
pushregs_
    pop  pa
    pop  RETADDR_
    tjz  COUNT_, #pushregs_done_
    sub  COUNT_, #1
    setq COUNT_
    wrlong local01, ptra
    add  COUNT_, #1
pushregs_done_
    shl  COUNT_, #2
    add  ptra, COUNT_
    shr  COUNT_, #2
    setq #2 ' push 3 registers starting at COUNT_
    wrlong COUNT_, ptra
    add    ptra, #12
    mov    fp, ptra
    jmp  pa
 popregs_
    pop    pa
    sub    ptra, #12
    setq   #2
    rdlong COUNT_, ptra
    tjz    COUNT_, #popregs__ret
    shl    COUNT_, #2
    sub    ptra, COUNT_
    shr    COUNT_, #2
    sub    COUNT_, #1
    setq   COUNT_
    rdlong local01, ptra
popregs__ret
    push   RETADDR_
    jmp    pa

unsdivide_
       setq    #0
       qdiv    muldiva_, muldivb_
       getqx   muldivb_
 _ret_ getqy   muldiva_

divide_
       abs     muldiva_,muldiva_     wc       'abs(x)
       muxc    itmp2_,#%11                    'store sign of x
       abs     muldivb_,muldivb_     wcz      'abs(y)
 if_c  xor     itmp2_,#%10                    'store sign of y
 if_z  ret
       call    #unsdivide_
       test    itmp2_,#1        wc       'restore sign, remainder
       negc    muldiva_,muldiva_ 
       test    itmp2_,#%10      wc       'restore sign, division result
 _ret_ negc    muldivb_,muldivb_

__heap_ptr
	long	@__heap_base
__lockreg
	long	0
itmp1_
	long	0
itmp2_
	long	0
objptr
	long	@objmem
ptr__SPI_spin2_dat__
	long	@_SPI_spin2_dat_
ptr____struct__anon_9b5668f900000005_sputc_
	long	@___struct__anon_9b5668f900000005_sputc
ptr____struct__fmtfile_putchar_
	long	@___struct__fmtfile_putchar
ptr____struct_s_vfs_file_t_putchar_
	long	@___struct_s_vfs_file_t_putchar
ptr___lockreg_
	long	@__lockreg
ptr___system__dat__
	long	@__system__dat_
ptr__dat__
	long	@_dat_
ptr__ff_cc_dat__
	long	@_ff_cc_dat_
ptr_stackspace_
	long	@stackspace
result1
	long	0
result2
	long	0
result3
	long	0
COG_BSS_START
	fit	480
	orgh
hubentry

_write
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	cmp	local01, #10 wcz
 if_b	jmp	#LR__0001
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0002
LR__0001
	qmul	local01, #44
	getqx	arg01
	add	ptr__dat__, ##2348
	add	arg01, ptr__dat__
	mov	arg02, local02
	mov	arg03, local03
	sub	ptr__dat__, ##2348
	call	#__vfswrite
LR__0002
	mov	ptra, fp
	call	#popregs_
_write_ret
	ret

_read
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	cmp	local01, #10 wcz
 if_b	jmp	#LR__0003
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0004
LR__0003
	qmul	local01, #44
	getqx	arg01
	add	ptr__dat__, ##2348
	add	arg01, ptr__dat__
	mov	arg02, local02
	mov	arg03, local03
	sub	ptr__dat__, ##2348
	call	#__vfsread
LR__0004
	mov	ptra, fp
	call	#popregs_
_read_ret
	ret

_lseek
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	cmp	local01, #10 wcz
 if_b	jmp	#LR__0005
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0009
LR__0005
	qmul	local01, #44
	getqx	local04
	add	ptr__dat__, ##2348
	add	local04, ptr__dat__
	add	local04, #40
	rdlong	local05, local04 wz
	sub	local04, #40
	sub	ptr__dat__, ##2348
 if_ne	jmp	#LR__0006
	add	ptr___system__dat__, ##564
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0009
LR__0006
	add	local04, #8
	rdlong	local05, local04
	sub	local04, #8
	test	local05, #64 wz
 if_e	jmp	#LR__0007
	add	local04, #8
	rdlong	local05, local04
	or	local05, #128
	wrlong	local05, local04
	sub	local04, #8
LR__0007
	add	local04, #40
	rdlong	local05, local04
	sub	local04, #40
	rdlong	local06, local05
	add	local05, #4
	rdlong	local07, local05
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, local03
	mov	local08, objptr
	mov	objptr, local06
	call	local07
	mov	objptr, local08
	mov	local09, result1
	cmps	local09, #0 wcz
 if_ae	jmp	#LR__0008
	neg	arg01, local09 wz
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0009
LR__0008
	mov	result1, local09
LR__0009
	mov	ptra, fp
	call	#popregs_
_lseek_ret
	ret

_chdir
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #64
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	mov	arg02, fp
	sub	fp, #8
	call	#_stat
	add	fp, #60
	wrlong	result1, fp
	rdlong	local01, fp wz
	sub	fp, #60
 if_e	jmp	#LR__0010
	add	fp, #60
	rdlong	result1, fp
	sub	fp, #60
	jmp	#LR__0014
LR__0010
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	and	local01, ##61440
	cmp	local01, ##4096 wz
 if_e	jmp	#LR__0011
	add	ptr___system__dat__, ##564
	wrlong	#13, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0014
LR__0011
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	rdbyte	local01, local02
	cmp	local01, #47 wz
 if_ne	jmp	#LR__0012
	add	ptr__dat__, ##1836
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##1836
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #4
	mov	arg03, #256
	call	#_strncpy
	jmp	#LR__0013
LR__0012
	add	ptr__dat__, ##2092
	mov	result1, ptr__dat__
	add	fp, #56
	wrlong	result1, fp
	mov	arg01, result1
	sub	fp, #56
	sub	ptr__dat__, #256
	mov	arg02, ptr__dat__
	sub	ptr__dat__, ##1836
	mov	arg03, #256
	call	#_strncpy
	add	fp, #56
	rdlong	arg01, fp
	sub	fp, #52
	rdlong	arg02, fp
	sub	fp, #4
	add	ptr__dat__, ##1836
	mov	arg03, ptr__dat__
	sub	ptr__dat__, ##1836
	call	#___getvfsforfile
LR__0013
	mov	result1, #0
LR__0014
	mov	ptra, fp
	call	#popregs_
_chdir_ret
	ret

___getftab
	cmp	arg01, #10 wcz
 if_ae	mov	result1, #0
 if_ae	jmp	#___getftab_ret
	qmul	arg01, #44
	getqx	result1
	add	ptr__dat__, ##2348
	add	result1, ptr__dat__
	sub	ptr__dat__, ##2348
___getftab_ret
	ret

_sprintf
	mov	COUNT_, #3
	call	#pushregs_
	add	ptra, #32
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdlong	local01, fp
	add	fp, #16
	wrlong	local01, fp
	sub	fp, #16
	rdlong	local01, fp
	add	local01, ##16777215
	add	fp, #20
	wrlong	local01, fp
	sub	fp, #12
	rdlong	local01, fp
	wrlong	local01, fp
	add	fp, #8
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, ptr____struct__anon_9b5668f900000005_sputc_
	call	#__system___make_methodptr
	mov	arg01, result1
	add	fp, #8
	rdlong	arg02, fp
	add	fp, #4
	mov	arg03, fp
	sub	fp, #12
	call	#__dofmt
	mov	local02, result1
	add	fp, #16
	wrlong	local02, fp
	add	fp, #4
	mov	arg01, #0
	mov	local03, objptr
	mov	objptr, fp
	sub	fp, #20
	call	#___struct__anon_9b5668f900000005_sputc
	mov	objptr, local03
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
	mov	ptra, fp
	call	#popregs_
_sprintf_ret
	ret

_printf
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #24
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #8
	mov	arg01, #1
	call	#___getftab
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #8
	rdlong	local01, fp
	wrlong	local01, fp
	add	fp, #8
	mov	arg01, fp
	sub	fp, #16
	mov	arg02, ptr____struct__fmtfile_putchar_
	call	#__system___make_methodptr
	mov	arg01, result1
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #4
	mov	arg03, fp
	sub	fp, #8
	call	#__dofmt
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_printf_ret
	ret

_strncpy
	mov	_var01, arg01
LR__0015
	sub	arg03, #1
	cmps	arg03, #0 wcz
 if_b	jmp	#LR__0016
	rdbyte	_var02, arg02
	wrbyte	_var02, _var01
	add	arg02, #1
	rdbyte	_var03, _var01 wz
	add	_var01, #1
 if_ne	jmp	#LR__0015
LR__0016
	loc	pa,	#(@LR__0018-@LR__0017)
	call	#FCACHE_LOAD_
LR__0017
	sub	arg03, #1
	cmps	arg03, #0 wcz
 if_ae	wrbyte	#0, _var01
 if_ae	add	_var01, #1
 if_ae	jmp	#LR__0017
LR__0018
	mov	result1, arg01
_strncpy_ret
	ret

_strncat
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, arg03
	mov	_var04, _var02 wz
 if_e	jmp	#LR__0023
	cmp	_var03, #0 wcz
 if_be	jmp	#LR__0023
	mov	_var05, _var01
	loc	pa,	#(@LR__0021-@LR__0019)
	call	#FCACHE_LOAD_
LR__0019
	rdbyte	_var06, _var05 wz
 if_ne	add	_var05, #1
 if_ne	jmp	#LR__0019
	mov	_var07, _var03
LR__0020
	mov	_var08, _var04
	mov	_var09, _var04
	add	_var09, #1
	mov	_var04, _var09
	rdbyte	_var10, _var08
	mov	_var06, _var10
	zerox	_var06, #7 wz
 if_e	jmp	#LR__0022
	mov	_var11, _var07
	sub	_var11, #1
	mov	_var07, _var11
	cmps	_var07, #0 wcz
 if_ae	wrbyte	_var10, _var05
 if_ae	add	_var05, #1
 if_ae	jmp	#LR__0020
LR__0021
LR__0022
	mov	_var06, #0
	wrbyte	#0, _var05
LR__0023
	mov	result1, _var01
_strncat_ret
	ret

_strncmp
	mov	_var01, arg01 wz
	mov	_var02, arg02
	mov	_var03, arg03
 if_ne	jmp	#LR__0024
	cmp	_var02, #0 wz
 if_ne	neg	_var04, #1
 if_e	mov	_var04, #0
	mov	result1, _var04
	jmp	#_strncmp_ret
LR__0024
	cmp	_var02, #0 wz
 if_e	mov	result1, #1
 if_e	jmp	#_strncmp_ret
	mov	_var05, _var03
	loc	pa,	#(@LR__0026-@LR__0025)
	call	#FCACHE_LOAD_
LR__0025
	rdbyte	_var06, _var01
	mov	_var07, _var02
	mov	_var08, _var02
	add	_var08, #1
	mov	_var02, _var08
	rdbyte	_var09, _var07
	mov	_var04, _var05
	sub	_var04, #1
	mov	_var05, _var04
	cmps	_var05, #0 wcz
	add	_var01, #1
 if_b	jmp	#LR__0027
	cmp	_var06, #0 wz
 if_e	jmp	#LR__0027
	cmp	_var06, _var09 wz
 if_e	jmp	#LR__0025
LR__0026
LR__0027
	cmps	_var05, #0 wcz
 if_b	mov	result1, #0
 if_b	jmp	#_strncmp_ret
	cmp	_var06, _var09 wz
 if_e	mov	result1, #0
 if_e	jmp	#_strncmp_ret
	cmp	_var06, #0 wz
 if_e	neg	result1, #1
 if_e	jmp	#_strncmp_ret
	cmp	_var09, #0 wz
 if_e	mov	result1, #1
 if_ne	mov	result1, _var06
 if_ne	sub	result1, _var09
_strncmp_ret
	ret

_Eve_Reset_HW
	mov	arg02, ##@LR__0948
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	drvl	#6
	mov	arg01, #50
	call	#__system___waitms
	drvh	#6
	mov	arg01, #200
	call	#__system___waitms
_Eve_Reset_HW_ret
	ret

_SPI_Disable
	mov	COUNT_, #1
	call	#pushregs_
	add	ptr__dat__, #4
	mov	arg01, #0
	mov	arg02, #0
	mov	local01, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, #4
	call	#_SPI_spin2_SendCommand
	mov	objptr, local01
	drvh	#5
	mov	ptra, fp
	call	#popregs_
_SPI_Disable_ret
	ret

_SPI_Write
	mov	COUNT_, #1
	call	#pushregs_
	add	ptr__dat__, #4
	zerox	arg01, #7
	and	arg01, #255
	mov	arg03, arg01
	mov	arg01, #0
	mov	arg02, #4
	mov	local01, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, #4
	call	#_SPI_spin2_Write8
	mov	objptr, local01
	mov	ptra, fp
	call	#popregs_
_SPI_Write_ret
	ret

_SPI_ReadBuffer
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	ptr__dat__, #4
	mov	arg01, #1
	mov	arg02, #4
	mov	local03, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, #4
	call	#_SPI_spin2_Read8
	mov	objptr, local03
	mov	local04, #0
LR__0028
	cmps	local04, local02 wcz
 if_ae	jmp	#LR__0029
	mov	local05, local04
	add	local05, local01
	add	ptr__dat__, #4
	mov	arg01, #1
	mov	arg02, #4
	mov	local06, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, #4
	call	#_SPI_spin2_Read8
	mov	objptr, local06
	wrbyte	result1, local05
	add	local04, #1
	jmp	#LR__0028
LR__0029
	mov	ptra, fp
	call	#popregs_
_SPI_ReadBuffer_ret
	ret

_FT81x_Init
	mov	COUNT_, #6
	call	#pushregs_
	add	ptr__dat__, #4
	mov	arg01, #10
	mov	arg02, #0
	mov	local01, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, #4
	call	#_SPI_spin2_start
	mov	objptr, local01
	mov	arg02, ##@LR__0949
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	call	#_Eve_Reset_HW
	mov	arg02, ##@LR__0950
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	wrpin	#204, #2
	wxpin	#12, #2
	wypin	##-2147483648, #2
	drvh	#2
	mov	arg02, ##@LR__0951
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, #66
	call	#_HostCommand
	mov	arg01, #68
	call	#_HostCommand
	mov	arg01, #300
	call	#__system___waitms
	mov	arg01, #0
	call	#_HostCommand
	mov	arg01, #300
	call	#__system___waitms
	mov	arg01, #66
	call	#_HostCommand
	mov	arg01, ##18017
	call	#_HostCommand3
	mov	arg01, #0
	call	#_HostCommand
	mov	arg01, #300
	call	#__system___waitms
LR__0030
	call	#_Cmd_READ_REG_ID
	mov	local02, result1
	zerox	local02, #7 wz
 if_e	jmp	#LR__0030
	mov	arg02, ##@LR__0952
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, ##786432
	call	#_rd32
	mov	local03, result1
	mov	local04, local03
	shr	local04, #16
	and	local03, ##65535
	mov	arg02, ##@LR__0953
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	zerox	local04, #15
	mov	arg01, #0
	mov	arg02, local04
	mov	arg03, ##327680
	mov	arg04, #16
	call	#__system___basic_print_unsigned
	zerox	local03, #15
	mov	arg01, #0
	mov	arg02, local03
	mov	arg03, ##327680
	mov	arg04, #16
	call	#__system___basic_print_unsigned
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, ##3153932
	mov	arg02, ##72000000
	call	#_wr32
	mov	arg01, ##3154168
	call	#_rd16
	mov	local05, result1
	zerox	local05, #15
	cmp	local05, ##4095 wz
 if_ne	jmp	#LR__0031
	mov	arg01, ##3182946
	call	#_rd16
	mov	local06, result1
	mov	arg01, ##3153952
	mov	arg02, #1
	call	#_wr32
	mov	arg01, ##3154168
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154172
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154176
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154032
	mov	arg02, #0
	call	#_wr32
	wrword	#0, ptr__dat__
	mov	arg01, ##3153952
	mov	arg02, #0
	call	#_wr32
	mov	arg01, #100
	call	#__system___waitms
	mov	arg01, ##3182946
	mov	arg02, local06
	call	#_wr16
	mov	arg02, ##@LR__0954
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg02, ##@LR__0955
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
LR__0031
	mov	arg01, ##3154076
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3154032
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3153964
	mov	arg02, ##1650
	call	#_wr16
	mov	arg01, ##3153968
	mov	arg02, #260
	call	#_wr16
	mov	arg01, ##3153976
	mov	arg02, #0
	call	#_wr16
	mov	arg01, ##3153980
	mov	arg02, #40
	call	#_wr16
	mov	arg01, ##3153984
	mov	arg02, ##750
	call	#_wr16
	mov	arg01, ##3153988
	mov	arg02, #25
	call	#_wr16
	mov	arg01, ##3153996
	mov	arg02, #0
	call	#_wr16
	mov	arg01, ##3154000
	mov	arg02, #5
	call	#_wr16
	mov	arg01, ##3154020
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3154028
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3153972
	mov	arg02, ##1280
	call	#_wr16
	mov	arg01, ##3153992
	mov	arg02, ##720
	call	#_wr16
	mov	arg01, ##3154024
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3154016
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3154200
	mov	arg02, ##1200
	call	#_wr16
	mov	arg01, ##3154180
	mov	arg02, #2
	call	#_wr8
	mov	arg01, ##3154184
	mov	arg02, #1
	call	#_wr8
	mov	arg01, ##3154196
	mov	arg02, #15
	call	#_wr8
	mov	arg01, ##3154072
	decod	arg02, #15
	call	#_wr16
	mov	arg01, ##3154076
	decod	arg02, #15
	call	#_wr16
	mov	arg01, ##3154128
	mov	arg02, #250
	call	#_wr16
	mov	arg01, ##3154132
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3145728
	decod	arg02, #25
	call	#_wr32
	mov	arg01, ##3145732
	mov	arg02, ##637534215
	call	#_wr32
	mov	arg01, ##3145736
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154004
	mov	arg02, #2
	call	#_wr8
	mov	arg01, ##3154032
	mov	arg02, #1
	call	#_wr8
	mov	arg02, ##@LR__0956
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, ##3154132
	mov	arg02, #128
	call	#_wr8
	mov	arg01, ##3154052
	mov	arg02, #128
	call	#_wr8
	mov	arg01, ##3154060
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3153932
	call	#_rd32
	mov	local02, result1
	mov	arg02, ##@LR__0957
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, local02
	mov	arg03, #0
	mov	arg04, #10
	call	#__system___basic_print_integer
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	ptra, fp
	call	#popregs_
_FT81x_Init_ret
	ret

_HostCommand
	drvl	#5
	call	#_SPI_Write
	mov	arg01, #0
	call	#_SPI_Write
	mov	arg01, #0
	call	#_SPI_Write
	call	#_SPI_Disable
_HostCommand_ret
	ret

_HostCommand3
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	drvl	#5
	mov	arg01, local01
	and	arg01, #255
	call	#_SPI_Write
	getbyte	arg01, local01, #1
	call	#_SPI_Write
	shr	local01, #16
	and	local01, #255
	mov	arg01, local01
	call	#_SPI_Write
	call	#_SPI_Disable
	mov	ptra, fp
	call	#popregs_
_HostCommand3_ret
	ret

_wr32
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	drvl	#5
	mov	arg01, local01
	shr	arg01, #16
	or	arg01, #128
	call	#_SPI_Write
	mov	arg01, local01
	shr	arg01, #8
	call	#_SPI_Write
	mov	arg01, local01
	call	#_SPI_Write
	mov	arg01, local02
	and	arg01, #255
	call	#_SPI_Write
	getbyte	arg01, local02, #1
	call	#_SPI_Write
	getbyte	arg01, local02, #2
	call	#_SPI_Write
	shr	local02, #24
	and	local02, #255
	mov	arg01, local02
	call	#_SPI_Write
	call	#_SPI_Disable
	mov	ptra, fp
	call	#popregs_
_wr32_ret
	ret

_wr16
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	drvl	#5
	mov	arg01, local01
	shr	arg01, #16
	or	arg01, #128
	call	#_SPI_Write
	mov	arg01, local01
	shr	arg01, #8
	call	#_SPI_Write
	mov	arg01, local01
	call	#_SPI_Write
	mov	arg01, local02
	zerox	arg01, #15
	and	arg01, #255
	call	#_SPI_Write
	zerox	local02, #15
	shr	local02, #8
	zerox	local02, #7
	and	local02, #255
	mov	arg01, local02
	call	#_SPI_Write
	call	#_SPI_Disable
	mov	ptra, fp
	call	#popregs_
_wr16_ret
	ret

_wr8
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	drvl	#5
	mov	arg01, local01
	shr	arg01, #16
	or	arg01, #128
	call	#_SPI_Write
	mov	arg01, local01
	shr	arg01, #8
	call	#_SPI_Write
	mov	arg01, local01
	call	#_SPI_Write
	mov	arg01, local02
	call	#_SPI_Write
	call	#_SPI_Disable
	mov	ptra, fp
	call	#popregs_
_wr8_ret
	ret

_rd32
	mov	COUNT_, #3
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	drvl	#5
	sub	fp, #4
	shr	arg01, #16
	and	arg01, #63
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	shr	arg01, #8
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #8
	mov	arg01, fp
	sub	fp, #8
	mov	arg02, #4
	call	#_SPI_ReadBuffer
	call	#_SPI_Disable
	add	fp, #8
	rdbyte	result1, fp
	add	fp, #1
	rdbyte	local01, fp
	shl	local01, #8
	add	result1, local01
	add	fp, #1
	rdbyte	local02, fp
	shl	local02, #16
	add	result1, local02
	add	fp, #1
	rdbyte	local03, fp
	shl	local03, #24
	add	result1, local03
	add	fp, #1
	wrlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_rd32_ret
	ret

_rd16
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #12
	add	fp, #4
	wrlong	arg01, fp
	drvl	#5
	sub	fp, #4
	shr	arg01, #16
	and	arg01, #63
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	shr	arg01, #8
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #8
	mov	arg01, fp
	sub	fp, #8
	mov	arg02, #2
	call	#_SPI_ReadBuffer
	call	#_SPI_Disable
	add	fp, #8
	rdbyte	result1, fp
	sub	fp, #8
	zerox	result1, #7
	mov	ptra, fp
	call	#popregs_
_rd16_ret
	ret

_rd8
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #12
	add	fp, #4
	wrlong	arg01, fp
	drvl	#5
	sub	fp, #4
	shr	arg01, #16
	and	arg01, #63
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	shr	arg01, #8
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #8
	mov	arg01, fp
	sub	fp, #8
	mov	arg02, #1
	call	#_SPI_ReadBuffer
	call	#_SPI_Disable
	add	fp, #8
	rdbyte	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_rd8_ret
	ret

_Send_CMD
	mov	COUNT_, #2
	call	#pushregs_
	rdword	local01, ptr__dat__
	add	local01, ##3178496
	mov	arg02, arg01
	mov	arg01, local01
	call	#_wr32
	rdword	local02, ptr__dat__
	add	local02, #4
	wrword	local02, ptr__dat__
	rdword	local02, ptr__dat__
	abs	local01, local02 wc
	and	local01, ##4095
 if_b	neg	local01, local01
	wrword	local01, ptr__dat__
	mov	ptra, fp
	call	#popregs_
_Send_CMD_ret
	ret

_Cmd_READ_REG_ID
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #8
	drvl	#5
	mov	arg01, #48
	call	#_SPI_Write
	mov	arg01, #32
	call	#_SPI_Write
	mov	arg01, #0
	call	#_SPI_Write
	add	fp, #4
	mov	arg01, fp
	sub	fp, #4
	mov	arg02, #1
	call	#_SPI_ReadBuffer
	call	#_SPI_Disable
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7
	cmp	local01, #124 wz
 if_ne	jmp	#LR__0032
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg02, ##@LR__0958
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	fp, #4
	rdbyte	arg02, fp
	sub	fp, #4
	zerox	arg02, #7
	mov	arg01, #0
	mov	arg03, ##196608
	mov	arg04, #16
	call	#__system___basic_print_unsigned
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	jmp	#LR__0033
LR__0032
	mov	arg02, ##@LR__0959
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #124
	mov	arg03, #0
	mov	arg04, #10
	call	#__system___basic_print_integer
	mov	arg02, ##@LR__0960
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	fp, #4
	rdbyte	arg02, fp
	sub	fp, #4
	zerox	arg02, #7
	mov	arg01, #0
	mov	arg03, #0
	mov	arg04, #10
	call	#__system___basic_print_integer
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #0
LR__0033
	mov	ptra, fp
	call	#popregs_
_Cmd_READ_REG_ID_ret
	ret

_Cmd_Text
	mov	COUNT_, #27
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, arg05
	mov	arg01, local05
	mov	local06, #0
	loc	pa,	#(@LR__0035-@LR__0034)
	call	#FCACHE_LOAD_
LR__0034
	rdbyte	local07, arg01 wz
 if_ne	add	local06, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0034
LR__0035
	mov	result1, local06
	mov	local08, result1 wz
 if_e	jmp	#LR__0044
	mov	local09, local08
	zerox	local09, #15
	abs	local10, local09 wc
	shr	local10, #2
 if_b	neg	local10, local10
	add	local10, #1
	qmul	local10, #4
	getqx	arg01
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local11, result1
	mov	local12, #0
	mov	local13, #0
	loc	pa,	#(@LR__0037-@LR__0036)
	call	#FCACHE_LOAD_
LR__0036
	mov	local10, local13
	zerox	local10, #15
	mov	local09, local08
	zerox	local09, #15
	abs	local14, local09 wc
	shr	local14, #2
 if_b	neg	local14, local14
	cmps	local10, local14 wcz
 if_ae	jmp	#LR__0038
	mov	local15, local13
	shl	local15, #2
	add	local15, local11
	mov	local16, local12
	zerox	local16, #15
	add	local16, #3
	add	local16, local05
	rdbyte	local17, local16
	shl	local17, #24
	mov	local18, local12
	zerox	local18, #15
	add	local18, #2
	add	local18, local05
	rdbyte	local19, local18
	shl	local19, #16
	or	local17, local19
	mov	local20, local12
	zerox	local20, #15
	add	local20, #1
	add	local20, local05
	rdbyte	local21, local20
	shl	local21, #8
	or	local17, local21
	mov	local22, local12
	add	local22, local05
	rdbyte	local23, local22
	or	local17, local23
	wrlong	local17, local15
	add	local13, #1
	zerox	local12, #15
	add	local12, #4
	jmp	#LR__0036
LR__0037
LR__0038
	mov	local24, #0
	loc	pa,	#(@LR__0040-@LR__0039)
	call	#FCACHE_LOAD_
LR__0039
	mov	local10, local24
	zerox	local10, #15
	mov	local09, local08
	zerox	local09, #15
	abs	local14, local09 wc
	and	local14, #3
 if_b	neg	local14, local14
	cmps	local10, local14 wcz
 if_ae	jmp	#LR__0041
	mov	local15, local13
	shl	local15, #2
	add	local15, local11
	mov	local25, local13
	shl	local25, #2
	add	local25, local11
	mov	local19, local12
	add	local19, local05
	rdbyte	local26, local19
	mov	local27, local24
	zerox	local27, #15
	shl	local27, #3
	shl	local26, local27
	rdlong	local17, local25
	or	local17, local26
	wrlong	local17, local15
	add	local24, #1
	add	local12, #1
	jmp	#LR__0039
LR__0040
LR__0041
	neg	arg01, #244
	call	#_Send_CMD
	zerox	local02, #15
	shl	local02, #16
	zerox	local01, #15
	or	local02, local01
	mov	arg01, local02
	call	#_Send_CMD
	mov	arg01, local04
	zerox	arg01, #15
	shl	arg01, #16
	mov	local09, local03
	zerox	local09, #15
	or	arg01, local09
	call	#_Send_CMD
	mov	local24, #0
LR__0042
	mov	local10, local24
	zerox	local10, #15
	mov	local09, local08
	zerox	local09, #15
	abs	local14, local09 wc
	shr	local14, #2
 if_b	neg	local14, local14
	cmps	local10, local14 wcz
 if_a	jmp	#LR__0043
	mov	local15, local24
	shl	local15, #2
	add	local15, local11
	rdlong	arg01, local15
	call	#_Send_CMD
	add	local24, #1
	jmp	#LR__0042
LR__0043
	mov	arg01, local11
	call	#__system___gc_free
LR__0044
	mov	ptra, fp
	call	#popregs_
_Cmd_Text_ret
	ret

_Wait4CoProFIFOEmpty
	mov	COUNT_, #5
	call	#pushregs_
	add	ptra, #32
	add	fp, #20
	wrbyte	#0, fp
	sub	fp, #20
	mov	arg01, ##3154172
	call	#_rd16
	mov	local01, result1
	add	fp, #8
	wrword	local01, fp
	sub	fp, #8
LR__0045
	mov	arg01, ##3154168
	call	#_rd16
	add	fp, #4
	wrword	result1, fp
	rdword	local02, fp
	sub	fp, #4
	zerox	local02, #15
	cmp	local02, ##4095 wz
 if_ne	jmp	#LR__0048
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg02, ##@LR__0961
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	fp, #24
	wrbyte	#0, fp
	sub	fp, #24
LR__0046
	add	fp, #24
	rdbyte	local01, fp
	sub	fp, #24
	zerox	local01, #7
	mov	arg01, ##3184640
	add	arg01, local01
	call	#_rd8
	add	fp, #12
	wrbyte	result1, fp
	add	fp, #12
	rdbyte	local03, fp
	add	local03, #1
	wrbyte	local03, fp
	sub	fp, #8
	mov	arg01, fp
	mov	arg02, ##@LR__0962
	sub	fp, #4
	rdbyte	local04, fp
	sub	fp, #12
	zerox	local04, #7
	mov	arg03, ptra
	wrlong	local04, ptra++
	call	#_sprintf
	sub	ptra, #4
	add	fp, #16
	mov	arg01, fp
	sub	fp, #16
	call	#_printf
	add	fp, #12
	rdbyte	local02, fp
	sub	fp, #12
	zerox	local02, #7 wz
 if_e	jmp	#LR__0047
	add	fp, #24
	rdbyte	local03, fp
	sub	fp, #24
	zerox	local03, #7
	cmp	local03, #128 wcz
 if_b	jmp	#LR__0046
LR__0047
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, ##3182946
	call	#_rd16
	add	fp, #28
	wrword	result1, fp
	sub	fp, #28
	mov	arg01, ##3153952
	mov	arg02, #1
	call	#_wr32
	mov	arg01, ##3154168
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154172
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154176
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154032
	mov	arg02, #0
	call	#_wr32
	wrword	#0, ptr__dat__
	rdword	local01, ptr__dat__
	add	fp, #8
	wrword	local01, fp
	sub	fp, #8
	mov	arg01, ##3153952
	mov	arg02, #0
	call	#_wr32
	mov	arg01, #100
	call	#__system___waitms
	add	fp, #28
	rdword	arg02, fp
	sub	fp, #28
	mov	arg01, ##3182946
	call	#_wr16
LR__0048
	add	fp, #20
	rdbyte	local02, fp
	rdbyte	local05, fp
	add	local05, #1
	wrbyte	local05, fp
	sub	fp, #20
	zerox	local02, #7
	cmp	local02, #100 wz
 if_ne	jmp	#LR__0049
	mov	arg02, ##@LR__0963
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	fp, #8
	rdword	arg02, fp
	sub	fp, #8
	zerox	arg02, #15
	mov	arg01, #0
	mov	arg03, #0
	mov	arg04, #10
	call	#__system___basic_print_unsigned
	mov	arg02, ##@LR__0964
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	fp, #4
	rdword	arg02, fp
	sub	fp, #4
	zerox	arg02, #15
	mov	arg01, #0
	mov	arg03, #0
	mov	arg04, #10
	call	#__system___basic_print_unsigned
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #0
	jmp	#LR__0050
LR__0049
	mov	arg01, #2
	call	#__system___waitms
	add	fp, #4
	rdword	local02, fp
	add	fp, #4
	rdword	local03, fp
	sub	fp, #8
	zerox	local03, #15
	cmp	local02, local03 wz
 if_ne	jmp	#LR__0045
	mov	result1, #1
LR__0050
	mov	ptra, fp
	call	#popregs_
_Wait4CoProFIFOEmpty_ret
	ret

_begin
	mov	COUNT_, #1
	call	#pushregs_
	mov	arg01, ##2000000
	call	#__system___setbaud
	mov	arg02, ##@LR__0965
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	call	#_FT81x_Init
	neg	arg01, #256
	call	#_Send_CMD
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#_ClearColorRGB
	mov	arg01, ##637534215
	call	#_Send_CMD
	call	#_swap
	add	ptr__dat__, ##1092
	wrbyte	#4, ptr__dat__
	sub	ptr__dat__, ##1092
	mov	local01, ##@LR__0966
	mov	arg01, #61
	mov	arg02, #60
	mov	arg03, #59
	mov	arg04, #58
	call	#__vfs_open_sdcardx
	mov	arg02, result1
	mov	arg01, local01
	call	#__mount
	mov	arg01, ##@LR__0967
	call	#_chdir
	mov	ptra, fp
	call	#popregs_
_begin_ret
	ret

_ClearColorRGB
	mov	COUNT_, #3
	call	#pushregs_
	and	arg01, #255
	shl	arg01, #16
	decod	local01, #25
	or	local01, arg01
	mov	local02, arg02
	and	local02, #255
	shl	local02, #8
	or	local01, local02
	mov	local03, arg03
	and	local03, #255
	or	local01, local03
	mov	arg01, local01
	call	#_Send_CMD
	mov	ptra, fp
	call	#popregs_
_ClearColorRGB_ret
	ret

_swap
	mov	arg01, #0
	call	#_Send_CMD
	neg	arg01, #255
	call	#_Send_CMD
	rdword	arg02, ptr__dat__
	mov	arg01, ##3154172
	call	#_wr16
	call	#_Wait4CoProFIFOEmpty
	neg	arg01, #256
	call	#_Send_CMD
_swap_ret
	ret

_loop
	mov	COUNT_, #4
	call	#pushregs_
	mov	arg01, #10
	mov	arg02, #20
	mov	arg03, #100
	call	#_ClearColorRGB
	mov	arg01, ##637534215
	call	#_Send_CMD
	add	ptr__dat__, ##1084
	rdlong	local01, ptr__dat__
	abs	local02, local01 wc
	shr	local02, #1
 if_b	neg	local02, local02
	add	ptr__dat__, #4
	rdlong	local03, ptr__dat__
	sub	ptr__dat__, ##1088
	abs	local04, local03 wc
	shr	local04, #1
 if_b	neg	local04, local04
	mov	arg05, ##@LR__0968
	mov	arg01, local02
	mov	arg02, local04
	mov	arg03, #31
	mov	arg04, ##1536
	call	#_Cmd_Text
	call	#_swap
	mov	ptra, fp
	call	#popregs_
_loop_ret
	ret

_main
	call	#_begin
LR__0051
	call	#_loop
	jmp	#LR__0051
_main_ret
	ret

__vfs_open_sdcardx
	mov	COUNT_, #6
	call	#pushregs_
	add	ptr__dat__, ##2884
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	arg05, arg04
	mov	arg01, #0
	mov	arg02, local01
	mov	arg03, local02
	mov	arg04, local03
	mov	local04, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, ##2884
	call	#_ff_cc_disk_setpins
	mov	objptr, local04
	mov	local05, result1 wz
 if_ne	jmp	#LR__0052
	add	ptr__dat__, ##2884
	mov	local06, ptr__dat__
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##2884
	mov	arg02, ##@LR__0969
	mov	arg03, #0
	mov	local04, objptr
	mov	objptr, local06
	call	#_ff_cc_f_mount
	mov	objptr, local04
	mov	local05, result1
LR__0052
	cmp	local05, #0 wz
 if_e	jmp	#LR__0053
	neg	arg01, local05 wz
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	mov	result1, #0
	jmp	#LR__0054
LR__0053
	add	ptr__ff_cc_dat__, #180
	mov	result1, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #180
LR__0054
	mov	ptra, fp
	call	#popregs_
__vfs_open_sdcardx_ret
	ret

___default_getc
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	add	local02, #8
	rdlong	local03, local02
	sub	local02, #8
	test	local03, #2 wz
 if_e	jmp	#LR__0055
	mov	arg01, local01
	call	#___default_flush
LR__0055
	add	local02, #8
	rdlong	local03, local02
	or	local03, #1
	wrlong	local03, local02
	sub	local02, #8
	rdlong	local04, local02 wz
 if_ne	jmp	#LR__0056
	mov	arg01, local01
	call	#___default_filbuf
	mov	local04, result1
LR__0056
	cmps	local04, #0 wcz
 if_be	neg	result1, #1
 if_be	jmp	#LR__0057
	sub	local04, #1
	wrlong	local04, local02
	add	local02, #4
	rdlong	local05, local02
	rdbyte	result1, local05
	add	local05, #1
	wrlong	local05, local02
LR__0057
	mov	ptra, fp
	call	#popregs_
___default_getc_ret
	ret

___default_putc
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local02
	add	local03, #8
	rdlong	local04, local03
	sub	local03, #8
	test	local04, #1 wz
 if_e	jmp	#LR__0058
	mov	arg01, local02
	call	#___default_flush
LR__0058
	add	local03, #8
	rdlong	local04, local03
	or	local04, #2
	wrlong	local04, local03
	sub	local03, #8
	rdlong	local05, local03
	mov	local06, local05
	add	local03, #12
	add	local06, local03
	wrbyte	local01, local06
	and	local01, #255
	add	local05, #1
	sub	local03, #12
	wrlong	local05, local03
	cmp	local05, ##1024 wz
 if_ne	jmp	#LR__0059
	mov	arg01, local02
	call	#___default_flush
	cmp	result1, #0 wz
 if_ne	neg	local01, #1
LR__0059
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
___default_putc_ret
	ret

___default_putc_terminal
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local02
	add	local03, #8
	rdlong	local04, local03
	sub	local03, #8
	test	local04, #1 wz
 if_e	jmp	#LR__0060
	mov	arg01, local02
	call	#___default_flush
LR__0060
	add	local03, #8
	rdlong	local04, local03
	or	local04, #2
	wrlong	local04, local03
	sub	local03, #8
	rdlong	local05, local03
	mov	local06, local05
	add	local03, #12
	add	local06, local03
	wrbyte	local01, local06
	and	local01, #255
	sub	local03, #12
	add	local05, #1
	wrlong	local05, local03
	cmp	local01, #10 wz
 if_e	jmp	#LR__0061
	cmp	local05, ##1024 wz
 if_ne	jmp	#LR__0062
LR__0061
	mov	arg01, local02
	call	#___default_flush
	cmp	result1, #0 wz
 if_ne	neg	local01, #1
LR__0062
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
___default_putc_terminal_ret
	ret

___default_flush
	mov	COUNT_, #15
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	rdlong	local03, local02
	add	local02, #8
	rdlong	local04, local02
	sub	local02, #8
	test	local04, #2 wz
 if_e	jmp	#LR__0065
	cmps	local03, #0 wcz
 if_be	jmp	#LR__0067
	add	local01, #8
	rdlong	local04, local01
	sub	local01, #8
	test	local04, #64 wz
 if_e	jmp	#LR__0064
	add	local01, #8
	rdlong	local04, local01
	sub	local01, #8
	test	local04, #128 wz
 if_e	jmp	#LR__0063
	add	local01, #40
	rdlong	local04, local01
	sub	local01, #40
	rdlong	local05, local04
	add	local04, #4
	rdlong	local06, local04
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #2
	mov	local07, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local07
	add	local01, #8
	rdlong	local04, local01
	andn	local04, #128
	wrlong	local04, local01
	sub	local01, #8
LR__0063
LR__0064
	add	local01, #16
	rdlong	local04, local01
	sub	local01, #16
	rdlong	local05, local04
	add	local04, #4
	rdlong	local06, local04
	add	local02, #12
	mov	arg02, local02
	sub	local02, #12
	mov	arg01, local01
	mov	arg03, local03
	mov	local08, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local08
	jmp	#LR__0067
LR__0065
	add	local02, #8
	rdlong	local04, local02
	sub	local02, #8
	test	local04, #1 wz
 if_e	jmp	#LR__0066
	cmp	local03, #0 wz
 if_e	jmp	#LR__0066
	add	local01, #40
	rdlong	local09, local01
	sub	local01, #40
	mov	local04, local09
	rdlong	local05, local04
	add	local04, #4
	rdlong	local10, local04
	sub	local04, #4
	mov	local06, local10
	mov	local11, local01
	mov	local12, local03
	neg	local12, local12
	mov	local13, local12
	mov	local07, #1
	mov	arg01, local11
	mov	arg02, local13
	mov	arg03, #1
	mov	local08, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local08
	mov	local14, result1
	mov	local15, local14
	cmps	local15, #0 wcz
 if_ae	mov	local15, local03
LR__0066
LR__0067
	wrlong	#0, local02
	add	local02, #4
	wrlong	#0, local02
	add	local02, #4
	wrlong	#0, local02
	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
___default_flush_ret
	ret

_stat
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	ptr__dat__, ##2092
	mov	result1, ptr__dat__
	sub	ptr__dat__, ##2092
	mov	local03, result1
	mov	arg01, local03
	mov	arg02, local01
	mov	arg03, #0
	call	#___getvfsforfile
	mov	local04, result1 wz
 if_e	jmp	#LR__0068
	add	local04, #44
	rdlong	local05, local04
	sub	local04, #44
	mov	local06, local05 wz
 if_ne	jmp	#LR__0069
LR__0068
	add	ptr___system__dat__, ##564
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0070
LR__0069
	mov	arg01, local02
	mov	arg02, #0
	mov	arg03, #48
	call	#__system____builtin_memset
	add	local04, #44
	rdlong	local06, local04
	rdlong	local05, local06
	add	local06, #4
	rdlong	local07, local06
	mov	arg01, local03
	mov	arg02, local02
	mov	local08, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local08
LR__0070
	mov	ptra, fp
	call	#popregs_
_stat_ret
	ret

___getvfsforfile
	mov	COUNT_, #18
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	rdbyte	local04, local02
	cmp	local04, #47 wz
 if_ne	jmp	#LR__0071
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#_strncpy
	jmp	#LR__0072
LR__0071
	add	ptr__dat__, ##1836
	mov	arg02, ptr__dat__
	sub	ptr__dat__, ##1836
	mov	arg01, local01
	mov	arg03, #256
	call	#_strncpy
	mov	arg02, ##@LR__0970
	mov	arg01, local01
	mov	arg03, #256
	call	#_strncat
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#_strncat
LR__0072
	mov	local05, #0
LR__0073
	cmps	local05, #4 wcz
 if_ae	jmp	#LR__0084
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##1804
	add	local04, ptr__dat__
	rdlong	local06, local04 wz
	sub	ptr__dat__, ##1804
 if_e	jmp	#LR__0083
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##1804
	add	local04, ptr__dat__
	rdlong	arg01, local04
	sub	ptr__dat__, ##1804
	mov	local07, #0
	loc	pa,	#(@LR__0075-@LR__0074)
	call	#FCACHE_LOAD_
LR__0074
	rdbyte	local08, arg01 wz
 if_ne	add	local07, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0074
LR__0075
	mov	result1, local07
	mov	local09, result1
	mov	local10, local09
	add	local10, local01
	rdbyte	local04, local10
	cmp	local04, #47 wz
 if_e	jmp	#LR__0076
	mov	local11, local09
	add	local11, local01
	rdbyte	local12, local11 wz
 if_ne	jmp	#LR__0082
LR__0076
	mov	arg01, local01
	mov	local13, local05
	shl	local13, #2
	add	ptr__dat__, ##1804
	add	local13, ptr__dat__
	rdlong	arg02, local13
	mov	arg03, local09
	sub	ptr__dat__, ##1804
	call	#_strncmp
	mov	local14, result1 wz
 if_ne	jmp	#LR__0082
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##1820
	add	local04, ptr__dat__
	rdlong	local15, local04
	sub	ptr__dat__, ##1820
	loc	pa,	#(@LR__0079-@LR__0077)
	call	#FCACHE_LOAD_
LR__0077
	mov	local06, local09
	add	local06, #1
	add	local06, local01
	rdbyte	local04, local06
	cmp	local04, #46 wz
 if_ne	jmp	#LR__0080
	mov	local16, local09
	add	local16, #2
	add	local16, local01
	rdbyte	local11, local16
	cmp	local11, #47 wz
 if_e	jmp	#LR__0078
	mov	local17, local09
	add	local17, #2
	add	local17, local01
	rdbyte	local18, local17 wz
 if_ne	jmp	#LR__0080
LR__0078
	add	local09, #1
	jmp	#LR__0077
LR__0079
LR__0080
	cmp	local03, #0 wz
 if_e	jmp	#LR__0081
	mov	arg01, local03
	mov	arg02, local01
	mov	arg03, #256
	call	#_strncpy
LR__0081
	mov	arg01, local01
	mov	arg02, local01
	add	arg02, local09
	add	arg02, #1
	call	#__system____builtin_strcpy
	mov	result1, local15
	jmp	#LR__0085
LR__0082
LR__0083
	add	local05, #1
	jmp	#LR__0073
LR__0084
	add	ptr___system__dat__, ##560
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##560
LR__0085
	mov	ptra, fp
	call	#popregs_
___getvfsforfile_ret
	ret

__mount
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	neg	local03, #1
	rdbyte	local04, local01
	cmp	local04, #47 wz
 if_e	jmp	#LR__0086
	add	ptr___system__dat__, ##564
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0097
LR__0086
	mov	local05, #0
LR__0087
	cmps	local05, #4 wcz
 if_ae	jmp	#LR__0093
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##1804
	add	local04, ptr__dat__
	rdlong	local06, local04 wz
	sub	ptr__dat__, ##1804
 if_ne	jmp	#LR__0088
	cmps	local03, #0 wcz
 if_b	mov	local03, local05
 if_b	jmp	#LR__0092
LR__0088
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##1804
	add	local04, ptr__dat__
	rdlong	arg01, local04
	sub	ptr__dat__, ##1804
	mov	local07, #0
	loc	pa,	#(@LR__0090-@LR__0089)
	call	#FCACHE_LOAD_
LR__0089
	rdbyte	local08, arg01 wz
 if_ne	add	local07, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0089
LR__0090
	mov	result1, local07
	mov	local09, result1
	mov	local10, local09
	add	local10, local01
	rdbyte	local04, local10
	cmp	local04, #47 wz
 if_ne	jmp	#LR__0091
	mov	arg01, local01
	mov	local11, local05
	shl	local11, #2
	add	ptr__dat__, ##1804
	add	local11, ptr__dat__
	rdlong	arg02, local11
	mov	arg03, local09
	sub	ptr__dat__, ##1804
	call	#_strncmp
	cmp	result1, #0 wz
 if_e	mov	local03, local05
 if_e	jmp	#LR__0093
LR__0091
LR__0092
	add	local05, #1
	jmp	#LR__0087
LR__0093
	cmp	local03, ##-1 wz
 if_ne	jmp	#LR__0094
	add	ptr___system__dat__, ##564
	wrlong	#11, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0097
LR__0094
	mov	local05, local03
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##1820
	add	local04, ptr__dat__
	wrlong	local02, local04
	cmp	local02, #0 wz
	sub	ptr__dat__, ##1820
 if_ne	jmp	#LR__0095
	shl	local05, #2
	add	ptr__dat__, ##1804
	add	local05, ptr__dat__
	wrlong	#0, local05
	sub	ptr__dat__, ##1804
	jmp	#LR__0096
LR__0095
	shl	local05, #2
	add	ptr__dat__, ##1804
	add	local05, ptr__dat__
	wrlong	local01, local05
	sub	ptr__dat__, ##1804
LR__0096
	mov	result1, #0
LR__0097
	mov	ptra, fp
	call	#popregs_
__mount_ret
	ret

__dofmt
	mov	COUNT_, #11
	call	#pushregs_
	add	ptra, #60
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	mov	local01, #0
	add	fp, #16
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	sub	fp, #48
LR__0098
	add	fp, #8
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	rdbyte	local01, local02
	add	fp, #8
	wrlong	local01, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0124
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #37 wz
 if_e	jmp	#LR__0100
	add	fp, #4
	rdlong	local01, fp
	rdlong	local02, local01
	add	local01, #4
	rdlong	local04, local01
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #16
	mov	local05, objptr
	mov	objptr, local02
	call	local04
	mov	objptr, local05
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmps	result1, #0 wcz
 if_ae	jmp	#LR__0099
	add	fp, #20
	rdlong	result1, fp
	sub	fp, #20
	jmp	#LR__0125
LR__0099
	add	fp, #28
	rdlong	local04, fp
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #28
	jmp	#LR__0098
LR__0100
	add	fp, #8
	rdlong	arg01, fp
	add	fp, #24
	mov	arg02, fp
	sub	fp, #32
	call	#_parseflags_0781
	mov	local06, result1
	add	fp, #8
	wrlong	local06, fp
	add	fp, #24
	rdlong	local01, fp
	shr	local01, #24
	and	local01, #3
	add	fp, #16
	wrlong	local01, fp
	sub	fp, #40
	mov	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #12
	call	#_parseint_0774
	mov	local06, result1
	add	fp, #36
	wrlong	local06, fp
	sub	fp, #28
	rdlong	local02, fp
	rdbyte	local01, local02
	add	fp, #8
	wrlong	local01, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0124
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #46 wz
 if_ne	jmp	#LR__0101
	add	fp, #8
	rdlong	local04, fp
	add	local04, #1
	wrlong	local04, fp
	mov	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #12
	call	#_parseint_0774
	mov	local01, result1
	add	local01, #1
	add	fp, #40
	wrlong	local01, fp
	sub	fp, #32
	rdlong	local02, fp
	rdbyte	local01, local02
	add	fp, #8
	wrlong	local01, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0124
LR__0101
	add	fp, #8
	rdlong	arg01, fp
	add	fp, #36
	mov	arg02, fp
	sub	fp, #44
	call	#_parsesize_0785
	add	fp, #8
	wrlong	result1, fp
	mov	local02, result1
	mov	local03, result1
	add	local03, #1
	wrlong	local03, fp
	rdbyte	local01, local02
	add	fp, #8
	wrlong	local01, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0124
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #37 wz
 if_ne	jmp	#LR__0102
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	sub	fp, #32
	mov	arg03, #37
	call	#__system___fmtchar
	mov	local07, result1
	add	fp, #20
	wrlong	local07, fp
	sub	fp, #20
	jmp	#LR__0098
LR__0102
	add	fp, #20
	wrlong	#0, fp
	sub	fp, #8
	rdlong	local02, fp
	rdlong	local03, local02
	rdlong	local01, local03
	mov	local07, local02
	mov	local06, local07
	mov	local08, local02
	mov	local05, local08
	rdlong	local09, local05
	add	local09, #4
	wrlong	local09, local06
	add	fp, #40
	wrlong	local01, fp
	sub	fp, #36
	rdlong	local01, fp
	sub	fp, #16
	cmps	local01, #65 wcz
 if_b	jmp	#LR__0103
	add	fp, #16
	rdlong	local03, fp
	sub	fp, #16
	mov	local04, local03
	cmps	local04, #90 wcz
 if_a	jmp	#LR__0103
	add	fp, #32
	rdlong	local01, fp
	bith	local01, #29
	wrlong	local01, fp
	sub	fp, #16
	rdlong	local02, fp
	sub	local02, #65
	wrlong	local02, fp
	mov	local01, local02
	add	local01, #97
	wrlong	local01, fp
	sub	fp, #16
LR__0103
	add	fp, #40
	rdlong	local01, fp
	sub	fp, #40
	cmps	local01, #0 wcz
 if_b	add	fp, #40
 if_b	wrlong	#0, fp
 if_b	sub	fp, #40
	add	fp, #40
	rdlong	local01, fp
	sub	fp, #40
	cmps	local01, #63 wcz
 if_a	add	fp, #40
 if_a	wrlong	#63, fp
 if_a	sub	fp, #40
	add	fp, #36
	rdlong	local01, fp
	sub	fp, #36
	cmps	local01, #0 wcz
 if_ae	jmp	#LR__0104
	add	fp, #36
	rdlong	local01, fp
	neg	local01, local01
	wrlong	local01, fp
	sub	fp, #4
	rdlong	local01, fp
	bitl	local01, #54
	wrlong	local01, fp
	bith	local01, #22
	wrlong	local01, fp
	add	fp, #16
	wrlong	#1, fp
	sub	fp, #48
LR__0104
	add	fp, #32
	rdlong	local01, fp
	add	fp, #4
	rdlong	local04, fp
	shl	local04, #8
	or	local01, local04
	sub	fp, #4
	wrlong	local01, fp
	add	fp, #8
	rdlong	local04, fp
	shl	local04, #16
	or	local01, local04
	sub	fp, #8
	wrlong	local01, fp
	sub	fp, #16
	rdlong	local10, fp
	sub	fp, #16
	cmp	local10, #99 wz
 if_e	jmp	#LR__0105
	cmp	local10, #115 wz
 if_e	jmp	#LR__0106
	cmp	local10, #100 wz
 if_e	jmp	#LR__0108
	cmp	local10, #105 wz
 if_e	jmp	#LR__0109
	cmp	local10, #117 wz
 if_e	jmp	#LR__0110
	cmp	local10, #111 wz
 if_e	jmp	#LR__0113
	cmp	local10, #120 wz
 if_e	jmp	#LR__0115
	cmp	local10, #97 wz
 if_e	jmp	#LR__0117
	cmp	local10, #101 wz
 if_e	jmp	#LR__0118
	cmp	local10, #102 wz
 if_e	jmp	#LR__0119
	cmp	local10, #103 wz
 if_e	jmp	#LR__0120
	jmp	#LR__0121
LR__0105
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local07, fp
	sub	fp, #52
	mov	arg03, local07
	call	#__system___fmtchar
	mov	local09, result1
	add	fp, #20
	wrlong	local09, fp
	sub	fp, #20
	jmp	#LR__0122
LR__0106
	add	fp, #40
	rdlong	local01, fp wz
	sub	fp, #40
 if_e	jmp	#LR__0107
	add	fp, #32
	rdlong	local01, fp
	add	fp, #8
	rdlong	local04, fp
	sub	local04, #1
	or	local01, local04
	sub	fp, #8
	wrlong	local01, fp
	sub	fp, #32
LR__0107
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local07, fp
	sub	fp, #52
	mov	arg03, local07
	call	#__system___fmtstr
	mov	local09, result1
	add	fp, #20
	wrlong	local09, fp
	sub	fp, #20
	jmp	#LR__0122
LR__0108
LR__0109
LR__0110
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #117 wz
 if_ne	jmp	#LR__0111
	add	fp, #32
	rdlong	local01, fp
	bith	local01, #58
	wrlong	local01, fp
	sub	fp, #32
LR__0111
	add	fp, #40
	rdlong	local01, fp wz
	sub	fp, #40
 if_ne	jmp	#LR__0112
	add	fp, #48
	rdlong	local04, fp
	sub	fp, #48
	cmp	local04, #2 wz
 if_ne	jmp	#LR__0112
	add	fp, #32
	rdlong	local02, fp
	mov	local01, local02
	add	fp, #4
	rdlong	local03, fp
	mov	local04, local03
	add	local04, #1
	shl	local04, #16
	or	local01, local04
	sub	fp, #4
	wrlong	local01, fp
	sub	fp, #32
LR__0112
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local07, fp
	sub	fp, #52
	mov	arg03, local07
	mov	local09, #10
	mov	arg04, #10
	call	#__system___fmtnum
	mov	local05, result1
	add	fp, #20
	wrlong	local05, fp
	sub	fp, #20
	jmp	#LR__0122
LR__0113
	add	fp, #32
	rdlong	local01, fp
	bith	local01, #58
	wrlong	local01, fp
	add	fp, #8
	rdlong	local01, fp wz
	sub	fp, #40
 if_ne	jmp	#LR__0114
	add	fp, #48
	rdlong	local04, fp
	sub	fp, #48
	cmp	local04, #2 wz
 if_ne	jmp	#LR__0114
	add	fp, #32
	rdlong	local02, fp
	mov	local01, local02
	add	fp, #4
	rdlong	local03, fp
	mov	local04, local03
	add	local04, #1
	shl	local04, #16
	or	local01, local04
	sub	fp, #4
	wrlong	local01, fp
	sub	fp, #32
LR__0114
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local07, fp
	sub	fp, #52
	mov	arg03, local07
	mov	local09, #8
	mov	arg04, #8
	call	#__system___fmtnum
	mov	local05, result1
	add	fp, #20
	wrlong	local05, fp
	sub	fp, #20
	jmp	#LR__0122
LR__0115
	add	fp, #40
	rdlong	local01, fp wz
	sub	fp, #40
 if_ne	jmp	#LR__0116
	add	fp, #48
	rdlong	local04, fp
	sub	fp, #48
	cmp	local04, #2 wz
 if_ne	jmp	#LR__0116
	add	fp, #32
	rdlong	local02, fp
	mov	local01, local02
	add	fp, #4
	rdlong	local03, fp
	mov	local04, local03
	add	local04, #1
	shl	local04, #16
	or	local01, local04
	sub	fp, #4
	wrlong	local01, fp
	sub	fp, #32
LR__0116
	add	fp, #32
	rdlong	local01, fp
	bith	local01, #58
	wrlong	local01, fp
	sub	fp, #28
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local07, fp
	sub	fp, #52
	mov	local09, #16
	mov	arg03, local07
	mov	arg04, #16
	call	#__system___fmtnum
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0122
LR__0117
LR__0118
LR__0119
LR__0120
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	local04, fp
	add	fp, #20
	rdlong	local07, fp
	mov	result1, local07
	mov	local09, result1
	sub	fp, #36
	rdlong	local08, fp
	sub	fp, #16
	mov	local05, local08
	mov	arg02, local04
	mov	arg03, local09
	mov	arg04, local05
	call	#__system___fmtfloat
	mov	local11, result1
	add	fp, #20
	wrlong	local11, fp
	sub	fp, #20
	jmp	#LR__0122
LR__0121
	add	fp, #4
	rdlong	local02, fp
	mov	local01, local02
	add	fp, #28
	rdlong	local03, fp
	sub	fp, #32
	mov	local04, local03
	mov	local06, ##@LR__0971
	mov	local07, local06
	mov	arg01, local01
	mov	arg02, local04
	mov	arg03, local07
	call	#__system___fmtstr
	mov	local09, result1
	add	fp, #20
	wrlong	local09, fp
	sub	fp, #20
LR__0122
	add	fp, #20
	rdlong	local01, fp
	sub	fp, #20
	cmps	local01, #0 wcz
 if_ae	jmp	#LR__0123
	add	fp, #20
	rdlong	result1, fp
	sub	fp, #20
	jmp	#LR__0125
LR__0123
	add	fp, #28
	rdlong	local01, fp
	sub	fp, #8
	rdlong	local03, fp
	add	local01, local03
	add	fp, #8
	wrlong	local01, fp
	sub	fp, #28
	jmp	#LR__0098
LR__0124
	add	fp, #28
	rdlong	result1, fp
	sub	fp, #28
LR__0125
	mov	ptra, fp
	call	#popregs_
__dofmt_ret
	ret

__rxtxioctl_0322
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	cmp	local01, #256 wz
 if_e	jmp	#LR__0126
	cmp	local01, #257 wz
 if_e	jmp	#LR__0127
	jmp	#LR__0128
LR__0126
	add	ptr___system__dat__, #8
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, #8
	wrlong	result1, local02
	mov	result1, #0
	jmp	#LR__0129
LR__0127
	rdlong	arg01, local02
	add	ptr___system__dat__, #8
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #8
	mov	result1, #0
	jmp	#LR__0129
LR__0128
	add	ptr___system__dat__, ##564
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
LR__0129
	mov	ptra, fp
	call	#popregs_
__rxtxioctl_0322_ret
	ret

___dummy_flush_0323
	mov	result1, #0
___dummy_flush_0323_ret
	ret

__vfswrite
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, local02
	add	local01, #8
	rdlong	local05, local01
	sub	local01, #8
	test	local05, #2 wz
 if_ne	jmp	#LR__0130
	add	ptr___system__dat__, ##564
	wrlong	#6, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0138
LR__0130
	add	local01, #8
	rdlong	local05, local01
	sub	local01, #8
	test	local05, #64 wz
 if_e	jmp	#LR__0132
	add	local01, #8
	rdlong	local05, local01
	sub	local01, #8
	test	local05, #128 wz
 if_e	jmp	#LR__0131
	add	local01, #40
	rdlong	local05, local01
	sub	local01, #40
	rdlong	local06, local05
	add	local05, #4
	rdlong	local07, local05
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #2
	mov	local08, objptr
	mov	objptr, local06
	call	local07
	mov	objptr, local08
	add	local01, #8
	rdlong	local05, local01
	andn	local05, #128
	wrlong	local05, local01
	sub	local01, #8
LR__0131
LR__0132
	add	local01, #16
	rdlong	local05, local01 wz
	sub	local01, #16
 if_e	jmp	#LR__0134
	add	local01, #16
	rdlong	local05, local01
	sub	local01, #16
	rdlong	local06, local05
	add	local05, #4
	rdlong	local07, local05
	mov	arg02, local02
	mov	arg03, local03
	mov	arg01, local01
	mov	local08, objptr
	mov	objptr, local06
	call	local07
	mov	objptr, local08
	mov	local09, result1
	cmps	local09, #0 wcz
 if_ae	jmp	#LR__0133
	add	local01, #8
	rdlong	local05, local01
	or	local05, #32
	wrlong	local05, local01
	add	ptr___system__dat__, ##564
	wrlong	local09, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	cmp	local09, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0138
LR__0133
	mov	result1, local09
	jmp	#LR__0138
LR__0134
	add	local01, #20
	rdlong	local10, local01 wz
	sub	local01, #20
 if_ne	jmp	#LR__0135
	add	ptr___system__dat__, ##564
	wrlong	#6, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0138
LR__0135
	mov	local09, #0
LR__0136
	cmp	local03, #0 wcz
 if_be	jmp	#LR__0137
	mov	local05, local10
	rdlong	local06, local05
	add	local05, #4
	rdlong	local07, local05
	rdbyte	arg01, local04
	mov	arg02, local01
	mov	local11, objptr
	mov	objptr, local06
	add	local04, #1
	call	local07
	mov	objptr, local11
	add	local09, result1
	sub	local03, #1
	jmp	#LR__0136
LR__0137
	mov	result1, local09
LR__0138
	mov	ptra, fp
	call	#popregs_
__vfswrite_ret
	ret

__vfsread
	mov	COUNT_, #14
	call	#pushregs_
	add	ptra, #40
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #4
	rdlong	local01, fp
	add	fp, #20
	wrlong	local01, fp
	add	fp, #4
	wrlong	#0, fp
	sub	fp, #28
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #8
	rdlong	local01, local02
	test	local01, #1 wz
 if_ne	jmp	#LR__0139
	add	ptr___system__dat__, ##564
	wrlong	#6, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0147
LR__0139
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	add	local01, #12
	rdlong	local03, local01 wz
 if_e	jmp	#LR__0141
	add	fp, #4
	rdlong	local04, fp
	add	local04, #12
	rdlong	local01, local04
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	sub	fp, #12
	mov	local05, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local05
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #16
	cmps	result1, #0 wcz
 if_ae	jmp	#LR__0140
	add	fp, #4
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #8
	rdlong	local03, local04
	or	local03, #32
	add	local01, #8
	wrlong	local03, local01
	add	fp, #12
	rdlong	arg01, fp wz
	sub	fp, #16
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0147
LR__0140
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
	jmp	#LR__0147
LR__0141
	add	fp, #4
	rdlong	local01, fp
	add	local01, #24
	rdlong	local03, local01
	add	fp, #20
	wrlong	local03, fp
	rdlong	local01, fp wz
	sub	fp, #24
 if_ne	jmp	#LR__0142
	add	ptr___system__dat__, ##564
	wrlong	#6, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0147
LR__0142
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	add	local01, #32
	rdlong	local03, local01 wz
 if_e	jmp	#LR__0144
	add	fp, #4
	rdlong	local06, fp
	mov	local04, local06
	add	local04, #32
	rdlong	local07, local04
	mov	local01, local07
	rdlong	local02, local01
	add	local01, #4
	rdlong	local08, local01
	mov	local03, local08
	mov	local09, local06
	mov	local10, local09
	mov	local11, #256
	add	fp, #32
	mov	local12, fp
	mov	local13, local12
	mov	arg01, local10
	mov	arg02, #256
	mov	arg03, local13
	mov	local14, objptr
	mov	objptr, local02
	sub	fp, #36
	call	local03
	mov	objptr, local14
	mov	local05, result1
	add	fp, #16
	wrlong	local05, fp
	rdlong	local02, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0143
	add	fp, #36
	rdlong	local04, fp
	sub	fp, #36
	mov	local03, local04
	and	local03, #2 wz
 if_e	jmp	#LR__0143
	mov	local01, #1
	add	fp, #32
	wrlong	#1, fp
	sub	fp, #32
LR__0143
LR__0144
	add	fp, #16
	wrlong	#0, fp
	sub	fp, #16
LR__0145
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #0 wcz
 if_be	jmp	#LR__0146
	add	fp, #24
	rdlong	local01, fp
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	sub	fp, #20
	rdlong	arg01, fp
	sub	fp, #4
	mov	local10, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local10
	mov	local09, result1
	add	fp, #20
	wrlong	local09, fp
	sub	fp, #20
	cmps	local09, #0 wcz
 if_b	jmp	#LR__0146
	add	fp, #28
	rdlong	local01, fp
	mov	local03, local01
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #8
	rdlong	local06, fp
	wrbyte	local06, local01
	sub	fp, #4
	rdlong	local01, fp
	add	local01, #1
	wrlong	local01, fp
	sub	fp, #4
	rdlong	local01, fp
	sub	local01, #1
	wrlong	local01, fp
	add	fp, #20
	rdlong	local01, fp wz
	sub	fp, #32
 if_e	jmp	#LR__0145
	add	fp, #20
	rdlong	local03, fp
	sub	fp, #20
	cmp	local03, #10 wz
 if_ne	jmp	#LR__0145
LR__0146
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
LR__0147
	mov	ptra, fp
	call	#popregs_
__vfsread_ret
	ret

___default_filbuf
	mov	COUNT_, #6
	call	#pushregs_
	rdlong	local01, arg01
	add	arg01, #12
	rdlong	local02, arg01
	sub	arg01, #12
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	add	local01, #12
	mov	arg02, local01
	sub	local01, #12
	decod	arg03, #10
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	local06, result1
	cmps	local06, #0 wcz
 if_b	neg	result1, #1
 if_b	jmp	#LR__0148
	wrlong	local06, local01
	add	local01, #12
	mov	local02, local01
	sub	local01, #8
	wrlong	local02, local01
	add	local01, #4
	rdlong	local02, local01
	or	local02, #1
	wrlong	local02, local01
	mov	result1, local06
LR__0148
	mov	ptra, fp
	call	#popregs_
___default_filbuf_ret
	ret

_parseint_0774
	mov	_var01, arg01
	mov	_var02, arg02
	rdlong	_var03, _var01
	mov	_var04, #0
	rdbyte	_var05, _var03
	cmp	_var05, #42 wz
 if_ne	jmp	#LR__0149
	rdlong	_var06, _var02
	rdlong	_var04, _var06
	add	_var06, #4
	wrlong	_var06, _var02
	add	_var03, #1
	jmp	#LR__0152
LR__0149
LR__0150
	cmps	_var05, #48 wcz
 if_b	jmp	#LR__0151
	cmps	_var05, #57 wcz
 if_a	jmp	#LR__0151
	mov	_var07, _var04
	shl	_var07, #2
	add	_var07, _var04
	shl	_var07, #1
	sub	_var05, #48
	add	_var07, _var05
	mov	_var04, _var07
	add	_var03, #1
	rdbyte	_var05, _var03
	jmp	#LR__0150
LR__0151
LR__0152
	wrlong	_var03, _var01
	mov	result1, _var04
_parseint_0774_ret
	ret

_parseflags_0781
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, #0
	mov	_var04, #1
	mov	_var05, #0
	mov	_var06, #2
	mov	_var07, #0
LR__0153
	cmp	_var07, #0 wz
 if_ne	jmp	#LR__0160
	rdbyte	_var08, _var01
	cmp	_var08, #45 wz
	add	_var01, #1
 if_e	jmp	#LR__0154
	cmp	_var08, #35 wz
 if_e	jmp	#LR__0155
	cmp	_var08, #43 wz
 if_e	jmp	#LR__0156
	cmp	_var08, #48 wz
 if_e	jmp	#LR__0157
	cmp	_var08, #32 wz
 if_e	jmp	#LR__0158
	jmp	#LR__0159
LR__0154
	mov	_var06, #1
	jmp	#LR__0153
LR__0155
	or	_var03, #28
	jmp	#LR__0153
LR__0156
	mov	_var05, #1
	jmp	#LR__0153
LR__0157
	mov	_var04, #2
	jmp	#LR__0153
LR__0158
	mov	_var04, #1
	jmp	#LR__0153
LR__0159
	mov	_var07, #1
	jmp	#LR__0153
LR__0160
	shl	_var04, #24
	or	_var03, _var04
	shl	_var05, #26
	or	_var03, _var05
	shl	_var06, #22
	or	_var03, _var06
	wrlong	_var03, _var02
	sub	_var01, #1
	mov	result1, _var01
_parseflags_0781_ret
	ret

_parsesize_0785
	mov	_var01, arg02
	mov	_var02, #4
	mov	_var03, #0
	mov	_var04, arg01
	mov	_var05, arg01
	add	_var05, #1
	mov	_var06, _var05
	rdbyte	_var07, _var04
	mov	_var08, _var07
	cmp	_var08, #108 wz
 if_e	jmp	#LR__0161
	cmp	_var08, #104 wz
 if_e	jmp	#LR__0162
	cmp	_var08, #106 wz
 if_e	jmp	#LR__0163
	cmp	_var08, #122 wz
 if_e	jmp	#LR__0164
	cmp	_var08, #116 wz
 if_e	jmp	#LR__0165
	cmp	_var08, #76 wz
 if_e	jmp	#LR__0166
	jmp	#LR__0167
LR__0161
	mov	_var02, #4
	rdbyte	_var09, _var06
	cmp	_var09, #108 wz
 if_e	mov	_var02, #8
 if_e	add	_var06, #1
	jmp	#LR__0168
LR__0162
	mov	_var02, #2
	rdbyte	_var09, _var06
	cmp	_var09, #104 wz
 if_e	mov	_var02, #1
 if_e	add	_var06, #1
	jmp	#LR__0168
LR__0163
	mov	_var02, #8
	jmp	#LR__0168
LR__0164
LR__0165
	mov	_var02, #4
	jmp	#LR__0168
LR__0166
	mov	_var02, #8
	jmp	#LR__0168
LR__0167
	mov	_var09, _var06
	sub	_var09, #1
	mov	_var06, _var09
LR__0168
	wrlong	_var02, _var01
	mov	result1, _var06
_parsesize_0785_ret
	ret

_SPI_spin2_start
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #8
	wrlong	#0, fp
	add	fp, #12
	wrlong	#16, fp
	add	objptr, #4
	wrlong	#0, objptr
	rdlong	arg01, fp
	sub	fp, #12
	mov	arg03, objptr
	sub	objptr, #4
	setq	arg03
	coginit	arg01, ptr__SPI_spin2_dat__ wc
 if_b	neg	arg01, #1
	mov	result1, arg01
	mov	local01, result1
	add	local01, #1
	wrlong	local01, objptr
	wrlong	local01, fp
	add	fp, #4
	mov	arg02, fp
	sub	fp, #4
	mov	arg01, #1
	call	#_SPI_spin2_SendCommand
	rdlong	result1, fp
	mov	ptra, fp
	call	#popregs_
_SPI_spin2_start_ret
	ret

_SPI_spin2_Write8
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #12
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	mov	arg02, fp
	mov	arg01, #3
	call	#_SPI_spin2_SendCommand
	mov	ptra, fp
	call	#popregs_
_SPI_spin2_Write8_ret
	ret

_SPI_spin2_Read8
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #8
	wrlong	#0, fp
	mov	local01, fp
	add	fp, #12
	wrlong	local01, fp
	sub	fp, #8
	mov	arg02, fp
	sub	fp, #4
	mov	arg01, #2
	call	#_SPI_spin2_SendCommand
	loc	pa,	#(@LR__0170-@LR__0169)
	call	#FCACHE_LOAD_
LR__0169
	add	objptr, #4
	rdlong	local01, objptr wz
	sub	objptr, #4
 if_ne	jmp	#LR__0169
LR__0170
	rdlong	result1, fp
	mov	ptra, fp
	call	#popregs_
_SPI_spin2_Read8_ret
	ret

_SPI_spin2_SendCommand
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	loc	pa,	#(@LR__0172-@LR__0171)
	call	#FCACHE_LOAD_
LR__0171
	add	objptr, #4
	rdlong	local03, objptr wz
	sub	objptr, #4
 if_ne	jmp	#LR__0171
LR__0172
	add	objptr, #8
	mov	arg01, objptr
	sub	objptr, #8
	mov	arg02, local02
	mov	arg03, #4
	call	#__system__longmove
	add	objptr, #4
	wrlong	local01, objptr
	sub	objptr, #4
	mov	ptra, fp
	call	#popregs_
_SPI_spin2_SendCommand_ret
	ret

_ff_cc_disk_initialize
	mov	COUNT_, #9
	call	#pushregs_
	add	ptra, #48
	add	fp, #4
	wrbyte	arg01, fp
	add	ptr__ff_cc_dat__, #368
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #28
	wrlong	local01, fp
	sub	ptr__ff_cc_dat__, #4
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #4
	wrlong	local01, fp
	add	ptr__ff_cc_dat__, #8
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #4
	wrlong	local01, fp
	add	ptr__ff_cc_dat__, #4
	rdlong	local01, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #376
	add	fp, #4
	wrlong	local01, fp
	sub	fp, #40
	rdbyte	local01, fp wz
	sub	fp, #4
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0186
	mov	local02, ##1600000
	waitx	##1600000
	add	fp, #32
	rdlong	arg01, fp
	dirh	arg01
	drvh	arg01
	waitx	#16
	add	fp, #4
	rdlong	arg01, fp
	dirh	arg01
	drvl	arg01
	waitx	#16
	add	fp, #4
	rdlong	arg01, fp
	dirh	arg01
	add	fp, #4
	rdlong	arg01, fp
	fltl	arg01
	sub	fp, #36
	wrbyte	#100, fp
	sub	fp, #8
LR__0173
	add	fp, #8
	rdbyte	local03, fp wz
	sub	fp, #8
 if_e	jmp	#LR__0174
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0960
	add	fp, #8
	rdbyte	local04, fp
	rdbyte	local05, fp
	mov	local06, local05
	sub	local06, #1
	wrbyte	local06, fp
	sub	fp, #8
	jmp	#LR__0173
LR__0174
	add	fp, #12
	wrbyte	#0, fp
	sub	fp, #12
	mov	arg01, #0
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0981
	mov	local01, result1
	zerox	local01, #7
	cmp	local01, #1 wz
 if_ne	jmp	#LR__0185
	mov	arg01, #8
	mov	arg02, #426
	call	#_ff_cc_send_cmd_0981
	mov	local01, result1
	zerox	local01, #7
	cmp	local01, #1 wz
 if_ne	jmp	#LR__0177
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #4
	call	#_ff_cc_rcvr_mmc_0960
	add	fp, #22
	rdbyte	local01, fp
	sub	fp, #22
	zerox	local01, #7
	cmp	local01, #1 wz
 if_ne	jmp	#LR__0184
	add	fp, #23
	rdbyte	local07, fp
	sub	fp, #23
	zerox	local07, #7
	cmp	local07, #170 wz
 if_ne	jmp	#LR__0184
	add	fp, #24
	wrlong	##1000, fp
	sub	fp, #24
LR__0175
	add	fp, #24
	rdlong	local07, fp wz
	sub	fp, #24
 if_e	jmp	#LR__0176
	mov	arg01, #169
	decod	arg02, #30
	call	#_ff_cc_send_cmd_0981
	mov	local08, result1
	zerox	local08, #7 wz
 if_e	jmp	#LR__0176
	waitx	##160000
	add	fp, #24
	rdlong	local06, fp
	sub	local06, #1
	wrlong	local06, fp
	sub	fp, #24
	jmp	#LR__0175
LR__0176
	add	fp, #24
	rdlong	local03, fp
	sub	fp, #24
	mov	local01, local03 wz
 if_e	jmp	#LR__0184
	mov	arg01, #58
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0981
	mov	local07, result1
	zerox	local07, #7 wz
 if_ne	jmp	#LR__0184
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #4
	call	#_ff_cc_rcvr_mmc_0960
	add	fp, #20
	rdbyte	local03, fp
	test	local03, #64 wz
 if_ne	mov	local01, #12
 if_e	mov	local01, #4
	sub	fp, #8
	wrbyte	local01, fp
	sub	fp, #12
	jmp	#LR__0184
LR__0177
	mov	arg01, #169
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0981
	mov	local01, result1
	zerox	local01, #7
	cmp	local01, #1 wcz
 if_a	jmp	#LR__0178
	add	fp, #12
	wrbyte	#2, fp
	add	fp, #4
	wrbyte	#169, fp
	sub	fp, #16
	jmp	#LR__0179
LR__0178
	add	fp, #12
	wrbyte	#1, fp
	add	fp, #4
	wrbyte	#1, fp
	sub	fp, #16
LR__0179
	add	fp, #24
	wrlong	##1000, fp
	sub	fp, #24
LR__0180
	add	fp, #24
	rdlong	local03, fp wz
	sub	fp, #24
 if_e	jmp	#LR__0181
	add	fp, #16
	rdbyte	arg01, fp
	sub	fp, #16
	mov	local05, #0
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0981
	mov	local09, result1
	mov	local08, local09
	zerox	local08, #7 wz
 if_e	jmp	#LR__0181
	mov	local02, ##160000
	waitx	##160000
	add	fp, #24
	rdlong	local04, fp
	mov	local05, local04
	mov	local06, local05
	sub	local06, #1
	wrlong	local06, fp
	sub	fp, #24
	jmp	#LR__0180
LR__0181
	add	fp, #24
	rdlong	local03, fp
	sub	fp, #24
	mov	local01, local03 wz
 if_e	jmp	#LR__0182
	mov	local08, #16
	decod	local04, #9
	mov	arg01, #16
	decod	arg02, #9
	call	#_ff_cc_send_cmd_0981
	mov	local06, result1
	mov	local07, local06
	zerox	local07, #7 wz
 if_e	jmp	#LR__0183
LR__0182
	add	fp, #12
	wrbyte	#0, fp
	sub	fp, #12
LR__0183
LR__0184
LR__0185
	add	fp, #12
	rdbyte	local01, fp
	add	ptr__ff_cc_dat__, #381
	wrbyte	local01, ptr__ff_cc_dat__
	rdbyte	local03, fp wz
 if_ne	mov	local01, #0
 if_e	mov	local01, #1
	add	fp, #16
	wrbyte	local01, fp
	rdbyte	local01, fp
	sub	fp, #28
	sub	ptr__ff_cc_dat__, #1
	wrbyte	local01, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #380
	call	#_ff_cc_deselect_0969
	add	fp, #28
	rdbyte	result1, fp
	sub	fp, #28
LR__0186
	mov	ptra, fp
	call	#popregs_
_ff_cc_disk_initialize_ret
	ret

_ff_cc_disk_read
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg04
	mov	local03, arg03
	cmp	arg01, #0 wz
 if_ne	mov	result1, #1
 if_e	add	ptr__ff_cc_dat__, #380
 if_e	rdbyte	result1, ptr__ff_cc_dat__
 if_e	sub	ptr__ff_cc_dat__, #380
	mov	local04, result1
	zerox	local04, #7
	test	local04, #1 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0190
	add	ptr__ff_cc_dat__, #381
	rdbyte	local04, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #381
	zerox	local04, #7
	and	local04, #8 wz
 if_e	shl	local03, #9
	cmp	local02, #1 wcz
 if_a	mov	local04, #18
 if_be	mov	local04, #17
	mov	local05, local04
	mov	arg01, local05
	mov	arg02, local03
	call	#_ff_cc_send_cmd_0981
	mov	local04, result1
	zerox	local04, #7 wz
 if_ne	jmp	#LR__0189
LR__0187
	mov	arg01, local01
	decod	arg02, #9
	call	#_ff_cc_rcvr_datablock_0975
	cmp	result1, #0 wz
 if_ne	add	local01, ##512
 if_ne	djnz	local02, #LR__0187
	zerox	local05, #7
	cmp	local05, #18 wz
 if_ne	jmp	#LR__0188
	mov	arg01, #12
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0981
LR__0188
LR__0189
	call	#_ff_cc_deselect_0969
	cmp	local02, #0 wz
 if_ne	mov	local04, #1
 if_e	mov	local04, #0
	mov	result1, local04
LR__0190
	mov	ptra, fp
	call	#popregs_
_ff_cc_disk_read_ret
	ret

_ff_cc_disk_write
	mov	COUNT_, #7
	call	#pushregs_
	mov	local01, arg01 wz
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, local03
 if_ne	mov	result1, #1
 if_e	add	ptr__ff_cc_dat__, #380
 if_e	rdbyte	result1, ptr__ff_cc_dat__
 if_e	sub	ptr__ff_cc_dat__, #380
	mov	local06, result1
	zerox	local06, #7
	test	local06, #1 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0196
	add	ptr__ff_cc_dat__, #381
	rdbyte	local06, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #381
	zerox	local06, #7
	test	local06, #8 wz
 if_e	shl	local05, #9
	cmp	local04, #1 wz
 if_ne	jmp	#LR__0191
	mov	arg02, local05
	mov	arg01, #24
	call	#_ff_cc_send_cmd_0981
	mov	local06, result1
	zerox	local06, #7 wz
 if_ne	jmp	#LR__0195
	mov	arg01, local02
	mov	arg02, #254
	call	#_ff_cc_xmit_datablock_0977
	mov	local07, result1 wz
 if_ne	mov	local04, #0
	jmp	#LR__0195
LR__0191
	add	ptr__ff_cc_dat__, #381
	rdbyte	local06, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #381
	zerox	local06, #7
	test	local06, #6 wz
 if_e	jmp	#LR__0192
	mov	arg01, #151
	mov	arg02, local04
	call	#_ff_cc_send_cmd_0981
LR__0192
	mov	arg02, local05
	mov	arg01, #25
	call	#_ff_cc_send_cmd_0981
	mov	local06, result1
	zerox	local06, #7 wz
 if_ne	jmp	#LR__0194
LR__0193
	mov	arg01, local02
	mov	arg02, #252
	call	#_ff_cc_xmit_datablock_0977
	cmp	result1, #0 wz
 if_ne	add	local02, ##512
 if_ne	djnz	local04, #LR__0193
	mov	arg01, #0
	mov	arg02, #253
	call	#_ff_cc_xmit_datablock_0977
	cmp	result1, #0 wz
 if_e	mov	local04, #1
LR__0194
LR__0195
	call	#_ff_cc_deselect_0969
	cmp	local04, #0 wz
 if_ne	mov	local06, #1
 if_e	mov	local06, #0
	mov	result1, local06
LR__0196
	mov	ptra, fp
	call	#popregs_
_ff_cc_disk_write_ret
	ret

_ff_cc_disk_ioctl
	mov	COUNT_, #7
	call	#pushregs_
	add	ptra, #48
	add	fp, #4
	wrbyte	arg01, fp
	add	fp, #4
	wrbyte	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdbyte	local01, fp
	sub	fp, #4
	mov	local02, local01
	mov	arg01, local02 wz
 if_ne	mov	result1, #1
 if_e	add	ptr__ff_cc_dat__, #380
 if_e	rdbyte	result1, ptr__ff_cc_dat__
 if_e	sub	ptr__ff_cc_dat__, #380
	mov	local03, result1
	mov	local04, local03
	zerox	local04, #7
	test	local04, #1 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0205
	add	fp, #16
	wrlong	#1, fp
	sub	fp, #8
	rdbyte	local04, fp
	sub	fp, #8
	mov	local05, local04
	zerox	local05, #7
	fle	local05, #4
	jmprel	local05
LR__0197
	jmp	#LR__0198
	jmp	#LR__0199
	jmp	#LR__0203
	jmp	#LR__0202
	jmp	#LR__0203
LR__0198
	call	#_ff_cc_select_0972
	cmp	result1, #0 wz
 if_ne	add	fp, #16
 if_ne	wrlong	#0, fp
 if_ne	sub	fp, #16
	jmp	#LR__0204
LR__0199
	mov	arg01, #9
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0981
	mov	local02, result1
	zerox	local02, #7 wz
 if_ne	jmp	#LR__0204
	add	fp, #24
	mov	arg01, fp
	sub	fp, #24
	mov	arg02, #16
	call	#_ff_cc_rcvr_datablock_0975
	mov	local06, result1 wz
 if_e	jmp	#LR__0204
	add	fp, #24
	rdbyte	local02, fp
	sub	fp, #24
	zerox	local02, #7
	shr	local02, #6
	cmp	local02, #1 wz
 if_ne	jmp	#LR__0200
	add	fp, #33
	rdbyte	local02, fp
	sub	fp, #1
	rdbyte	local03, fp
	zerox	local03, #15
	shl	local03, #8
	add	local02, local03
	sub	fp, #1
	rdbyte	local07, fp
	and	local07, #63
	shl	local07, #16
	add	local02, local07
	add	local02, #1
	add	fp, #9
	wrlong	local02, fp
	sub	fp, #28
	rdlong	local01, fp
	add	fp, #28
	rdlong	local03, fp
	sub	fp, #40
	shl	local03, #10
	wrlong	local03, local01
	jmp	#LR__0201
LR__0200
	add	fp, #29
	rdbyte	local02, fp
	and	local02, #15
	add	fp, #5
	rdbyte	local03, fp
	and	local03, #128
	sar	local03, #7
	add	local02, local03
	sub	fp, #1
	rdbyte	local07, fp
	and	local07, #3
	shl	local07, #1
	add	local02, local07
	add	local02, #2
	sub	fp, #13
	wrbyte	local02, fp
	add	fp, #12
	rdbyte	local02, fp
	shr	local02, #6
	sub	fp, #1
	rdbyte	local03, fp
	zerox	local03, #15
	shl	local03, #2
	add	local02, local03
	sub	fp, #1
	rdbyte	local07, fp
	and	local07, #3
	zerox	local07, #15
	shl	local07, #10
	add	local02, local07
	add	local02, #1
	add	fp, #10
	wrlong	local02, fp
	sub	fp, #28
	rdlong	local01, fp
	add	fp, #28
	rdlong	local03, fp
	sub	fp, #20
	rdbyte	local07, fp
	sub	fp, #20
	zerox	local07, #7
	sub	local07, #9
	shl	local03, local07
	wrlong	local03, local01
LR__0201
	add	fp, #16
	wrlong	#0, fp
	sub	fp, #16
	jmp	#LR__0204
LR__0202
	add	fp, #12
	rdlong	local02, fp
	wrlong	#128, local02
	add	fp, #4
	wrlong	#0, fp
	sub	fp, #16
	jmp	#LR__0204
LR__0203
	mov	local02, #4
	add	fp, #16
	wrlong	#4, fp
	sub	fp, #16
LR__0204
	call	#_ff_cc_deselect_0969
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
LR__0205
	mov	ptra, fp
	call	#popregs_
_ff_cc_disk_ioctl_ret
	ret

_ff_cc_disk_setpins
	cmp	arg01, #0 wz
 if_ne	neg	result1, #1
 if_ne	jmp	#_ff_cc_disk_setpins_ret
	add	ptr__ff_cc_dat__, #364
	wrlong	arg02, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #4
	wrlong	arg03, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #4
	wrlong	arg04, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #4
	wrlong	arg05, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #376
	mov	result1, #0
_ff_cc_disk_setpins_ret
	ret

_ff_cc_ld_word_0394
	add	arg01, #1
	rdbyte	result1, arg01
	sub	arg01, #1
	zerox	result1, #7
	zerox	result1, #15
	shl	result1, #8
	rdbyte	_var01, arg01
	or	result1, _var01
_ff_cc_ld_word_0394_ret
	ret

_ff_cc_ld_dword_0396
	add	arg01, #3
	rdbyte	result1, arg01
	shl	result1, #8
	sub	arg01, #1
	rdbyte	_var01, arg01
	or	result1, _var01
	shl	result1, #8
	sub	arg01, #1
	rdbyte	_var01, arg01
	sub	arg01, #1
	zerox	_var01, #7
	or	result1, _var01
	shl	result1, #8
	rdbyte	_var01, arg01
	or	result1, _var01
_ff_cc_ld_dword_0396_ret
	ret

_ff_cc_st_word_0397
	mov	_var01, arg02
	zerox	_var01, #15
	wrbyte	_var01, arg01
	zerox	arg02, #15
	shr	arg02, #8
	add	arg01, #1
	zerox	arg02, #15
	wrbyte	arg02, arg01
_ff_cc_st_word_0397_ret
	ret

_ff_cc_st_dword_0398
	wrbyte	arg02, arg01
	shr	arg02, #8
	add	arg01, #1
	wrbyte	arg02, arg01
	shr	arg02, #8
	add	arg01, #1
	wrbyte	arg02, arg01
	shr	arg02, #8
	add	arg01, #1
	wrbyte	arg02, arg01
_ff_cc_st_dword_0398_ret
	ret

_ff_cc_mem_cpy_0401
	cmp	arg03, #0 wz
 if_e	jmp	#LR__0210
	loc	pa,	#(@LR__0208-@LR__0206)
	call	#FCACHE_LOAD_
LR__0206
	rep	@LR__0209, arg03
LR__0207
	mov	_var01, arg02
	add	_var01, #1
	rdbyte	_var02, arg02
	mov	arg02, _var01
	wrbyte	_var02, arg01
	add	arg01, #1
LR__0208
LR__0209
LR__0210
_ff_cc_mem_cpy_0401_ret
	ret

_ff_cc_mem_cmp_0407
	loc	pa,	#(@LR__0212-@LR__0211)
	call	#FCACHE_LOAD_
LR__0211
	rdbyte	_var01, arg01
	rdbyte	_var02, arg02
	sub	_var01, _var02
	sub	arg03, #1
	mov	arg03, arg03 wz
	add	arg01, #1
	add	arg02, #1
 if_e	jmp	#LR__0213
	cmp	_var01, #0 wz
 if_e	jmp	#LR__0211
LR__0212
LR__0213
	mov	result1, _var01
_ff_cc_mem_cmp_0407_ret
	ret

_ff_cc_chk_chr_0408
	loc	pa,	#(@LR__0215-@LR__0214)
	call	#FCACHE_LOAD_
LR__0214
	rdbyte	_var01, arg01 wz
 if_e	jmp	#LR__0216
	rdbyte	_var02, arg01
	cmp	_var02, arg02 wz
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0214
LR__0215
LR__0216
	rdbyte	result1, arg01
_ff_cc_chk_chr_0408_ret
	ret

_ff_cc_sync_window_0412
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, #0
	add	local01, #3
	rdbyte	local03, local01 wz
	sub	local01, #3
 if_e	jmp	#LR__0219
	add	local01, #1
	rdbyte	arg01, local01
	add	local01, #47
	mov	arg02, local01
	sub	local01, #4
	rdlong	arg03, local01
	sub	local01, #44
	mov	arg04, #1
	call	#_ff_cc_disk_write
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0217
	add	local01, #3
	wrbyte	#0, local01
	add	local01, #41
	rdlong	local03, local01
	sub	local01, #12
	rdlong	local04, local01
	sub	local03, local04
	sub	local01, #8
	rdlong	local05, local01
	sub	local01, #24
	cmp	local03, local05 wcz
 if_ae	jmp	#LR__0218
	add	local01, #2
	rdbyte	local03, local01
	sub	local01, #2
	zerox	local03, #7
	cmp	local03, #2 wz
 if_ne	jmp	#LR__0218
	add	local01, #1
	rdbyte	arg01, local01
	add	local01, #47
	mov	arg02, local01
	sub	local01, #4
	rdlong	arg03, local01
	sub	local01, #20
	rdlong	local06, local01
	add	arg03, local06
	mov	arg04, #1
	call	#_ff_cc_disk_write
	jmp	#LR__0218
LR__0217
	mov	local02, #1
LR__0218
LR__0219
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_ff_cc_sync_window_0412_ret
	ret

_ff_cc_move_window_0414
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, #0
	add	local01, #44
	rdlong	local04, local01
	sub	local01, #44
	cmp	local02, local04 wz
 if_e	jmp	#LR__0221
	mov	arg01, local01
	call	#_ff_cc_sync_window_0412
	mov	local03, result1 wz
 if_ne	jmp	#LR__0220
	add	local01, #1
	rdbyte	arg01, local01
	add	local01, #47
	mov	arg02, local01
	sub	local01, #48
	mov	arg03, local02
	mov	arg04, #1
	call	#_ff_cc_disk_read
	cmp	result1, #0 wz
 if_ne	neg	local02, #1
 if_ne	mov	local03, #1
	add	local01, #44
	wrlong	local02, local01
LR__0220
LR__0221
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_move_window_0414_ret
	ret

_ff_cc_sync_fs_0416
	mov	COUNT_, #10
	call	#pushregs_
	mov	local01, arg01
	call	#_ff_cc_sync_window_0412
	mov	local02, result1 wz
 if_ne	jmp	#LR__0227
	rdbyte	local03, local01
	cmp	local03, #3 wz
 if_ne	jmp	#LR__0226
	add	local01, #4
	rdbyte	local04, local01
	sub	local01, #4
	zerox	local04, #7
	cmp	local04, #1 wz
 if_ne	jmp	#LR__0226
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	mov	arg02, #0
	decod	arg03, #9
	loc	pa,	#(@LR__0224-@LR__0222)
	call	#FCACHE_LOAD_
LR__0222
	rep	@LR__0225, arg03
LR__0223
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0224
LR__0225
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	add	arg01, #510
	mov	arg02, ##43605
	call	#_ff_cc_st_word_0397
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	mov	arg02, ##1096897106
	call	#_ff_cc_st_dword_0398
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	add	arg01, #484
	mov	arg02, ##1631679090
	call	#_ff_cc_st_dword_0398
	add	local01, #48
	mov	arg01, local01
	add	arg01, #488
	sub	local01, #32
	rdlong	arg02, local01
	sub	local01, #16
	call	#_ff_cc_st_dword_0398
	add	local01, #48
	mov	arg01, local01
	add	arg01, #492
	sub	local01, #36
	rdlong	arg02, local01
	sub	local01, #12
	call	#_ff_cc_st_dword_0398
	add	local01, #28
	rdlong	local03, local01
	add	local03, #1
	add	local01, #16
	wrlong	local03, local01
	sub	local01, #43
	rdbyte	local04, local01
	add	local01, #47
	mov	local05, local01
	mov	local06, local05
	sub	local01, #4
	rdlong	local07, local01
	sub	local01, #44
	mov	local08, local07
	mov	local09, #1
	mov	arg01, local04
	mov	arg02, local06
	mov	arg03, local08
	mov	arg04, #1
	call	#_ff_cc_disk_write
	mov	local10, result1
	mov	local03, #0
	add	local01, #4
	wrbyte	#0, local01
	sub	local01, #4
LR__0226
	add	local01, #1
	rdbyte	arg01, local01
	mov	arg02, #0
	mov	arg03, #0
	call	#_ff_cc_disk_ioctl
	cmp	result1, #0 wz
 if_ne	mov	local02, #1
LR__0227
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_ff_cc_sync_fs_0416_ret
	ret

_ff_cc_clst2sect_0417
	sub	arg02, #2
	add	arg01, #20
	rdlong	_var01, arg01
	sub	arg01, #20
	sub	_var01, #2
	cmp	arg02, _var01 wcz
 if_ae	mov	result1, #0
 if_ae	jmp	#_ff_cc_clst2sect_0417_ret
	add	arg01, #10
	rdword	_var02, arg01
	qmul	_var02, arg02
	getqx	_var03
	add	arg01, #30
	rdlong	result1, arg01
	add	result1, _var03
_ff_cc_clst2sect_0417_ret
	ret

_ff_cc_get_fat_0422
	mov	COUNT_, #12
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	cmp	local02, #2 wcz
 if_b	jmp	#LR__0228
	add	local03, #20
	rdlong	local04, local03
	sub	local03, #20
	mov	local05, local04
	cmp	local02, local05 wcz
 if_b	jmp	#LR__0229
LR__0228
	mov	local06, #1
	jmp	#LR__0236
LR__0229
	neg	local06, #1
	rdbyte	local07, local03
	sub	local07, #1
	fle	local07, #3
	jmprel	local07
LR__0230
	jmp	#LR__0231
	jmp	#LR__0232
	jmp	#LR__0233
	jmp	#LR__0234
LR__0231
	mov	local08, local02
	mov	local04, local02
	shr	local04, #1
	add	local08, local04
	mov	arg01, local03
	mov	local09, local08
	shr	local09, #9
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local09
	call	#_ff_cc_move_window_0414
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0235
	mov	local10, local08
	and	local10, #511
	add	local03, #48
	add	local10, local03
	rdbyte	local11, local10
	sub	local03, #48
	mov	arg01, local03
	add	local08, #1
	mov	local09, local08
	shr	local09, #9
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local09
	call	#_ff_cc_move_window_0414
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0235
	and	local08, #511
	add	local03, #48
	add	local08, local03
	rdbyte	local04, local08
	shl	local04, #8
	or	local11, local04
	test	local02, #1 wz
 if_ne	shr	local11, #4
 if_ne	mov	local05, local11
 if_e	and	local11, ##4095
 if_e	mov	local05, local11
	mov	local06, local05
	jmp	#LR__0235
LR__0232
	mov	arg01, local03
	mov	local09, local02
	shr	local09, #8
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local09
	call	#_ff_cc_move_window_0414
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0235
	add	local03, #48
	shl	local02, #1
	and	local02, #511
	add	local03, local02
	mov	arg01, local03
	call	#_ff_cc_ld_word_0394
	zerox	result1, #15
	mov	local06, result1
	jmp	#LR__0235
LR__0233
	mov	arg01, local03
	mov	local09, local02
	shr	local09, #7
	add	local03, #32
	rdlong	arg02, local03
	sub	local03, #32
	add	arg02, local09
	call	#_ff_cc_move_window_0414
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0235
	add	local03, #48
	mov	arg01, local03
	mov	local12, local02
	shl	local12, #2
	and	local12, #511
	add	arg01, local12
	call	#_ff_cc_ld_dword_0396
	mov	local06, result1
	and	local06, ##268435455
	jmp	#LR__0235
LR__0234
	mov	local06, #1
LR__0235
LR__0236
	mov	result1, local06
	mov	ptra, fp
	call	#popregs_
_ff_cc_get_fat_0422_ret
	ret

_ff_cc_put_fat_0426
	mov	COUNT_, #16
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, #2
	cmp	local02, #2 wcz
 if_b	jmp	#LR__0246
	add	local01, #20
	rdlong	local05, local01
	sub	local01, #20
	mov	local06, local05
	cmp	local02, local06 wcz
 if_ae	jmp	#LR__0246
	rdbyte	local07, local01
	sub	local07, #1
	fle	local07, #3
	jmprel	local07
LR__0237
	jmp	#LR__0238
	jmp	#LR__0243
	jmp	#LR__0244
	jmp	#LR__0245
LR__0238
	mov	local08, local02
	mov	local05, local02
	shr	local05, #1
	add	local08, local05
	mov	local06, local01
	mov	local09, local08
	shr	local09, #9
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local05, local10
	add	local05, local09
	mov	local11, local05
	mov	arg01, local06
	mov	arg02, local11
	call	#_ff_cc_move_window_0414
	mov	local12, result1
	mov	local04, local12 wz
 if_ne	jmp	#LR__0245
	add	local01, #48
	mov	local13, local01
	mov	local12, local08
	and	local12, #511
	add	local13, local12
	test	local02, #1 wz
	sub	local01, #48
	add	local08, #1
 if_e	jmp	#LR__0239
	rdbyte	local06, local13
	and	local06, #15
	mov	local10, local03
	zerox	local10, #7
	shl	local10, #4
	or	local06, local10
	jmp	#LR__0240
LR__0239
	mov	local06, local03
LR__0240
	wrbyte	local06, local13
	add	local01, #3
	wrbyte	#1, local01
	sub	local01, #3
	mov	local06, local01
	mov	local09, local08
	shr	local09, #9
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local05, local10
	add	local05, local09
	mov	local11, local05
	mov	arg01, local06
	mov	arg02, local11
	call	#_ff_cc_move_window_0414
	mov	local12, result1
	mov	local04, local12 wz
 if_ne	jmp	#LR__0245
	add	local01, #48
	mov	local13, local01
	mov	local09, local08
	and	local09, #511
	mov	local10, local09
	add	local13, local09
	mov	local05, local02
	and	local05, #1 wz
	sub	local01, #48
 if_e	jmp	#LR__0241
	mov	local09, local03
	shr	local09, #4
	mov	local06, local09
	jmp	#LR__0242
LR__0241
	rdbyte	local10, local13
	and	local10, #240
	mov	local11, local03
	shr	local11, #8
	zerox	local11, #7
	and	local11, #15
	or	local10, local11
	mov	local06, local10
LR__0242
	wrbyte	local06, local13
	mov	local06, #1
	add	local01, #3
	wrbyte	#1, local01
	sub	local01, #3
	jmp	#LR__0245
LR__0243
	mov	local06, local01
	mov	local09, local02
	shr	local09, #8
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local05, local10
	add	local05, local09
	mov	local11, local05
	mov	arg01, local06
	mov	arg02, local11
	call	#_ff_cc_move_window_0414
	mov	local12, result1
	mov	local04, local12 wz
 if_ne	jmp	#LR__0245
	add	local01, #48
	mov	local05, local01
	mov	local09, local02
	shl	local09, #1
	mov	local10, local09
	and	local10, #511
	mov	local11, local10
	mov	local12, local05
	add	local12, local11
	mov	local14, local03
	mov	arg01, local12
	mov	arg02, local14
	sub	local01, #48
	call	#_ff_cc_st_word_0397
	mov	local06, #1
	add	local01, #3
	wrbyte	#1, local01
	sub	local01, #3
	jmp	#LR__0245
LR__0244
	mov	local06, local01
	mov	local09, local02
	shr	local09, #7
	add	local01, #32
	rdlong	local10, local01
	sub	local01, #32
	mov	local05, local10
	add	local05, local09
	mov	local11, local05
	mov	arg01, local06
	mov	arg02, local11
	call	#_ff_cc_move_window_0414
	mov	local12, result1
	mov	local04, local12 wz
 if_ne	jmp	#LR__0245
	and	local03, ##268435455
	add	local01, #48
	mov	local15, local01
	mov	local14, local02
	shl	local14, #2
	and	local14, #511
	add	local15, local14
	mov	arg01, local15
	sub	local01, #48
	call	#_ff_cc_ld_dword_0396
	mov	local16, result1
	mov	local05, local16
	and	local05, ##-268435456
	or	local03, local05
	add	local01, #48
	mov	local05, local01
	mov	local09, local02
	shl	local09, #2
	mov	local10, local09
	and	local10, #511
	mov	local11, local10
	mov	local12, local05
	add	local12, local11
	mov	local14, local03
	mov	arg01, local12
	mov	arg02, local14
	sub	local01, #48
	call	#_ff_cc_st_dword_0398
	mov	local06, #1
	add	local01, #3
	wrbyte	#1, local01
	sub	local01, #3
LR__0245
LR__0246
	mov	result1, local04
	mov	ptra, fp
	call	#popregs_
_ff_cc_put_fat_0426_ret
	ret

_ff_cc_remove_chain_0430
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	rdlong	local04, local01
	cmp	local02, #2 wcz
 if_b	jmp	#LR__0247
	add	local04, #20
	rdlong	local05, local04
	sub	local04, #20
	cmp	local02, local05 wcz
 if_b	jmp	#LR__0248
LR__0247
	mov	result1, #2
	jmp	#LR__0253
LR__0248
	cmp	local03, #0 wz
 if_e	jmp	#LR__0249
	mov	arg01, local04
	mov	arg02, local03
	neg	arg03, #1
	call	#_ff_cc_put_fat_0426
	mov	local06, result1 wz
 if_ne	mov	result1, local06
 if_ne	jmp	#LR__0253
LR__0249
LR__0250
	mov	arg02, local02
	mov	arg01, local01
	call	#_ff_cc_get_fat_0422
	mov	local07, result1 wz
 if_e	jmp	#LR__0252
	cmp	local07, #1 wz
 if_e	mov	result1, #2
 if_e	jmp	#LR__0253
	cmp	local07, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0253
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, #0
	call	#_ff_cc_put_fat_0426
	mov	local06, result1 wz
 if_ne	mov	result1, local06
 if_ne	jmp	#LR__0253
	add	local04, #20
	rdlong	local05, local04
	sub	local05, #2
	sub	local04, #4
	rdlong	local08, local04
	sub	local04, #16
	cmp	local08, local05 wcz
 if_ae	jmp	#LR__0251
	add	local04, #16
	rdlong	local09, local04
	add	local09, #1
	wrlong	local09, local04
	sub	local04, #12
	rdbyte	local05, local04
	or	local05, #1
	wrbyte	local05, local04
	sub	local04, #4
LR__0251
	mov	local02, local07
	add	local04, #20
	rdlong	local05, local04
	sub	local04, #20
	cmp	local02, local05 wcz
 if_b	jmp	#LR__0250
LR__0252
	mov	result1, #0
LR__0253
	mov	ptra, fp
	call	#popregs_
_ff_cc_remove_chain_0430_ret
	ret

_ff_cc_create_chain_0436
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02 wz
	rdlong	local03, local01
 if_ne	jmp	#LR__0255
	add	local03, #12
	rdlong	local04, local03 wz
	sub	local03, #12
 if_e	jmp	#LR__0254
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local04, local05 wcz
 if_b	jmp	#LR__0256
LR__0254
	mov	local04, #1
	jmp	#LR__0256
LR__0255
	mov	arg01, local01
	mov	arg02, local02
	call	#_ff_cc_get_fat_0422
	mov	local06, result1
	cmp	local06, #2 wcz
 if_b	mov	result1, #1
 if_b	jmp	#LR__0272
	cmp	local06, ##-1 wz
 if_e	mov	result1, local06
 if_e	jmp	#LR__0272
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local06, local05 wcz
 if_b	mov	result1, local06
 if_b	jmp	#LR__0272
	mov	local04, local02
LR__0256
	add	local03, #16
	rdlong	local05, local03 wz
	sub	local03, #16
 if_e	mov	result1, #0
 if_e	jmp	#LR__0272
	mov	local07, #0
	cmp	local04, local02 wz
 if_ne	jmp	#LR__0261
	mov	local07, local04
	add	local07, #1
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local07, local05 wcz
 if_ae	mov	local07, #2
	mov	local05, local01
	mov	arg02, local07
	mov	arg01, local05
	call	#_ff_cc_get_fat_0422
	mov	local06, result1
	cmp	local06, #1 wz
 if_e	jmp	#LR__0257
	cmp	local06, ##-1 wz
 if_ne	jmp	#LR__0258
LR__0257
	mov	result1, local06
	jmp	#LR__0272
LR__0258
	cmp	local06, #0 wz
 if_e	jmp	#LR__0260
	add	local03, #12
	rdlong	local06, local03
	sub	local03, #12
	cmp	local06, #2 wcz
 if_b	jmp	#LR__0259
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local06, local05 wcz
 if_b	mov	local04, local06
LR__0259
	mov	local07, #0
LR__0260
LR__0261
	cmp	local07, #0 wz
 if_ne	jmp	#LR__0267
	mov	local07, local04
LR__0262
	add	local07, #1
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local07, local05 wcz
 if_b	jmp	#LR__0263
	mov	local07, #2
	cmp	local07, local04 wcz
 if_a	mov	result1, #0
 if_a	jmp	#LR__0272
LR__0263
	mov	local05, local01
	mov	arg02, local07
	mov	arg01, local05
	call	#_ff_cc_get_fat_0422
	mov	local06, result1 wz
 if_e	jmp	#LR__0266
	cmp	local06, #1 wz
 if_e	jmp	#LR__0264
	cmp	local06, ##-1 wz
 if_ne	jmp	#LR__0265
LR__0264
	mov	result1, local06
	jmp	#LR__0272
LR__0265
	cmp	local07, local04 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0272
	jmp	#LR__0262
LR__0266
LR__0267
	mov	arg01, local03
	mov	arg02, local07
	neg	arg03, #1
	call	#_ff_cc_put_fat_0426
	mov	local08, result1 wz
 if_ne	jmp	#LR__0268
	cmp	local02, #0 wz
 if_e	jmp	#LR__0268
	mov	local05, local03
	mov	local09, local02
	mov	local10, local07
	mov	arg01, local05
	mov	arg02, local09
	mov	arg03, local10
	call	#_ff_cc_put_fat_0426
	mov	local11, result1
	mov	local08, local11
LR__0268
	cmp	local08, #0 wz
 if_ne	jmp	#LR__0270
	add	local03, #12
	wrlong	local07, local03
	add	local03, #8
	rdlong	local05, local03
	sub	local05, #2
	sub	local03, #4
	rdlong	local10, local03
	sub	local03, #16
	cmp	local10, local05 wcz
 if_a	jmp	#LR__0269
	add	local03, #16
	rdlong	local10, local03
	sub	local10, #1
	wrlong	local10, local03
	sub	local03, #16
LR__0269
	add	local03, #4
	rdbyte	local05, local03
	or	local05, #1
	wrbyte	local05, local03
	jmp	#LR__0271
LR__0270
	cmp	local08, #1 wz
 if_e	neg	local05, #1
 if_ne	mov	local05, #1
	mov	local07, local05
LR__0271
	mov	result1, local07
LR__0272
	mov	ptra, fp
	call	#popregs_
_ff_cc_create_chain_0436_ret
	ret

_ff_cc_dir_clear_0441
	mov	COUNT_, #7
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, local01
	call	#_ff_cc_sync_window_0412
	cmp	result1, #0 wz
 if_ne	mov	result1, #1
 if_ne	jmp	#LR__0279
	mov	arg01, local01
	mov	arg02, local02
	call	#_ff_cc_clst2sect_0417
	mov	local03, result1
	add	local01, #44
	wrlong	local03, local01
	add	local01, #4
	mov	arg01, local01
	sub	local01, #48
	mov	arg02, #0
	decod	arg03, #9
	loc	pa,	#(@LR__0275-@LR__0273)
	call	#FCACHE_LOAD_
LR__0273
	rep	@LR__0276, arg03
LR__0274
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0275
LR__0276
	add	local01, #48
	mov	local04, local01
	mov	local05, #0
	sub	local01, #48
LR__0277
	add	local01, #10
	rdword	local06, local01
	sub	local01, #10
	zerox	local06, #15
	cmp	local05, local06 wcz
 if_ae	jmp	#LR__0278
	add	local01, #1
	rdbyte	arg01, local01
	sub	local01, #1
	mov	arg02, local04
	mov	arg03, local03
	add	arg03, local05
	mov	arg04, #1
	call	#_ff_cc_disk_write
	cmp	result1, #0 wz
 if_e	add	local05, #1
 if_e	jmp	#LR__0277
LR__0278
	add	local01, #10
	rdword	local07, local01
	cmp	local05, local07 wz
 if_e	mov	local06, #0
 if_ne	mov	local06, #1
	mov	result1, local06
LR__0279
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_clear_0441_ret
	ret

_ff_cc_dir_sdi_0445
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	cmp	local02, ##2097152 wcz
 if_ae	jmp	#LR__0280
	test	local02, #31 wz
 if_e	jmp	#LR__0281
LR__0280
	mov	result1, #2
	jmp	#LR__0289
LR__0281
	add	local01, #16
	wrlong	local02, local01
	sub	local01, #8
	rdlong	local04, local01 wz
	sub	local01, #8
 if_ne	jmp	#LR__0282
	rdbyte	local05, local03
	cmp	local05, #3 wcz
 if_b	jmp	#LR__0282
	add	local03, #36
	rdlong	local05, local03
	sub	local03, #36
	mov	local04, local05
LR__0282
	cmp	local04, #0 wz
 if_ne	jmp	#LR__0283
	mov	local05, local02
	shr	local05, #5
	add	local03, #8
	rdword	local06, local03
	sub	local03, #8
	zerox	local06, #15
	cmp	local05, local06 wcz
 if_ae	mov	result1, #2
 if_ae	jmp	#LR__0289
	add	local03, #36
	rdlong	local05, local03
	sub	local03, #36
	add	local01, #24
	wrlong	local05, local01
	sub	local01, #24
	jmp	#LR__0288
LR__0283
	add	local03, #10
	rdword	local07, local03
	sub	local03, #10
	zerox	local07, #15
	shl	local07, #9
LR__0284
	cmp	local02, local07 wcz
 if_b	jmp	#LR__0287
	mov	arg01, local01
	mov	arg02, local04
	call	#_ff_cc_get_fat_0422
	mov	local04, result1
	cmp	local04, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0289
	cmp	local04, #2 wcz
 if_b	jmp	#LR__0285
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local04, local05 wcz
 if_b	jmp	#LR__0286
LR__0285
	mov	result1, #2
	jmp	#LR__0289
LR__0286
	sub	local02, local07
	jmp	#LR__0284
LR__0287
	mov	arg01, local03
	mov	arg02, local04
	call	#_ff_cc_clst2sect_0417
	add	local01, #24
	wrlong	result1, local01
	sub	local01, #24
LR__0288
	add	local01, #20
	wrlong	local04, local01
	add	local01, #4
	rdlong	local05, local01 wz
	sub	local01, #24
 if_e	mov	result1, #2
 if_e	jmp	#LR__0289
	mov	local06, local02
	shr	local06, #9
	add	local01, #24
	rdlong	local05, local01
	add	local05, local06
	wrlong	local05, local01
	add	local03, #48
	mov	local05, local03
	mov	local08, local02
	and	local08, #511
	add	local05, local08
	add	local01, #4
	wrlong	local05, local01
	mov	result1, #0
LR__0289
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_sdi_0445_ret
	ret

_ff_cc_dir_next_0449
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	add	local01, #16
	rdlong	local04, local01
	sub	local01, #16
	add	local04, #32
	cmp	local04, ##2097152 wcz
 if_ae	add	local01, #24
 if_ae	wrlong	#0, local01
 if_ae	sub	local01, #24
	add	local01, #24
	rdlong	local05, local01 wz
	sub	local01, #24
 if_e	mov	result1, #4
 if_e	jmp	#LR__0296
	test	local04, #511 wz
 if_ne	jmp	#LR__0295
	add	local01, #24
	rdlong	local06, local01
	add	local06, #1
	wrlong	local06, local01
	sub	local01, #4
	rdlong	local05, local01 wz
	sub	local01, #20
 if_ne	jmp	#LR__0290
	mov	local05, local04
	shr	local05, #5
	add	local03, #8
	rdword	local07, local03
	sub	local03, #8
	zerox	local07, #15
	cmp	local05, local07 wcz
 if_b	jmp	#LR__0294
	add	local01, #24
	wrlong	#0, local01
	mov	result1, #4
	jmp	#LR__0296
LR__0290
	mov	local05, local04
	shr	local05, #9
	add	local03, #10
	rdword	local07, local03
	sub	local03, #10
	zerox	local07, #15
	sub	local07, #1
	test	local05, local07 wz
 if_ne	jmp	#LR__0293
	mov	arg01, local01
	add	local01, #20
	rdlong	arg02, local01
	sub	local01, #20
	call	#_ff_cc_get_fat_0422
	mov	local08, result1
	cmp	local08, #1 wcz
 if_be	mov	result1, #2
 if_be	jmp	#LR__0296
	cmp	local08, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0296
	add	local03, #20
	rdlong	local05, local03
	sub	local03, #20
	cmp	local08, local05 wcz
 if_b	jmp	#LR__0292
	cmp	local02, #0 wz
 if_ne	jmp	#LR__0291
	add	local01, #24
	wrlong	#0, local01
	mov	result1, #4
	jmp	#LR__0296
LR__0291
	mov	arg01, local01
	add	local01, #20
	rdlong	arg02, local01
	sub	local01, #20
	call	#_ff_cc_create_chain_0436
	mov	local08, result1 wz
 if_e	mov	result1, #7
 if_e	jmp	#LR__0296
	cmp	local08, #1 wz
 if_e	mov	result1, #2
 if_e	jmp	#LR__0296
	cmp	local08, ##-1 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0296
	mov	arg01, local03
	mov	arg02, local08
	call	#_ff_cc_dir_clear_0441
	cmp	result1, #0 wz
 if_ne	mov	result1, #1
 if_ne	jmp	#LR__0296
LR__0292
	add	local01, #20
	wrlong	local08, local01
	sub	local01, #20
	mov	arg01, local03
	mov	arg02, local08
	call	#_ff_cc_clst2sect_0417
	add	local01, #24
	wrlong	result1, local01
	sub	local01, #24
LR__0293
LR__0294
LR__0295
	add	local01, #16
	wrlong	local04, local01
	add	local03, #48
	mov	local05, local03
	mov	local09, local04
	and	local09, #511
	add	local05, local09
	add	local01, #12
	wrlong	local05, local01
	mov	result1, #0
LR__0296
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_next_0449_ret
	ret

_ff_cc_dir_alloc_0453
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local01
	mov	arg01, local01
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0445
	mov	local04, result1 wz
 if_ne	jmp	#LR__0302
	mov	local05, #0
LR__0297
	mov	arg01, local03
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	call	#_ff_cc_move_window_0414
	mov	local06, result1
	mov	local04, local06 wz
 if_ne	jmp	#LR__0301
	add	local01, #28
	rdlong	local07, local01
	sub	local01, #28
	rdbyte	local08, local07
	cmp	local08, #229 wz
 if_e	jmp	#LR__0298
	add	local01, #28
	rdlong	local09, local01
	sub	local01, #28
	mov	local10, local09
	rdbyte	local06, local10 wz
 if_ne	jmp	#LR__0299
LR__0298
	add	local05, #1
	cmp	local05, local02 wz
 if_e	jmp	#LR__0301
	jmp	#LR__0300
LR__0299
	mov	local05, #0
LR__0300
	mov	local08, local01
	mov	local07, #1
	mov	arg01, local08
	mov	arg02, #1
	call	#_ff_cc_dir_next_0449
	mov	local11, result1
	mov	local04, local11 wz
 if_e	jmp	#LR__0297
LR__0301
LR__0302
	cmp	local04, #4 wz
 if_e	mov	local04, #7
	mov	result1, local04
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_alloc_0453_ret
	ret

_ff_cc_ld_clust_0455
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, local02
	add	arg01, #26
	call	#_ff_cc_ld_word_0394
	mov	local03, result1
	zerox	local03, #15
	rdbyte	local04, local01
	cmp	local04, #3 wz
 if_ne	jmp	#LR__0303
	add	local02, #20
	mov	arg01, local02
	call	#_ff_cc_ld_word_0394
	zerox	result1, #15
	shl	result1, #16
	or	local03, result1
LR__0303
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_ld_clust_0455_ret
	ret

_ff_cc_st_clust_0456
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	arg01, local02
	add	arg01, #26
	mov	arg02, local03
	call	#_ff_cc_st_word_0397
	rdbyte	local04, local01
	cmp	local04, #3 wz
 if_ne	jmp	#LR__0304
	add	local02, #20
	shr	local03, #16
	mov	arg01, local02
	mov	arg02, local03
	call	#_ff_cc_st_word_0397
LR__0304
	mov	ptra, fp
	call	#popregs_
_ff_cc_st_clust_0456_ret
	ret

_ff_cc_dir_read_0461
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, #4
	rdlong	local04, local01
LR__0305
	add	local01, #24
	rdlong	local05, local01 wz
	sub	local01, #24
 if_e	jmp	#LR__0307
	mov	arg01, local04
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	call	#_ff_cc_move_window_0414
	mov	local03, result1 wz
 if_ne	jmp	#LR__0307
	add	local01, #28
	rdlong	local05, local01
	sub	local01, #28
	rdbyte	local06, local05
	mov	local05, local06
	zerox	local05, #7 wz
 if_e	mov	local03, #4
 if_e	jmp	#LR__0307
	add	local01, #28
	rdlong	local07, local01
	add	local07, #11
	rdbyte	local08, local07
	and	local08, #63
	sub	local01, #22
	wrbyte	local08, local01
	sub	local01, #6
	mov	local05, local06
	zerox	local05, #7
	cmp	local05, #229 wz
 if_e	jmp	#LR__0306
	mov	local07, local06
	zerox	local07, #7
	cmp	local07, #46 wz
 if_e	jmp	#LR__0306
	mov	local09, local08
	zerox	local09, #7
	cmp	local09, #15 wz
 if_e	jmp	#LR__0306
	mov	local10, #0
	mov	local11, local08
	zerox	local11, #7
	andn	local11, #32
	cmp	local11, #8 wz
 if_e	mov	local10, #1
	cmp	local10, local02 wz
 if_e	jmp	#LR__0307
LR__0306
	mov	arg01, local01
	mov	arg02, #0
	call	#_ff_cc_dir_next_0449
	mov	local03, result1 wz
 if_e	jmp	#LR__0305
LR__0307
	cmp	local03, #0 wz
 if_ne	add	local01, #24
 if_ne	wrlong	#0, local01
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_read_0461_ret
	ret

_ff_cc_dir_find_0465
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	mov	arg01, local01
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0445
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0311
LR__0308
	mov	arg01, local02
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	call	#_ff_cc_move_window_0414
	mov	local03, result1 wz
 if_ne	jmp	#LR__0310
	add	local01, #28
	rdlong	local04, local01
	sub	local01, #28
	rdbyte	local05, local04
	mov	local04, local05
	zerox	local04, #7 wz
 if_e	mov	local03, #4
 if_e	jmp	#LR__0310
	add	local01, #28
	rdlong	local06, local01
	add	local06, #11
	rdbyte	local04, local06
	and	local04, #63
	sub	local01, #22
	wrbyte	local04, local01
	add	local01, #22
	rdlong	local06, local01
	sub	local01, #28
	add	local06, #11
	rdbyte	local07, local06
	mov	local04, local07
	zerox	local04, #7
	test	local04, #8 wz
 if_ne	jmp	#LR__0309
	add	local01, #28
	rdlong	local08, local01
	mov	local09, local08
	add	local01, #4
	mov	local10, local01
	mov	local11, local10
	mov	local12, #11
	mov	arg01, local09
	mov	arg02, local11
	mov	arg03, #11
	sub	local01, #32
	call	#_ff_cc_mem_cmp_0407
	mov	local13, result1 wz
 if_e	jmp	#LR__0310
LR__0309
	mov	local04, local01
	mov	local06, #0
	mov	arg01, local04
	mov	arg02, #0
	call	#_ff_cc_dir_next_0449
	mov	local14, result1
	mov	local03, local14 wz
 if_e	jmp	#LR__0308
LR__0310
	mov	result1, local03
LR__0311
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_find_0465_ret
	ret

_ff_cc_dir_register_0468
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	mov	arg01, local01
	mov	arg02, #1
	call	#_ff_cc_dir_alloc_0453
	mov	local03, result1 wz
 if_ne	jmp	#LR__0317
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	mov	arg01, local02
	call	#_ff_cc_move_window_0414
	mov	local03, result1 wz
 if_ne	jmp	#LR__0316
	add	local01, #28
	rdlong	arg01, local01
	sub	local01, #28
	mov	arg02, #0
	loc	pa,	#(@LR__0314-@LR__0312)
	call	#FCACHE_LOAD_
LR__0312
	rep	@LR__0315, #32
LR__0313
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0314
LR__0315
	add	local01, #28
	rdlong	arg01, local01
	add	local01, #4
	mov	arg02, local01
	mov	arg03, #11
	call	#_ff_cc_mem_cpy_0401
	add	local02, #3
	wrbyte	#1, local02
LR__0316
LR__0317
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_register_0468_ret
	ret

_ff_cc_dir_remove_0471
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	add	local01, #24
	rdlong	arg02, local01
	sub	local01, #24
	mov	arg01, local02
	call	#_ff_cc_move_window_0414
	mov	local03, result1 wz
 if_ne	jmp	#LR__0318
	add	local01, #28
	rdlong	local04, local01
	wrbyte	#229, local04
	add	local02, #3
	wrbyte	#1, local02
LR__0318
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_dir_remove_0471_ret
	ret

_ff_cc_get_fileinfo_0475
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	local02, #12
	wrbyte	#0, local02
	sub	local02, #12
	add	local01, #24
	rdlong	local03, local01
	sub	local01, #24
	mov	local04, local03 wz
 if_e	jmp	#LR__0322
	mov	local05, #0
	mov	local06, #0
LR__0319
	cmp	local06, #11 wcz
 if_ae	jmp	#LR__0321
	add	local01, #28
	rdlong	local07, local01
	sub	local01, #28
	mov	local08, local06
	add	local08, local07
	rdbyte	local09, local08
	mov	local04, local09
	zerox	local04, #7
	cmp	local04, #32 wz
	add	local06, #1
 if_e	jmp	#LR__0319
	mov	local04, local09
	zerox	local04, #7
	cmp	local04, #5 wz
 if_e	mov	local09, #229
	cmp	local06, #9 wz
 if_ne	jmp	#LR__0320
	mov	local10, local05
	add	local02, #12
	add	local10, local02
	wrbyte	#46, local10
	add	local05, #1
	sub	local02, #12
LR__0320
	mov	local10, local05
	add	local02, #12
	add	local10, local02
	wrbyte	local09, local10
	add	local05, #1
	sub	local02, #12
	jmp	#LR__0319
LR__0321
	add	local02, #12
	add	local05, local02
	wrbyte	#0, local05
	add	local01, #28
	rdlong	local04, local01
	add	local04, #11
	rdbyte	local10, local04
	sub	local02, #4
	wrbyte	local10, local02
	sub	local02, #8
	rdlong	arg01, local01
	sub	local01, #28
	add	arg01, #28
	call	#_ff_cc_ld_dword_0396
	wrlong	result1, local02
	add	local01, #28
	rdlong	arg01, local01
	sub	local01, #28
	add	arg01, #22
	call	#_ff_cc_ld_word_0394
	mov	local11, result1
	add	local02, #6
	wrword	local11, local02
	sub	local02, #6
	add	local01, #28
	rdlong	arg01, local01
	add	arg01, #24
	call	#_ff_cc_ld_word_0394
	add	local02, #4
	wrword	result1, local02
LR__0322
	mov	ptra, fp
	call	#popregs_
_ff_cc_get_fileinfo_0475_ret
	ret

_ff_cc_create_name_0483
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local02
	add	local01, #32
	mov	local04, local01
	mov	arg01, local04
	mov	arg02, #32
	mov	arg03, #11
	sub	local01, #32
	loc	pa,	#(@LR__0325-@LR__0323)
	call	#FCACHE_LOAD_
LR__0323
	rep	@LR__0326, #11
LR__0324
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0325
LR__0326
	mov	local05, #0
	mov	local06, #0
	mov	local07, #8
LR__0327
	mov	local08, local06
	add	local08, local03
	rdbyte	local09, local08
	mov	local10, local09
	zerox	local10, #7
	cmp	local10, #32 wcz
	add	local06, #1
 if_be	jmp	#LR__0341
	mov	local10, local09
	zerox	local10, #7
	cmp	local10, #47 wz
 if_e	jmp	#LR__0328
	mov	local11, local09
	zerox	local11, #7
	cmp	local11, #92 wz
 if_ne	jmp	#LR__0331
LR__0328
LR__0329
	mov	local11, local06
	add	local11, local03
	rdbyte	local10, local11
	cmp	local10, #47 wz
 if_e	jmp	#LR__0330
	mov	local12, local06
	add	local12, local03
	rdbyte	local13, local12
	cmp	local13, #92 wz
 if_ne	jmp	#LR__0341
LR__0330
	add	local06, #1
	jmp	#LR__0329
LR__0331
	mov	local10, local09
	zerox	local10, #7
	cmp	local10, #46 wz
 if_e	jmp	#LR__0332
	cmp	local05, local07 wcz
 if_b	jmp	#LR__0335
LR__0332
	cmp	local07, #11 wz
 if_e	jmp	#LR__0333
	zerox	local09, #7
	cmp	local09, #46 wz
 if_e	jmp	#LR__0334
LR__0333
	mov	result1, #6
	jmp	#LR__0342
LR__0334
	mov	local05, #8
	mov	local07, #11
	jmp	#LR__0327
LR__0335
	mov	local10, local09
	zerox	local10, #7
	cmp	local10, #128 wcz
 if_b	jmp	#LR__0336
	zerox	local09, #7
	and	local09, #127
	add	ptr__ff_cc_dat__, #6
	add	local09, ptr__ff_cc_dat__
	rdbyte	local09, local09
	sub	ptr__ff_cc_dat__, #6
LR__0336
	mov	arg01, local09
	zerox	arg01, #7 wz
 if_ne	mov	result1, #0
 if_e	mov	result1, #0
	cmp	result1, #0 wz
 if_e	jmp	#LR__0339
	mov	local08, local06
	mov	local13, local03
	add	local08, local03
	rdbyte	local14, local08
	mov	arg01, local14
	add	local06, #1
	zerox	arg01, #7 wz
 if_ne	mov	result1, #0
 if_e	mov	result1, #0
	mov	local11, result1 wz
 if_e	jmp	#LR__0337
	mov	local08, local07
	sub	local08, #1
	cmp	local05, local08 wcz
 if_b	jmp	#LR__0338
LR__0337
	mov	result1, #6
	jmp	#LR__0342
LR__0338
	mov	local08, local05
	add	local08, local04
	wrbyte	local09, local08
	add	local05, #1
	mov	local08, local05
	add	local08, local04
	wrbyte	local14, local08
	add	local05, #1
	jmp	#LR__0327
LR__0339
	mov	arg01, ##@LR__0972
	mov	local08, local09
	zerox	local08, #7
	mov	local13, local08
	mov	arg02, local13
	call	#_ff_cc_chk_chr_0408
	mov	local12, result1 wz
 if_ne	mov	result1, #6
 if_ne	jmp	#LR__0342
	mov	local10, local09
	zerox	local10, #7
	cmp	local10, #97 wcz
 if_b	jmp	#LR__0340
	mov	local11, local09
	zerox	local11, #7
	cmp	local11, #122 wcz
 if_a	jmp	#LR__0340
	mov	local10, local09
	zerox	local10, #7
	sub	local10, #32
	mov	local09, local10
LR__0340
	mov	local08, local05
	add	local08, local04
	wrbyte	local09, local08
	add	local05, #1
	jmp	#LR__0327
LR__0341
	add	local03, local06
	wrlong	local03, local02
	cmp	local05, #0 wz
 if_e	mov	result1, #6
 if_e	jmp	#LR__0342
	rdbyte	local10, local04
	cmp	local10, #229 wz
 if_e	wrbyte	#5, local04
	mov	local11, local09
	zerox	local11, #7
	cmp	local11, #32 wcz
 if_be	mov	local10, #4
 if_a	mov	local10, #0
	add	local04, #11
	wrbyte	local10, local04
	mov	result1, #0
LR__0342
	mov	ptra, fp
	call	#popregs_
_ff_cc_create_name_0483_ret
	ret

_ff_cc_follow_path_0487
	mov	COUNT_, #7
	call	#pushregs_
	add	ptra, #24
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	local01, fp
	rdlong	local02, local01
	add	fp, #16
	wrlong	local02, fp
	sub	fp, #20
	loc	pa,	#(@LR__0345-@LR__0343)
	call	#FCACHE_LOAD_
LR__0343
	add	fp, #8
	rdlong	local03, fp
	sub	fp, #8
	rdbyte	local01, local03
	cmp	local01, #47 wz
 if_e	jmp	#LR__0344
	add	fp, #8
	rdlong	local04, fp
	sub	fp, #8
	rdbyte	local05, local04
	cmp	local05, #92 wz
 if_ne	jmp	#LR__0346
LR__0344
	add	fp, #8
	rdlong	local02, fp
	add	local02, #1
	wrlong	local02, fp
	sub	fp, #8
	jmp	#LR__0343
LR__0345
LR__0346
	add	fp, #4
	rdlong	local01, fp
	add	local01, #8
	wrlong	#0, local01
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #8
	rdbyte	local01, local03
	cmp	local01, #32 wcz
 if_ae	jmp	#LR__0347
	add	fp, #4
	rdlong	local01, fp
	add	local01, #43
	wrbyte	#128, local01
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0445
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	jmp	#LR__0352
LR__0347
LR__0348
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	mov	arg02, fp
	sub	fp, #8
	call	#_ff_cc_create_name_0483
	mov	local04, result1
	add	fp, #12
	wrlong	local04, fp
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0351
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	call	#_ff_cc_dir_find_0465
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #8
	rdlong	local01, fp
	add	local01, #43
	rdbyte	local02, local01
	add	fp, #12
	wrbyte	local02, fp
	sub	fp, #4
	rdlong	local01, fp wz
	sub	fp, #12
 if_e	jmp	#LR__0349
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #4 wz
 if_ne	jmp	#LR__0351
	add	fp, #16
	rdbyte	local01, fp
	sub	fp, #16
	zerox	local01, #7
	test	local01, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#5, fp
 if_e	sub	fp, #12
	jmp	#LR__0351
LR__0349
	add	fp, #16
	rdbyte	local01, fp
	sub	fp, #16
	zerox	local01, #7
	test	local01, #4 wz
 if_ne	jmp	#LR__0351
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #4
	add	local03, #6
	rdbyte	local01, local03
	test	local01, #16 wz
 if_ne	jmp	#LR__0350
	add	fp, #12
	wrlong	#5, fp
	sub	fp, #12
	jmp	#LR__0351
LR__0350
	add	fp, #4
	rdlong	local01, fp
	add	fp, #16
	rdlong	arg01, fp
	mov	arg02, arg01
	add	arg02, #48
	sub	fp, #16
	rdlong	local06, fp
	sub	fp, #4
	add	local06, #16
	rdlong	local07, local06
	and	local07, #511
	add	arg02, local07
	call	#_ff_cc_ld_clust_0455
	add	local01, #8
	wrlong	result1, local01
	jmp	#LR__0348
LR__0351
LR__0352
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_ff_cc_follow_path_0487_ret
	ret

_ff_cc_get_ldnumber_0493
	mov	_var01, arg01
	neg	_var02, #1
	rdlong	_var03, _var01 wz
	mov	_var04, _var03
 if_e	neg	result1, #1
 if_e	jmp	#_ff_cc_get_ldnumber_0493_ret
	loc	pa,	#(@LR__0354-@LR__0353)
	call	#FCACHE_LOAD_
LR__0353
	rdbyte	_var05, _var04
	mov	_var06, _var05
	zerox	_var06, #7
	cmp	_var06, #33 wcz
	add	_var04, #1
 if_b	jmp	#LR__0355
	mov	_var07, _var05
	zerox	_var07, #7
	cmp	_var07, #58 wz
 if_ne	jmp	#LR__0353
LR__0354
LR__0355
	mov	_var06, _var05
	zerox	_var06, #7
	cmp	_var06, #58 wz
 if_ne	jmp	#LR__0357
	mov	_var08, #1
	rdbyte	_var06, _var03
	cmp	_var06, #48 wcz
 if_b	jmp	#LR__0356
	rdbyte	_var07, _var03
	cmp	_var07, #57 wcz
 if_a	jmp	#LR__0356
	mov	_var09, _var03
	add	_var09, #2
	cmp	_var09, _var04 wz
 if_e	rdbyte	_var06, _var03
 if_e	sub	_var06, #48
 if_e	mov	_var08, _var06
LR__0356
	cmps	_var08, #1 wcz
 if_b	mov	_var02, _var08
 if_b	wrlong	_var04, _var01
	mov	result1, _var02
	jmp	#_ff_cc_get_ldnumber_0493_ret
LR__0357
	mov	result1, #0
_ff_cc_get_ldnumber_0493_ret
	ret

_ff_cc_check_fs_0494
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	local01, #3
	wrbyte	#0, local01
	add	local01, #41
	wrlong	##-1, local01
	sub	local01, #44
	mov	arg01, local01
	mov	arg02, local02
	call	#_ff_cc_move_window_0414
	cmp	result1, #0 wz
 if_ne	mov	result1, #4
 if_ne	jmp	#LR__0360
	add	local01, #48
	mov	arg01, local01
	add	arg01, #510
	sub	local01, #48
	call	#_ff_cc_ld_word_0394
	mov	local03, result1
	zerox	local03, #15
	cmp	local03, ##43605 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0360
	add	local01, #48
	rdbyte	local04, local01
	sub	local01, #48
	mov	local03, local04
	zerox	local03, #7
	cmp	local03, #233 wz
 if_e	jmp	#LR__0358
	add	local01, #48
	rdbyte	local05, local01
	sub	local01, #48
	mov	local06, local05
	zerox	local06, #7
	cmp	local06, #235 wz
 if_e	jmp	#LR__0358
	add	local01, #48
	rdbyte	local07, local01
	sub	local01, #48
	mov	local08, local07
	zerox	local08, #7
	cmp	local08, #232 wz
 if_ne	jmp	#LR__0359
LR__0358
	add	local01, #48
	mov	arg01, local01
	sub	local01, #48
	add	arg01, #54
	mov	arg02, ##@LR__0974
	mov	arg03, #3
	call	#_ff_cc_mem_cmp_0407
	cmp	result1, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0360
	add	local01, #48
	mov	arg01, local01
	add	arg01, #82
	mov	arg02, ##@LR__0975
	mov	arg03, #5
	call	#_ff_cc_mem_cmp_0407
	cmp	result1, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0360
LR__0359
	mov	result1, #2
LR__0360
	mov	ptra, fp
	call	#popregs_
_ff_cc_check_fs_0494_ret
	ret

_ff_cc_find_volume_0498
	mov	COUNT_, #13
	call	#pushregs_
	add	ptra, #36
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, local01
	mov	arg01, local03
	mov	arg02, #0
	call	#_ff_cc_check_fs_0494
	mov	local04, result1
	cmp	local04, #2 wz
 if_e	jmp	#LR__0362
	cmp	local04, #3 wcz
 if_ae	jmp	#LR__0361
	cmp	local02, #0 wz
 if_ne	jmp	#LR__0362
LR__0361
	mov	result1, local04
	jmp	#LR__0369
LR__0362
	mov	local05, #0
LR__0363
	cmp	local05, #4 wcz
 if_ae	jmp	#LR__0364
	mov	local03, local05
	shl	local03, #2
	add	fp, #20
	add	local03, fp
	add	local01, #48
	mov	local06, local01
	add	local06, #446
	mov	local07, local05
	shl	local07, #4
	mov	local08, local07
	add	local06, local07
	add	local06, #8
	mov	arg01, local06
	sub	fp, #20
	sub	local01, #48
	call	#_ff_cc_ld_dword_0396
	mov	local09, result1
	wrlong	local09, local03
	add	local05, #1
	jmp	#LR__0363
LR__0364
	cmp	local02, #0 wz
 if_ne	mov	local03, local02
 if_ne	sub	local03, #1
 if_e	mov	local03, #0
	mov	local05, local03
LR__0365
	mov	local10, local05
	shl	local10, #2
	add	fp, #20
	mov	local11, fp
	add	local10, fp
	rdlong	local12, local10 wz
	sub	fp, #20
 if_e	jmp	#LR__0366
	mov	local07, local01
	mov	local08, local05
	shl	local08, #2
	add	fp, #20
	mov	local06, fp
	add	local08, fp
	rdlong	local09, local08
	mov	arg01, local07
	mov	arg02, local09
	sub	fp, #20
	call	#_ff_cc_check_fs_0494
	mov	local13, result1
	mov	local03, local13
	jmp	#LR__0367
LR__0366
	mov	local03, #3
LR__0367
	mov	local04, local03
	cmp	local02, #0 wz
 if_ne	jmp	#LR__0368
	cmp	local04, #2 wcz
 if_b	jmp	#LR__0368
	mov	local03, local05
	add	local03, #1
	mov	local05, local03
	cmp	local05, #4 wcz
 if_b	jmp	#LR__0365
LR__0368
	mov	result1, local04
LR__0369
	mov	ptra, fp
	call	#popregs_
_ff_cc_find_volume_0498_ret
	ret

_ff_cc_mount_volume_0510
	mov	COUNT_, #27
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	wrlong	#0, local02
	mov	arg01, local01
	call	#_ff_cc_get_ldnumber_0493
	mov	local04, result1
	cmps	local04, #0 wcz
 if_b	mov	result1, #11
 if_b	jmp	#LR__0385
	mov	local05, local04
	shl	local05, #2
	add	local05, ptr__ff_cc_dat__
	rdlong	local06, local05 wz
 if_e	mov	result1, #12
 if_e	jmp	#LR__0385
	wrlong	local06, local02
	zerox	local03, #7
	and	local03, #254
	rdbyte	local05, local06 wz
 if_e	jmp	#LR__0372
	add	local06, #1
	rdbyte	arg01, local06 wz
	sub	local06, #1
 if_ne	mov	result1, #1
 if_e	add	ptr__ff_cc_dat__, #380
 if_e	rdbyte	result1, ptr__ff_cc_dat__
 if_e	sub	ptr__ff_cc_dat__, #380
	mov	local05, result1
	zerox	local05, #7
	test	local05, #1 wz
 if_ne	jmp	#LR__0371
	cmp	local03, #0 wz
 if_e	jmp	#LR__0370
	zerox	result1, #7
	and	result1, #4 wz
 if_ne	mov	result1, #10
 if_ne	jmp	#LR__0385
LR__0370
	mov	result1, #0
	jmp	#LR__0385
LR__0371
LR__0372
	wrbyte	#0, local06
	add	local06, #1
	wrbyte	local04, local06
	rdbyte	arg01, local06
	sub	local06, #1
	call	#_ff_cc_disk_initialize
	mov	local07, result1
	mov	local05, local07
	zerox	local05, #7
	test	local05, #1 wz
 if_ne	mov	result1, #3
 if_ne	jmp	#LR__0385
	cmp	local03, #0 wz
 if_e	jmp	#LR__0373
	mov	local05, local07
	zerox	local05, #7
	test	local05, #4 wz
 if_ne	mov	result1, #10
 if_ne	jmp	#LR__0385
LR__0373
	mov	arg01, local06
	mov	arg02, #0
	call	#_ff_cc_find_volume_0498
	mov	local08, result1
	cmp	local08, #4 wz
 if_e	mov	result1, #1
 if_e	jmp	#LR__0385
	cmp	local08, #2 wcz
 if_ae	mov	result1, #13
 if_ae	jmp	#LR__0385
	add	local06, #44
	rdlong	local09, local06
	add	local06, #4
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #11
	call	#_ff_cc_ld_word_0394
	mov	local05, result1
	zerox	local05, #15
	cmp	local05, ##512 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0385
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #22
	call	#_ff_cc_ld_word_0394
	mov	local10, result1
	zerox	local10, #15 wz
 if_ne	jmp	#LR__0374
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #36
	call	#_ff_cc_ld_dword_0396
	mov	local10, result1
LR__0374
	add	local06, #24
	wrlong	local10, local06
	add	local06, #40
	rdbyte	local05, local06
	sub	local06, #62
	wrbyte	local05, local06
	rdbyte	local05, local06
	sub	local06, #2
	zerox	local05, #7
	cmp	local05, #1 wz
 if_e	jmp	#LR__0375
	add	local06, #2
	rdbyte	local11, local06
	sub	local06, #2
	zerox	local11, #7
	cmp	local11, #2 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0385
LR__0375
	add	local06, #2
	rdbyte	local05, local06
	qmul	local10, local05
	getqx	local10
	add	local06, #59
	rdbyte	local05, local06
	sub	local06, #51
	wrword	local05, local06
	rdword	local05, local06
	sub	local06, #10
	zerox	local05, #15 wz
 if_e	jmp	#LR__0376
	add	local06, #10
	rdword	local11, local06
	rdword	local12, local06
	sub	local06, #10
	zerox	local12, #15
	sub	local12, #1
	test	local11, local12 wz
 if_e	jmp	#LR__0377
LR__0376
	mov	result1, #13
	jmp	#LR__0385
LR__0377
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #17
	call	#_ff_cc_ld_word_0394
	add	local06, #8
	wrword	result1, local06
	rdword	local05, local06
	sub	local06, #8
	zerox	local05, #15
	abs	local11, local05 wc
	and	local11, #15
 if_b	neg	local11, local11
	cmp	local11, #0 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0385
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #19
	call	#_ff_cc_ld_word_0394
	mov	local13, result1
	zerox	local13, #15 wz
 if_ne	jmp	#LR__0378
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #32
	call	#_ff_cc_ld_dword_0396
	mov	local13, result1
LR__0378
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #14
	call	#_ff_cc_ld_word_0394
	mov	local14, result1
	mov	local05, local14
	zerox	local05, #15 wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0385
	mov	local15, local14
	zerox	local15, #15
	add	local15, local10
	add	local06, #8
	rdword	local16, local06
	sub	local06, #8
	zerox	local16, #15
	abs	local17, local16 wc
	shr	local17, #4
 if_b	neg	local17, local17
	add	local15, local17
	cmp	local13, local15 wcz
 if_b	mov	result1, #13
 if_b	jmp	#LR__0385
	mov	muldiva_, local13
	sub	muldiva_, local15
	add	local06, #10
	rdword	muldivb_, local06
	sub	local06, #10
	zerox	muldivb_, #15
	call	#unsdivide_
	mov	local18, muldivb_ wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0385
	mov	local08, #0
	cmp	local18, ##268435445 wcz
 if_be	mov	local08, #3
	cmp	local18, ##65525 wcz
 if_be	mov	local08, #2
	cmp	local18, ##4085 wcz
 if_be	mov	local08, #1
	cmp	local08, #0 wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0385
	mov	local05, local18
	add	local05, #2
	add	local06, #20
	wrlong	local05, local06
	add	local06, #8
	wrlong	local09, local06
	mov	local05, local09
	mov	local16, local14
	zerox	local16, #15
	add	local05, local16
	add	local06, #4
	wrlong	local05, local06
	mov	local05, local09
	add	local05, local15
	add	local06, #8
	wrlong	local05, local06
	sub	local06, #40
	cmp	local08, #3 wz
 if_ne	jmp	#LR__0379
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #42
	call	#_ff_cc_ld_word_0394
	mov	local05, result1
	zerox	local05, #15 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0385
	add	local06, #8
	rdword	local05, local06
	sub	local06, #8
	zerox	local05, #15 wz
 if_ne	mov	result1, #13
 if_ne	jmp	#LR__0385
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #44
	call	#_ff_cc_ld_dword_0396
	add	local06, #36
	wrlong	result1, local06
	sub	local06, #16
	rdlong	local19, local06
	sub	local06, #20
	shl	local19, #2
	jmp	#LR__0382
LR__0379
	add	local06, #8
	rdword	local05, local06
	sub	local06, #8
	zerox	local05, #15 wz
 if_e	mov	result1, #13
 if_e	jmp	#LR__0385
	add	local06, #32
	rdlong	local05, local06
	add	local05, local10
	add	local06, #4
	wrlong	local05, local06
	sub	local06, #36
	cmp	local08, #2 wz
 if_ne	jmp	#LR__0380
	add	local06, #20
	rdlong	local05, local06
	sub	local06, #20
	shl	local05, #1
	jmp	#LR__0381
LR__0380
	add	local06, #20
	rdlong	local20, local06
	mov	local05, local20
	shl	local05, #1
	add	local05, local20
	shr	local05, #1
	sub	local06, #20
	test	local20, #1 wz
 if_ne	add	local05, #1
LR__0381
	mov	local19, local05
LR__0382
	mov	local16, local19
	add	local16, #511
	shr	local16, #9
	add	local06, #24
	rdlong	local11, local06
	sub	local06, #24
	cmp	local11, local16 wcz
 if_b	mov	result1, #13
 if_b	jmp	#LR__0385
	add	local06, #16
	wrlong	##-1, local06
	sub	local06, #4
	wrlong	##-1, local06
	sub	local06, #8
	wrbyte	#128, local06
	sub	local06, #4
	cmp	local08, #3 wz
 if_ne	jmp	#LR__0384
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #48
	call	#_ff_cc_ld_word_0394
	mov	local05, result1
	zerox	local05, #15
	cmp	local05, #1 wz
 if_ne	jmp	#LR__0384
	mov	local21, local06
	mov	local22, local09
	add	local22, #1
	mov	local23, local22
	mov	arg01, local21
	mov	arg02, local23
	call	#_ff_cc_move_window_0414
	mov	local24, result1 wz
 if_ne	jmp	#LR__0384
	add	local06, #4
	wrbyte	#0, local06
	add	local06, #44
	mov	local11, local06
	mov	local16, local11
	add	local16, #510
	mov	local17, local16
	mov	arg01, local17
	sub	local06, #48
	call	#_ff_cc_ld_word_0394
	mov	local12, result1
	mov	local05, local12
	zerox	local05, #15
	cmp	local05, ##43605 wz
 if_ne	jmp	#LR__0383
	add	local06, #48
	mov	local22, local06
	mov	local21, local22
	mov	local23, local21
	mov	arg01, local23
	sub	local06, #48
	call	#_ff_cc_ld_dword_0396
	mov	local24, result1
	cmp	local24, ##1096897106 wz
 if_ne	jmp	#LR__0383
	add	local06, #48
	mov	local25, local06
	mov	local20, local25
	add	local20, #484
	mov	local26, local20
	mov	arg01, local26
	sub	local06, #48
	call	#_ff_cc_ld_dword_0396
	mov	local27, result1
	cmp	local27, ##1631679090 wz
 if_ne	jmp	#LR__0383
	add	local06, #48
	mov	arg01, local06
	sub	local06, #48
	add	arg01, #488
	call	#_ff_cc_ld_dword_0396
	mov	local17, result1
	add	local06, #16
	wrlong	local17, local06
	add	local06, #32
	mov	local16, local06
	mov	local05, local16
	add	local05, #492
	mov	local11, local05
	mov	arg01, local11
	sub	local06, #48
	call	#_ff_cc_ld_dword_0396
	mov	local17, result1
	add	local06, #12
	wrlong	local17, local06
	sub	local06, #12
LR__0383
LR__0384
	wrbyte	local08, local06
	add	ptr__ff_cc_dat__, #4
	rdword	local05, ptr__ff_cc_dat__
	add	local05, #1
	wrword	local05, ptr__ff_cc_dat__
	rdword	local11, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #4
	add	local06, #6
	wrword	local11, local06
	mov	result1, #0
LR__0385
	mov	ptra, fp
	call	#popregs_
_ff_cc_mount_volume_0510_ret
	ret

_ff_cc_validate_0512
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01 wz
	mov	local02, arg02
	mov	local03, #9
 if_e	jmp	#LR__0386
	rdlong	local04, local01 wz
 if_e	jmp	#LR__0386
	rdlong	local05, local01
	rdbyte	local06, local05 wz
 if_e	jmp	#LR__0386
	add	local01, #4
	rdword	local07, local01
	sub	local01, #4
	zerox	local07, #15
	rdlong	local08, local01
	add	local08, #6
	rdword	local09, local08
	sub	local08, #6
	mov	local10, local09
	zerox	local10, #15
	cmp	local07, local10 wz
 if_ne	jmp	#LR__0386
	rdlong	local05, local01
	add	local05, #1
	rdbyte	local07, local05
	sub	local05, #1
	mov	local06, local07
	mov	arg01, local06 wz
 if_ne	mov	result1, #1
 if_e	add	ptr__ff_cc_dat__, #380
 if_e	rdbyte	result1, ptr__ff_cc_dat__
 if_e	sub	ptr__ff_cc_dat__, #380
	mov	local11, result1
	mov	local04, local11
	zerox	local04, #7
	and	local04, #1 wz
 if_e	mov	local03, #0
LR__0386
	cmp	local03, #0 wz
 if_e	rdlong	local04, local01
 if_ne	mov	local04, #0
	wrlong	local04, local02
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
_ff_cc_validate_0512_ret
	ret

_ff_cc_f_mount
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #32
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrbyte	arg03, fp
	sub	fp, #4
	rdlong	local01, fp
	add	fp, #20
	wrlong	local01, fp
	mov	arg01, fp
	sub	fp, #28
	call	#_ff_cc_get_ldnumber_0493
	add	fp, #20
	wrlong	result1, fp
	mov	local01, result1
	sub	fp, #20
	cmps	local01, #0 wcz
 if_b	mov	result1, #11
 if_b	jmp	#LR__0389
	add	fp, #20
	rdlong	local01, fp
	shl	local01, #2
	add	local01, ptr__ff_cc_dat__
	rdlong	local02, local01
	sub	fp, #4
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0387
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	wrbyte	#0, local01
LR__0387
	add	fp, #4
	rdlong	local01, fp wz
	sub	fp, #4
 if_e	jmp	#LR__0388
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	wrbyte	#0, local01
LR__0388
	add	fp, #20
	rdlong	local01, fp
	shl	local01, #2
	add	local01, ptr__ff_cc_dat__
	sub	fp, #16
	rdlong	local02, fp
	wrlong	local02, local01
	add	fp, #8
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0389
	add	fp, #8
	mov	arg01, fp
	sub	fp, #4
	mov	arg02, fp
	sub	fp, #4
	mov	arg03, #0
	call	#_ff_cc_mount_volume_0510
	add	fp, #24
	wrlong	result1, fp
	sub	fp, #24
LR__0389
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_mount_ret
	ret

_ff_cc_f_open
	mov	COUNT_, #16
	call	#pushregs_
	add	ptra, #88
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrbyte	arg03, fp
	sub	fp, #8
	rdlong	local01, fp wz
	sub	fp, #4
 if_e	mov	result1, #9
 if_e	jmp	#LR__0413
	add	fp, #12
	rdbyte	local01, fp
	and	local01, #63
	wrbyte	local01, fp
	sub	fp, #4
	mov	arg01, fp
	add	fp, #56
	mov	arg02, fp
	sub	fp, #52
	rdbyte	local02, fp
	sub	fp, #12
	mov	arg03, local02
	call	#_ff_cc_mount_volume_0510
	mov	local03, result1
	add	fp, #16
	wrlong	local03, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0411
	add	fp, #64
	rdlong	local01, fp
	sub	fp, #44
	wrlong	local01, fp
	mov	arg01, fp
	sub	fp, #12
	rdlong	local04, fp
	sub	fp, #8
	mov	local05, local04
	mov	arg02, local05
	call	#_ff_cc_follow_path_0487
	mov	local06, result1
	add	fp, #16
	wrlong	local06, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0390
	add	fp, #63
	rdbyte	local01, fp
	sub	fp, #63
	zerox	local01, #7
	test	local01, #128 wz
 if_ne	add	fp, #16
 if_ne	wrlong	#6, fp
 if_ne	sub	fp, #16
LR__0390
	add	fp, #12
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	test	local01, #28 wz
 if_e	jmp	#LR__0396
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0392
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #4 wz
 if_ne	jmp	#LR__0391
	add	fp, #20
	mov	arg01, fp
	sub	fp, #20
	call	#_ff_cc_dir_register_0468
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #16
LR__0391
	add	fp, #12
	rdbyte	local01, fp
	or	local01, #8
	wrbyte	local01, fp
	sub	fp, #12
	jmp	#LR__0395
LR__0392
	add	fp, #26
	rdbyte	local01, fp
	sub	fp, #26
	zerox	local01, #7
	test	local01, #17 wz
 if_e	jmp	#LR__0393
	add	fp, #16
	wrlong	#7, fp
	sub	fp, #16
	jmp	#LR__0394
LR__0393
	add	fp, #12
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	test	local01, #4 wz
 if_ne	add	fp, #16
 if_ne	wrlong	#8, fp
 if_ne	sub	fp, #16
LR__0394
LR__0395
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0401
	add	fp, #12
	rdbyte	local05, fp
	sub	fp, #12
	zerox	local05, #7
	test	local05, #8 wz
 if_e	jmp	#LR__0401
	add	fp, #64
	rdlong	arg01, fp
	sub	fp, #16
	rdlong	arg02, fp
	sub	fp, #48
	call	#_ff_cc_ld_clust_0455
	mov	local06, result1
	add	fp, #68
	wrlong	local06, fp
	sub	fp, #20
	rdlong	arg01, fp
	sub	fp, #48
	add	arg01, #14
	mov	arg02, ##1310785536
	call	#_ff_cc_st_dword_0398
	add	fp, #48
	rdlong	local01, fp
	add	local01, #11
	wrbyte	#32, local01
	add	fp, #16
	rdlong	arg01, fp
	sub	fp, #16
	rdlong	arg02, fp
	sub	fp, #48
	mov	arg03, #0
	call	#_ff_cc_st_clust_0456
	add	fp, #48
	rdlong	arg01, fp
	sub	fp, #48
	add	arg01, #28
	mov	arg02, #0
	call	#_ff_cc_st_dword_0398
	add	fp, #64
	rdlong	local01, fp
	add	local01, #3
	wrbyte	#1, local01
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #68
	mov	local01, local07 wz
 if_e	jmp	#LR__0401
	add	fp, #64
	rdlong	local01, fp
	add	local01, #44
	rdlong	local05, local01
	add	fp, #16
	wrlong	local05, fp
	sub	fp, #60
	mov	arg01, fp
	add	fp, #48
	rdlong	arg02, fp
	sub	fp, #68
	mov	arg03, #0
	call	#_ff_cc_remove_chain_0430
	mov	local07, result1
	add	fp, #16
	wrlong	local07, fp
	sub	fp, #16
	mov	local01, local07 wz
 if_ne	jmp	#LR__0401
	add	fp, #64
	rdlong	arg01, fp
	add	fp, #16
	rdlong	arg02, fp
	sub	fp, #80
	call	#_ff_cc_move_window_0414
	mov	local06, result1
	add	fp, #16
	wrlong	local06, fp
	add	fp, #48
	rdlong	local01, fp
	add	fp, #4
	rdlong	local05, fp
	sub	fp, #68
	sub	local05, #1
	add	local01, #12
	wrlong	local05, local01
	jmp	#LR__0401
LR__0396
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0400
	add	fp, #26
	rdbyte	local01, fp
	sub	fp, #26
	zerox	local01, #7
	test	local01, #16 wz
 if_e	jmp	#LR__0397
	add	fp, #16
	wrlong	#4, fp
	sub	fp, #16
	jmp	#LR__0399
LR__0397
	add	fp, #12
	rdbyte	local07, fp
	sub	fp, #12
	mov	local01, local07
	zerox	local01, #7
	test	local01, #2 wz
 if_e	jmp	#LR__0398
	add	fp, #26
	rdbyte	local04, fp
	sub	fp, #26
	mov	local05, local04
	zerox	local05, #7
	and	local05, #1 wz
 if_e	jmp	#LR__0398
	mov	local01, #7
	add	fp, #16
	wrlong	#7, fp
	sub	fp, #16
LR__0398
LR__0399
LR__0400
LR__0401
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0403
	add	fp, #12
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	test	local01, #8 wz
 if_e	jmp	#LR__0402
	add	fp, #12
	rdbyte	local01, fp
	or	local01, #64
	wrbyte	local01, fp
	sub	fp, #12
LR__0402
	add	fp, #4
	rdlong	local01, fp
	add	fp, #60
	rdlong	local05, fp
	add	local05, #44
	rdlong	local06, local05
	add	local01, #32
	wrlong	local06, local01
	sub	fp, #60
	rdlong	local01, fp
	add	fp, #44
	rdlong	local05, fp
	sub	fp, #48
	add	local01, #36
	wrlong	local05, local01
LR__0403
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0410
	add	fp, #4
	rdlong	local01, fp
	add	fp, #60
	rdlong	arg01, fp
	sub	fp, #16
	rdlong	arg02, fp
	sub	fp, #48
	call	#_ff_cc_ld_clust_0455
	mov	local03, result1
	add	local01, #8
	wrlong	local03, local01
	add	fp, #4
	rdlong	local01, fp
	add	fp, #44
	rdlong	arg01, fp
	sub	fp, #48
	add	arg01, #28
	call	#_ff_cc_ld_dword_0396
	add	local01, #12
	wrlong	result1, local01
	add	fp, #4
	rdlong	local01, fp
	add	fp, #60
	rdlong	local05, fp
	wrlong	local05, local01
	sub	fp, #60
	rdlong	local01, fp
	add	fp, #60
	rdlong	local05, fp
	add	local05, #6
	rdword	local06, local05
	add	local01, #4
	wrword	local06, local01
	sub	fp, #60
	rdlong	local01, fp
	add	fp, #8
	rdbyte	local05, fp
	add	local01, #16
	wrbyte	local05, local01
	sub	fp, #8
	rdlong	local01, fp
	add	local01, #17
	wrbyte	#0, local01
	rdlong	local01, fp
	add	local01, #28
	wrlong	#0, local01
	rdlong	local01, fp
	add	local01, #20
	wrlong	#0, local01
	add	fp, #8
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	test	local01, #32 wz
 if_e	jmp	#LR__0409
	add	fp, #4
	rdlong	local05, fp
	sub	fp, #4
	add	local05, #12
	rdlong	local02, local05
	cmp	local02, #0 wcz
 if_be	jmp	#LR__0409
	add	fp, #4
	rdlong	local01, fp
	mov	local05, local01
	add	local05, #12
	rdlong	local06, local05
	add	local01, #20
	wrlong	local06, local01
	add	fp, #60
	rdlong	local07, fp
	add	local07, #10
	rdword	local06, local07
	shl	local06, #9
	add	fp, #8
	wrlong	local06, fp
	sub	fp, #68
	rdlong	local01, fp
	add	local01, #8
	rdlong	local05, local01
	add	fp, #72
	wrlong	local05, fp
	sub	fp, #72
	rdlong	local01, fp
	add	local01, #12
	rdlong	local05, local01
	add	fp, #80
	wrlong	local05, fp
	sub	fp, #84
LR__0404
	add	fp, #16
	rdlong	local06, fp
	sub	fp, #16
	mov	local04, local06 wz
 if_ne	jmp	#LR__0405
	add	fp, #84
	rdlong	local03, fp
	mov	local02, local03
	sub	fp, #12
	rdlong	local08, fp
	sub	fp, #72
	mov	local09, local08
	cmp	local02, local09 wcz
 if_be	jmp	#LR__0405
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #72
	rdlong	local10, fp
	sub	fp, #76
	mov	local11, local10
	mov	arg02, local11
	call	#_ff_cc_get_fat_0422
	mov	local12, result1
	add	fp, #76
	wrlong	local12, fp
	sub	fp, #76
	cmp	local12, #1 wcz
 if_be	add	fp, #16
 if_be	wrlong	#2, fp
 if_be	sub	fp, #16
	add	fp, #76
	rdlong	local13, fp
	sub	fp, #76
	cmp	local13, ##-1 wz
 if_e	add	fp, #16
 if_e	wrlong	#1, fp
 if_e	sub	fp, #16
	add	fp, #84
	rdlong	local14, fp
	mov	local13, local14
	sub	fp, #12
	rdlong	local15, fp
	mov	local16, local15
	sub	local13, local16
	add	fp, #12
	wrlong	local13, fp
	sub	fp, #84
	jmp	#LR__0404
LR__0405
	add	fp, #4
	rdlong	local01, fp
	add	fp, #72
	rdlong	local05, fp
	add	local01, #24
	wrlong	local05, local01
	sub	fp, #60
	rdlong	local07, fp
	sub	fp, #16
	mov	local01, local07 wz
 if_ne	jmp	#LR__0408
	add	fp, #84
	rdlong	local06, fp
	sub	fp, #84
	mov	local04, local06
	mov	local05, local04
	and	local05, #511 wz
 if_e	jmp	#LR__0408
	add	fp, #64
	rdlong	arg01, fp
	add	fp, #12
	rdlong	local04, fp
	sub	fp, #76
	mov	local05, local04
	mov	arg02, local05
	call	#_ff_cc_clst2sect_0417
	mov	local06, result1
	add	fp, #80
	wrlong	local06, fp
	rdlong	local07, fp wz
	sub	fp, #80
 if_ne	jmp	#LR__0406
	mov	local01, #2
	add	fp, #16
	wrlong	#2, fp
	sub	fp, #16
	jmp	#LR__0407
LR__0406
	add	fp, #4
	rdlong	local07, fp
	mov	local01, local07
	add	fp, #76
	rdlong	local04, fp
	mov	local05, local04
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #84
	mov	local02, local03
	mov	local06, local02
	shr	local06, #9
	add	local05, local06
	add	local01, #28
	wrlong	local05, local01
	sub	local01, #28
LR__0407
LR__0408
LR__0409
LR__0410
LR__0411
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0412
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	wrlong	#0, local01
LR__0412
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
LR__0413
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_open_ret
	ret

_ff_cc_f_read
	mov	COUNT_, #25
	call	#pushregs_
	add	ptra, #56
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #24
	wrlong	#0, fp
	sub	fp, #32
	rdlong	local01, fp
	add	fp, #44
	wrlong	local01, fp
	sub	fp, #36
	rdlong	local01, fp
	wrlong	#0, local01
	sub	fp, #12
	rdlong	arg01, fp
	add	fp, #20
	mov	arg02, fp
	sub	fp, #24
	call	#_ff_cc_validate_0512
	add	fp, #20
	wrlong	result1, fp
	mov	local02, result1
	sub	fp, #20
	mov	local01, local02 wz
 if_ne	jmp	#LR__0414
	add	fp, #4
	rdlong	local03, fp
	add	local03, #17
	rdbyte	local04, local03
	mov	local05, local04
	zerox	local05, #7
	add	fp, #16
	wrlong	local05, fp
	sub	fp, #20
	mov	local06, local05 wz
 if_e	jmp	#LR__0415
LR__0414
	add	fp, #20
	rdlong	result1, fp
	sub	fp, #20
	jmp	#LR__0433
LR__0415
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #16
	rdbyte	local01, local02
	test	local01, #1 wz
 if_e	mov	result1, #7
 if_e	jmp	#LR__0433
	add	fp, #4
	rdlong	local02, fp
	mov	local03, local02
	add	local02, #12
	rdlong	local01, local02
	add	local03, #20
	rdlong	local06, local03
	sub	local01, local06
	add	fp, #32
	wrlong	local01, fp
	sub	fp, #24
	rdlong	local01, fp
	add	fp, #24
	rdlong	local07, fp
	sub	fp, #36
	cmp	local01, local07 wcz
 if_be	jmp	#LR__0416
	add	fp, #36
	rdlong	local01, fp
	sub	fp, #24
	wrlong	local01, fp
	sub	fp, #12
LR__0416
LR__0417
	add	fp, #12
	rdlong	local02, fp
	sub	fp, #12
	mov	local01, local02 wz
 if_e	jmp	#LR__0432
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #20
	rdlong	local08, local07
	test	local08, #511 wz
 if_ne	jmp	#LR__0428
	add	fp, #4
	rdlong	local03, fp
	add	local03, #20
	rdlong	local07, local03
	shr	local07, #9
	add	fp, #20
	rdlong	local09, fp
	mov	local10, local09
	add	local10, #10
	rdword	local11, local10
	mov	local05, local11
	zerox	local05, #15
	sub	local05, #1
	and	local07, local05
	add	fp, #24
	wrlong	local07, fp
	rdlong	local07, fp wz
	sub	fp, #48
 if_ne	jmp	#LR__0422
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #20
	rdlong	local08, local07 wz
 if_ne	jmp	#LR__0418
	add	fp, #4
	rdlong	local07, fp
	add	local07, #8
	rdlong	local08, local07
	add	fp, #24
	wrlong	local08, fp
	sub	fp, #28
	jmp	#LR__0419
LR__0418
	add	fp, #4
	rdlong	arg01, fp
	mov	local06, arg01
	sub	fp, #4
	add	local06, #24
	rdlong	arg02, local06
	call	#_ff_cc_get_fat_0422
	add	fp, #28
	wrlong	result1, fp
	sub	fp, #28
LR__0419
	add	fp, #28
	rdlong	local07, fp
	sub	fp, #28
	cmp	local07, #2 wcz
 if_ae	jmp	#LR__0420
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #17
	wrbyte	#2, local07
	mov	result1, #2
	jmp	#LR__0433
LR__0420
	add	fp, #28
	rdlong	local07, fp
	sub	fp, #28
	cmp	local07, ##-1 wz
 if_ne	jmp	#LR__0421
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #17
	wrbyte	#1, local07
	mov	result1, #1
	jmp	#LR__0433
LR__0421
	add	fp, #4
	rdlong	local07, fp
	add	fp, #24
	rdlong	local08, fp
	sub	fp, #28
	add	local07, #24
	wrlong	local08, local07
LR__0422
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #20
	rdlong	local08, fp
	sub	fp, #4
	add	local08, #24
	rdlong	arg02, local08
	call	#_ff_cc_clst2sect_0417
	add	fp, #32
	wrlong	result1, fp
	rdlong	local07, fp wz
	sub	fp, #32
 if_ne	jmp	#LR__0423
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #17
	wrbyte	#2, local07
	mov	result1, #2
	jmp	#LR__0433
LR__0423
	add	fp, #32
	rdlong	local07, fp
	add	fp, #16
	rdlong	local08, fp
	add	local07, local08
	sub	fp, #16
	wrlong	local07, fp
	sub	fp, #20
	rdlong	local07, fp
	shr	local07, #9
	add	fp, #32
	wrlong	local07, fp
	sub	fp, #44
	cmp	local07, #0 wcz
 if_be	jmp	#LR__0427
	add	fp, #48
	rdlong	local07, fp
	sub	fp, #4
	rdlong	local08, fp
	add	local07, local08
	sub	fp, #20
	rdlong	local05, fp
	sub	fp, #24
	add	local05, #10
	rdword	local06, local05
	cmp	local07, local06 wcz
 if_be	jmp	#LR__0424
	add	fp, #24
	rdlong	local03, fp
	add	local03, #10
	rdword	local07, local03
	add	fp, #24
	rdlong	local06, fp
	sub	local07, local06
	sub	fp, #4
	wrlong	local07, fp
	sub	fp, #44
LR__0424
	add	fp, #24
	rdlong	local07, fp
	add	local07, #1
	rdbyte	arg01, local07
	add	fp, #28
	rdlong	arg02, fp
	sub	fp, #20
	rdlong	arg03, fp
	add	fp, #12
	rdlong	arg04, fp
	sub	fp, #44
	call	#_ff_cc_disk_read
	cmp	result1, #0 wz
 if_e	jmp	#LR__0425
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #17
	wrbyte	#1, local07
	mov	result1, #1
	jmp	#LR__0433
LR__0425
	add	fp, #24
	rdlong	local07, fp
	sub	fp, #24
	add	local07, #3
	rdbyte	local08, local07 wz
 if_e	jmp	#LR__0426
	add	fp, #24
	rdlong	local05, fp
	add	local05, #44
	rdlong	local06, local05
	add	fp, #8
	rdlong	local11, fp
	sub	local06, local11
	add	fp, #12
	rdlong	local12, fp
	sub	fp, #44
	cmp	local06, local12 wcz
 if_ae	jmp	#LR__0426
	add	fp, #52
	rdlong	local03, fp
	mov	local07, local03
	sub	fp, #28
	rdlong	local06, fp
	mov	local04, local06
	add	local04, #44
	rdlong	local05, local04
	sub	local04, #44
	mov	local08, local05
	add	fp, #8
	rdlong	local09, fp
	mov	local10, local09
	sub	local08, local10
	mov	local11, local08
	shl	local11, #9
	mov	local13, local11
	add	local07, local11
	mov	local12, local07
	sub	fp, #8
	rdlong	local14, fp
	sub	fp, #24
	mov	local15, local14
	add	local15, #48
	mov	local16, local15
	mov	local17, local16
	decod	local18, #9
	mov	arg01, local12
	mov	arg02, local17
	decod	arg03, #9
	sub	local15, #48
	call	#_ff_cc_mem_cpy_0401
LR__0426
	add	fp, #44
	rdlong	local07, fp
	shl	local07, #9
	sub	fp, #4
	wrlong	local07, fp
	sub	fp, #40
	jmp	#LR__0431
LR__0427
	add	fp, #4
	rdlong	local07, fp
	add	fp, #28
	rdlong	local08, fp
	sub	fp, #32
	add	local07, #28
	wrlong	local08, local07
LR__0428
	add	fp, #4
	rdlong	local03, fp
	add	local03, #20
	rdlong	local04, local03
	and	local04, #511
	decod	local07, #9
	sub	local07, local04
	add	fp, #36
	wrlong	local07, fp
	sub	fp, #28
	rdlong	local08, fp
	sub	fp, #12
	cmp	local07, local08 wcz
 if_be	jmp	#LR__0429
	add	fp, #12
	rdlong	local07, fp
	add	fp, #28
	wrlong	local07, fp
	sub	fp, #40
LR__0429
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #20
	rdlong	local08, fp
	sub	fp, #4
	add	local08, #28
	rdlong	arg02, local08
	call	#_ff_cc_move_window_0414
	cmp	result1, #0 wz
 if_e	jmp	#LR__0430
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #17
	wrbyte	#1, local07
	mov	result1, #1
	jmp	#LR__0433
LR__0430
	add	fp, #52
	rdlong	arg01, fp
	sub	fp, #28
	rdlong	arg02, fp
	add	arg02, #48
	sub	fp, #20
	rdlong	local10, fp
	add	local10, #20
	rdlong	local15, local10
	and	local15, #511
	add	arg02, local15
	add	fp, #36
	rdlong	arg03, fp
	sub	fp, #40
	call	#_ff_cc_mem_cpy_0401
LR__0431
	add	fp, #12
	rdlong	local07, fp
	add	fp, #28
	rdlong	local04, fp
	sub	local07, local04
	sub	fp, #28
	wrlong	local07, fp
	add	fp, #4
	rdlong	local06, fp
	rdlong	local10, local06
	add	fp, #24
	rdlong	local12, fp
	mov	local13, local12
	add	local10, local12
	wrlong	local10, local06
	add	fp, #12
	rdlong	local14, fp
	mov	local15, local14
	sub	fp, #12
	rdlong	local17, fp
	mov	local16, local17
	add	local15, local17
	add	fp, #12
	wrlong	local15, fp
	sub	fp, #48
	rdlong	local19, fp
	mov	local18, local19
	mov	local20, local19
	mov	local21, local20
	add	local21, #20
	rdlong	local22, local21
	sub	local21, #20
	mov	local23, local22
	add	fp, #36
	rdlong	local24, fp
	sub	fp, #40
	mov	local25, local24
	add	local23, local24
	add	local18, #20
	wrlong	local23, local18
	sub	local18, #20
	jmp	#LR__0417
LR__0432
	mov	result1, #0
LR__0433
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_read_ret
	ret

_ff_cc_f_write
	mov	COUNT_, #42
	call	#pushregs_
	add	ptra, #52
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #20
	wrlong	#0, fp
	sub	fp, #28
	rdlong	local01, fp
	add	fp, #40
	wrlong	local01, fp
	sub	fp, #32
	rdlong	local01, fp
	wrlong	#0, local01
	sub	fp, #12
	rdlong	arg01, fp
	add	fp, #20
	mov	arg02, fp
	sub	fp, #24
	call	#_ff_cc_validate_0512
	add	fp, #20
	wrlong	result1, fp
	mov	local02, result1
	sub	fp, #20
	mov	local01, local02 wz
 if_ne	jmp	#LR__0434
	add	fp, #4
	rdlong	local03, fp
	add	local03, #17
	rdbyte	local04, local03
	add	fp, #16
	wrlong	local04, fp
	sub	fp, #20
	mov	local05, local04 wz
 if_e	jmp	#LR__0435
LR__0434
	add	fp, #20
	rdlong	result1, fp
	sub	fp, #20
	jmp	#LR__0459
LR__0435
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #16
	rdbyte	local01, local02
	test	local01, #2 wz
 if_e	mov	result1, #7
 if_e	jmp	#LR__0459
	add	fp, #4
	rdlong	local06, fp
	mov	local07, local06
	add	local07, #20
	rdlong	local03, local07
	add	fp, #8
	rdlong	local08, fp
	mov	local04, local08
	add	local03, local08
	sub	fp, #8
	rdlong	local09, fp
	sub	fp, #4
	mov	local10, local09
	add	local10, #20
	rdlong	local11, local10
	sub	local10, #20
	mov	local12, local11
	cmp	local03, local12 wcz
 if_ae	jmp	#LR__0436
	add	fp, #4
	rdlong	local02, fp
	neg	local01, #1
	add	local02, #20
	rdlong	local03, local02
	sub	local01, local03
	add	fp, #8
	wrlong	local01, fp
	sub	fp, #12
LR__0436
LR__0437
	add	fp, #12
	rdlong	local02, fp
	sub	fp, #12
	mov	local01, local02 wz
 if_e	jmp	#LR__0458
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #20
	rdlong	local07, local13
	test	local07, #511 wz
 if_ne	jmp	#LR__0452
	add	fp, #4
	rdlong	local03, fp
	add	local03, #20
	rdlong	local13, local03
	shr	local13, #9
	add	fp, #20
	rdlong	local08, fp
	add	local08, #10
	rdword	local09, local08
	mov	local04, local09
	zerox	local04, #15
	sub	local04, #1
	and	local13, local04
	add	fp, #20
	wrlong	local13, fp
	rdlong	local13, fp wz
	sub	fp, #44
 if_ne	jmp	#LR__0443
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #20
	rdlong	local07, local13 wz
 if_ne	jmp	#LR__0438
	add	fp, #4
	rdlong	local13, fp
	add	local13, #8
	rdlong	local07, local13
	add	fp, #24
	wrlong	local07, fp
	rdlong	local13, fp wz
	sub	fp, #28
 if_ne	jmp	#LR__0439
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_create_chain_0436
	add	fp, #28
	wrlong	result1, fp
	sub	fp, #28
	jmp	#LR__0439
LR__0438
	add	fp, #4
	rdlong	arg01, fp
	mov	local05, arg01
	sub	fp, #4
	add	local05, #24
	rdlong	arg02, local05
	call	#_ff_cc_create_chain_0436
	mov	local09, result1
	add	fp, #28
	wrlong	local09, fp
	sub	fp, #28
LR__0439
	add	fp, #28
	rdlong	local13, fp wz
	sub	fp, #28
 if_e	jmp	#LR__0458
	add	fp, #28
	rdlong	local13, fp
	sub	fp, #28
	cmp	local13, #1 wz
 if_ne	jmp	#LR__0440
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#2, local13
	mov	result1, #2
	jmp	#LR__0459
LR__0440
	add	fp, #28
	rdlong	local13, fp
	sub	fp, #28
	cmp	local13, ##-1 wz
 if_ne	jmp	#LR__0441
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#1, local13
	mov	result1, #1
	jmp	#LR__0459
LR__0441
	add	fp, #4
	rdlong	local13, fp
	add	fp, #24
	rdlong	local07, fp
	add	local13, #24
	wrlong	local07, local13
	sub	fp, #24
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #8
	rdlong	local07, local13 wz
 if_ne	jmp	#LR__0442
	add	fp, #4
	rdlong	local13, fp
	add	fp, #24
	rdlong	local07, fp
	sub	fp, #28
	add	local13, #8
	wrlong	local07, local13
LR__0442
LR__0443
	add	fp, #24
	rdlong	local13, fp
	sub	fp, #20
	rdlong	local07, fp
	sub	fp, #4
	add	local13, #44
	rdlong	local05, local13
	add	local07, #28
	rdlong	local08, local07
	cmp	local05, local08 wz
 if_ne	jmp	#LR__0444
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #24
	call	#_ff_cc_sync_window_0412
	cmp	result1, #0 wz
 if_e	jmp	#LR__0444
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#1, local13
	mov	result1, #1
	jmp	#LR__0459
LR__0444
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #20
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #24
	rdlong	arg02, local07
	call	#_ff_cc_clst2sect_0417
	add	fp, #32
	wrlong	result1, fp
	rdlong	local13, fp wz
	sub	fp, #32
 if_ne	jmp	#LR__0445
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#2, local13
	mov	result1, #2
	jmp	#LR__0459
LR__0445
	add	fp, #32
	rdlong	local13, fp
	add	fp, #12
	rdlong	local07, fp
	add	local13, local07
	sub	fp, #12
	wrlong	local13, fp
	sub	fp, #20
	rdlong	local13, fp
	shr	local13, #9
	add	fp, #28
	wrlong	local13, fp
	sub	fp, #40
	cmp	local13, #0 wcz
 if_be	jmp	#LR__0449
	add	fp, #44
	rdlong	local13, fp
	sub	fp, #4
	rdlong	local07, fp
	add	local13, local07
	sub	fp, #16
	rdlong	local04, fp
	sub	fp, #24
	add	local04, #10
	rdword	local05, local04
	cmp	local13, local05 wcz
 if_be	jmp	#LR__0446
	add	fp, #24
	rdlong	local03, fp
	add	local03, #10
	rdword	local13, local03
	add	fp, #20
	rdlong	local05, fp
	sub	local13, local05
	sub	fp, #4
	wrlong	local13, fp
	sub	fp, #40
LR__0446
	add	fp, #24
	rdlong	local13, fp
	add	local13, #1
	rdbyte	arg01, local13
	add	fp, #24
	rdlong	arg02, fp
	sub	fp, #16
	rdlong	arg03, fp
	add	fp, #8
	rdlong	arg04, fp
	sub	fp, #40
	call	#_ff_cc_disk_write
	cmp	result1, #0 wz
 if_e	jmp	#LR__0447
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#1, local13
	mov	result1, #1
	jmp	#LR__0459
LR__0447
	add	fp, #24
	rdlong	local03, fp
	add	local03, #44
	rdlong	local13, local03
	add	fp, #8
	rdlong	local05, fp
	sub	local13, local05
	add	fp, #8
	rdlong	local08, fp
	sub	fp, #40
	cmp	local13, local08 wcz
 if_ae	jmp	#LR__0448
	add	fp, #24
	rdlong	arg01, fp
	add	arg01, #48
	add	fp, #24
	rdlong	arg02, fp
	sub	fp, #24
	rdlong	local10, fp
	add	local10, #44
	rdlong	local14, local10
	add	fp, #8
	rdlong	local11, fp
	sub	fp, #32
	sub	local14, local11
	shl	local14, #9
	add	arg02, local14
	decod	arg03, #9
	call	#_ff_cc_mem_cpy_0401
	add	fp, #24
	rdlong	local13, fp
	sub	fp, #24
	add	local13, #3
	wrbyte	#0, local13
LR__0448
	add	fp, #40
	rdlong	local13, fp
	shl	local13, #9
	sub	fp, #4
	wrlong	local13, fp
	sub	fp, #36
	jmp	#LR__0455
LR__0449
	add	fp, #4
	rdlong	local13, fp
	mov	local07, local13
	sub	fp, #4
	add	local13, #20
	rdlong	local05, local13
	add	local07, #12
	rdlong	local08, local07
	cmp	local05, local08 wcz
 if_b	jmp	#LR__0451
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #24
	call	#_ff_cc_sync_window_0412
	cmp	result1, #0 wz
 if_e	jmp	#LR__0450
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#1, local13
	mov	result1, #1
	jmp	#LR__0459
LR__0450
	add	fp, #24
	rdlong	local13, fp
	add	fp, #8
	rdlong	local07, fp
	sub	fp, #32
	add	local13, #44
	wrlong	local07, local13
LR__0451
	add	fp, #4
	rdlong	local13, fp
	add	fp, #28
	rdlong	local07, fp
	sub	fp, #32
	add	local13, #28
	wrlong	local07, local13
LR__0452
	add	fp, #4
	rdlong	local03, fp
	add	local03, #20
	rdlong	local06, local03
	and	local06, #511
	decod	local13, #9
	sub	local13, local06
	add	fp, #32
	wrlong	local13, fp
	sub	fp, #24
	rdlong	local07, fp
	sub	fp, #12
	cmp	local13, local07 wcz
 if_be	jmp	#LR__0453
	add	fp, #12
	rdlong	local13, fp
	add	fp, #24
	wrlong	local13, fp
	sub	fp, #36
LR__0453
	add	fp, #24
	rdlong	arg01, fp
	sub	fp, #20
	rdlong	local07, fp
	sub	fp, #4
	add	local07, #28
	rdlong	arg02, local07
	call	#_ff_cc_move_window_0414
	cmp	result1, #0 wz
 if_e	jmp	#LR__0454
	add	fp, #4
	rdlong	local13, fp
	sub	fp, #4
	add	local13, #17
	wrbyte	#1, local13
	mov	result1, #1
	jmp	#LR__0459
LR__0454
	add	fp, #24
	rdlong	arg01, fp
	add	arg01, #48
	sub	fp, #20
	rdlong	local05, fp
	add	local05, #20
	rdlong	local12, local05
	and	local12, #511
	add	arg01, local12
	add	fp, #44
	rdlong	arg02, fp
	sub	fp, #12
	rdlong	arg03, fp
	sub	fp, #36
	call	#_ff_cc_mem_cpy_0401
	add	fp, #24
	rdlong	local13, fp
	sub	fp, #24
	add	local13, #3
	wrbyte	#1, local13
LR__0455
	add	fp, #12
	rdlong	local13, fp
	add	fp, #24
	rdlong	local06, fp
	sub	local13, local06
	sub	fp, #24
	wrlong	local13, fp
	add	fp, #4
	rdlong	local05, fp
	mov	local10, local05
	rdlong	local08, local10
	add	fp, #20
	rdlong	local11, fp
	mov	local12, local11
	add	local08, local11
	wrlong	local08, local05
	add	fp, #12
	rdlong	local15, fp
	mov	local16, local15
	sub	fp, #12
	rdlong	local17, fp
	mov	local14, local17
	add	local16, local17
	add	fp, #12
	wrlong	local16, fp
	sub	fp, #44
	rdlong	local18, fp
	mov	local19, local18
	mov	local20, local18
	mov	local21, local20
	add	local21, #20
	rdlong	local22, local21
	sub	local21, #20
	mov	local23, local22
	add	fp, #32
	rdlong	local24, fp
	mov	local25, local24
	add	local23, local24
	add	local19, #20
	wrlong	local23, local19
	sub	local19, #20
	sub	fp, #32
	rdlong	local26, fp
	mov	local27, local26
	mov	local28, local26
	mov	local29, local28
	mov	local30, local26
	sub	fp, #4
	mov	local31, local30
	add	local29, #20
	rdlong	local32, local29
	sub	local29, #20
	mov	local33, local32
	add	local31, #12
	rdlong	local34, local31
	sub	local31, #12
	mov	local35, local34
	cmp	local33, local35 wcz
 if_be	jmp	#LR__0456
	add	fp, #4
	rdlong	local36, fp
	sub	fp, #4
	mov	local37, local36
	add	local37, #20
	rdlong	local38, local37
	sub	local37, #20
	mov	local39, local38
	jmp	#LR__0457
LR__0456
	add	fp, #4
	rdlong	local40, fp
	sub	fp, #4
	mov	local41, local40
	add	local41, #12
	rdlong	local42, local41
	sub	local41, #12
	mov	local39, local42
LR__0457
	add	local27, #12
	wrlong	local39, local27
	sub	local27, #12
	jmp	#LR__0437
LR__0458
	add	fp, #4
	rdlong	local01, fp
	mov	local03, local01
	sub	fp, #4
	add	local03, #16
	rdbyte	local13, local03
	or	local13, #64
	add	local01, #16
	wrbyte	local13, local01
	mov	result1, #0
LR__0459
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_write_ret
	ret

_ff_cc_f_sync
	mov	COUNT_, #6
	call	#pushregs_
	add	ptra, #24
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_ff_cc_validate_0512
	mov	local01, result1
	add	fp, #8
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0462
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #4
	add	local03, #16
	rdbyte	local02, local03
	test	local02, #64 wz
 if_e	jmp	#LR__0461
	add	fp, #16
	wrlong	##1310785536, fp
	sub	fp, #4
	rdlong	arg01, fp
	sub	fp, #8
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #32
	rdlong	arg02, local04
	call	#_ff_cc_move_window_0414
	add	fp, #8
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0460
	add	fp, #4
	rdlong	local02, fp
	add	local02, #36
	rdlong	local02, local02
	add	fp, #16
	wrlong	local02, fp
	mov	local05, local02
	add	local05, #11
	rdbyte	local04, local05
	or	local04, #32
	add	local02, #11
	wrbyte	local04, local02
	sub	fp, #16
	rdlong	local02, fp
	rdlong	arg01, local02
	add	fp, #16
	rdlong	arg02, fp
	sub	fp, #16
	rdlong	local06, fp
	sub	fp, #4
	add	local06, #8
	rdlong	arg03, local06
	call	#_ff_cc_st_clust_0456
	add	fp, #20
	rdlong	arg01, fp
	add	arg01, #28
	sub	fp, #16
	rdlong	local05, fp
	sub	fp, #4
	add	local05, #12
	rdlong	arg02, local05
	call	#_ff_cc_st_dword_0398
	add	fp, #20
	rdlong	arg01, fp
	add	arg01, #22
	sub	fp, #4
	rdlong	arg02, fp
	sub	fp, #16
	call	#_ff_cc_st_dword_0398
	add	fp, #20
	rdlong	arg01, fp
	sub	fp, #20
	add	arg01, #18
	mov	arg02, #0
	call	#_ff_cc_st_word_0397
	add	fp, #12
	rdlong	local02, fp
	add	local02, #3
	wrbyte	#1, local02
	rdlong	arg01, fp
	sub	fp, #12
	call	#_ff_cc_sync_fs_0416
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #4
	rdlong	local02, fp
	mov	local05, local02
	sub	fp, #4
	add	local05, #16
	rdbyte	local04, local05
	and	local04, #191
	add	local02, #16
	wrbyte	local04, local02
LR__0460
LR__0461
LR__0462
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_sync_ret
	ret

_ff_cc_f_close
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	sub	fp, #4
	call	#_ff_cc_f_sync
	add	fp, #8
	wrlong	result1, fp
	rdlong	local01, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0464
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_ff_cc_validate_0512
	mov	local02, result1
	add	fp, #8
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0463
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	wrlong	#0, local01
LR__0463
LR__0464
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_close_ret
	ret

_ff_cc_f_lseek
	mov	COUNT_, #11
	call	#pushregs_
	add	ptra, #36
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	call	#_ff_cc_validate_0512
	mov	local01, result1
	add	fp, #12
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0465
	add	fp, #4
	rdlong	local03, fp
	add	local03, #17
	rdbyte	local02, local03
	add	fp, #8
	wrlong	local02, fp
	sub	fp, #12
LR__0465
	add	fp, #12
	rdlong	local02, fp wz
	sub	fp, #12
 if_e	jmp	#LR__0466
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	jmp	#LR__0486
LR__0466
	add	fp, #4
	rdlong	local02, fp
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #8
	add	local02, #12
	rdlong	local05, local02
	mov	local06, local05
	cmp	local04, local06 wcz
 if_be	jmp	#LR__0467
	add	fp, #4
	rdlong	local07, fp
	sub	fp, #4
	mov	local08, local07
	add	local08, #16
	rdbyte	local09, local08
	sub	local08, #16
	mov	local01, local09
	zerox	local01, #7
	and	local01, #2 wz
 if_ne	jmp	#LR__0467
	add	fp, #4
	rdlong	local03, fp
	mov	local02, local03
	add	local02, #12
	rdlong	local10, local02
	sub	local02, #12
	add	fp, #4
	wrlong	local10, fp
	sub	fp, #8
LR__0467
	add	fp, #4
	rdlong	local02, fp
	add	local02, #20
	rdlong	local10, local02
	add	fp, #28
	wrlong	local10, fp
	sub	fp, #28
	rdlong	local02, fp
	add	fp, #24
	wrlong	#0, fp
	add	local02, #20
	wrlong	#0, local02
	sub	fp, #20
	rdlong	local02, fp
	sub	fp, #8
	cmp	local02, #0 wcz
 if_be	jmp	#LR__0483
	add	fp, #16
	rdlong	local03, fp
	add	local03, #10
	rdword	local06, local03
	shl	local06, #9
	add	fp, #8
	wrlong	local06, fp
	add	fp, #8
	rdlong	local02, fp
	sub	fp, #32
	cmp	local02, #0 wcz
 if_be	jmp	#LR__0468
	add	fp, #8
	rdlong	muldiva_, fp
	sub	muldiva_, #1
	add	fp, #16
	rdlong	muldivb_, fp
	sub	fp, #24
	call	#unsdivide_
	mov	local06, muldivb_
	add	fp, #32
	rdlong	muldiva_, fp
	sub	muldiva_, #1
	sub	fp, #8
	rdlong	local09, fp
	sub	fp, #24
	mov	muldivb_, local09
	call	#unsdivide_
	mov	local07, muldivb_
	cmp	local06, local07 wcz
 if_b	jmp	#LR__0468
	add	fp, #4
	rdlong	local02, fp
	add	fp, #28
	rdlong	local10, fp
	sub	local10, #1
	sub	fp, #8
	rdlong	local06, fp
	sub	local06, #1
	andn	local10, local06
	add	local02, #20
	wrlong	local10, local02
	sub	fp, #16
	rdlong	local02, fp
	sub	fp, #4
	rdlong	local10, fp
	add	local10, #20
	rdlong	local06, local10
	sub	local02, local06
	add	fp, #4
	wrlong	local02, fp
	sub	fp, #4
	rdlong	local02, fp
	add	local02, #24
	rdlong	local10, local02
	add	fp, #16
	wrlong	local10, fp
	sub	fp, #20
	jmp	#LR__0472
LR__0468
	add	fp, #4
	rdlong	local02, fp
	add	local02, #8
	rdlong	local10, local02
	add	fp, #16
	wrlong	local10, fp
	rdlong	local02, fp wz
	sub	fp, #20
 if_ne	jmp	#LR__0471
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_create_chain_0436
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmp	result1, #1 wz
 if_ne	jmp	#LR__0469
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #17
	wrbyte	#2, local02
	mov	result1, #2
	jmp	#LR__0486
LR__0469
	add	fp, #20
	rdlong	local02, fp
	sub	fp, #20
	cmp	local02, ##-1 wz
 if_ne	jmp	#LR__0470
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #17
	wrbyte	#1, local02
	mov	result1, #1
	jmp	#LR__0486
LR__0470
	add	fp, #4
	rdlong	local02, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #20
	add	local02, #8
	wrlong	local10, local02
LR__0471
	add	fp, #4
	rdlong	local02, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #20
	add	local02, #24
	wrlong	local10, local02
LR__0472
	add	fp, #20
	rdlong	local02, fp wz
	sub	fp, #20
 if_e	jmp	#LR__0482
LR__0473
	add	fp, #8
	rdlong	local02, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #24
	cmp	local02, local10 wcz
 if_be	jmp	#LR__0479
	add	fp, #8
	rdlong	local02, fp
	add	fp, #16
	rdlong	local10, fp
	sub	local02, local10
	sub	fp, #16
	wrlong	local02, fp
	sub	fp, #4
	rdlong	local02, fp
	mov	local04, local02
	add	local04, #20
	rdlong	local05, local04
	mov	local10, local05
	add	fp, #20
	rdlong	local08, fp
	add	local10, local08
	add	local02, #20
	wrlong	local10, local02
	sub	fp, #20
	rdlong	local03, fp
	sub	fp, #4
	add	local03, #16
	rdbyte	local02, local03
	test	local02, #2 wz
 if_e	jmp	#LR__0474
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #16
	rdlong	arg02, fp
	sub	fp, #20
	call	#_ff_cc_create_chain_0436
	add	fp, #20
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #20
 if_ne	jmp	#LR__0475
	add	fp, #8
	wrlong	#0, fp
	sub	fp, #8
	jmp	#LR__0479
LR__0474
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #16
	rdlong	arg02, fp
	sub	fp, #20
	call	#_ff_cc_get_fat_0422
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
LR__0475
	add	fp, #20
	rdlong	local02, fp
	sub	fp, #20
	cmp	local02, ##-1 wz
 if_ne	jmp	#LR__0476
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #17
	wrbyte	#1, local02
	mov	result1, #1
	jmp	#LR__0486
LR__0476
	add	fp, #20
	rdlong	local02, fp
	sub	fp, #20
	cmp	local02, #1 wcz
 if_be	jmp	#LR__0477
	add	fp, #16
	rdlong	local10, fp
	add	fp, #4
	rdlong	local06, fp
	sub	fp, #20
	add	local10, #20
	rdlong	local01, local10
	cmp	local06, local01 wcz
 if_b	jmp	#LR__0478
LR__0477
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #17
	wrbyte	#2, local02
	mov	result1, #2
	jmp	#LR__0486
LR__0478
	add	fp, #4
	rdlong	local02, fp
	add	fp, #16
	rdlong	local10, fp
	sub	fp, #20
	add	local02, #24
	wrlong	local10, local02
	jmp	#LR__0473
LR__0479
	add	fp, #4
	rdlong	local02, fp
	mov	local04, local02
	add	local04, #20
	rdlong	local10, local04
	add	fp, #4
	rdlong	local01, fp
	add	local10, local01
	add	local02, #20
	wrlong	local10, local02
	rdlong	local02, fp
	sub	fp, #8
	test	local02, #511 wz
 if_e	jmp	#LR__0481
	add	fp, #16
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #20
	call	#_ff_cc_clst2sect_0417
	add	fp, #28
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #28
 if_ne	jmp	#LR__0480
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #17
	wrbyte	#2, local02
	mov	result1, #2
	jmp	#LR__0486
LR__0480
	add	fp, #28
	rdlong	local02, fp
	sub	fp, #20
	rdlong	local10, fp
	shr	local10, #9
	add	local02, local10
	add	fp, #20
	wrlong	local02, fp
	sub	fp, #28
LR__0481
LR__0482
LR__0483
	add	fp, #4
	rdlong	local02, fp
	mov	local10, local02
	sub	fp, #4
	add	local02, #20
	rdlong	local06, local02
	add	local10, #12
	rdlong	local01, local10
	cmp	local06, local01 wcz
 if_be	jmp	#LR__0484
	add	fp, #4
	rdlong	local02, fp
	mov	local10, local02
	add	local10, #20
	rdlong	local06, local10
	add	local02, #12
	wrlong	local06, local02
	rdlong	local02, fp
	mov	local04, local02
	sub	fp, #4
	add	local04, #16
	rdbyte	local10, local04
	or	local10, #64
	add	local02, #16
	wrbyte	local10, local02
LR__0484
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #20
	rdlong	local06, local02
	mov	local04, local06
	test	local04, #511 wz
 if_e	jmp	#LR__0485
	add	fp, #4
	rdlong	local01, fp
	mov	local05, local01
	add	fp, #24
	rdlong	local07, fp
	sub	fp, #28
	mov	local08, local07
	add	local05, #28
	rdlong	local11, local05
	sub	local05, #28
	mov	local09, local11
	cmp	local08, local09 wz
 if_e	jmp	#LR__0485
	add	fp, #4
	rdlong	local03, fp
	mov	local02, local03
	add	fp, #24
	rdlong	local10, fp
	sub	fp, #28
	add	local02, #28
	wrlong	local10, local02
	sub	local02, #28
LR__0485
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
LR__0486
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_lseek_ret
	ret

_ff_cc_f_opendir
	mov	COUNT_, #5
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	local01, fp wz
	sub	fp, #4
 if_e	mov	result1, #9
 if_e	jmp	#LR__0494
	add	fp, #8
	mov	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #16
	mov	arg03, #0
	call	#_ff_cc_mount_volume_0510
	mov	local02, result1
	add	fp, #12
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0492
	add	fp, #4
	rdlong	local01, fp
	add	fp, #12
	rdlong	local03, fp
	wrlong	local03, local01
	sub	fp, #12
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	call	#_ff_cc_follow_path_0487
	add	fp, #12
	wrlong	result1, fp
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0491
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #43
	rdbyte	local01, local04
	test	local01, #128 wz
 if_ne	jmp	#LR__0489
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #4
	add	local04, #6
	rdbyte	local01, local04
	test	local01, #16 wz
 if_e	jmp	#LR__0487
	add	fp, #4
	rdlong	local01, fp
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	rdlong	local05, fp
	sub	fp, #4
	add	local05, #28
	rdlong	arg02, local05
	call	#_ff_cc_ld_clust_0455
	add	local01, #8
	wrlong	result1, local01
	jmp	#LR__0488
LR__0487
	add	fp, #12
	wrlong	#5, fp
	sub	fp, #12
LR__0488
LR__0489
	add	fp, #12
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0490
	add	fp, #4
	rdlong	local01, fp
	add	fp, #12
	rdlong	local03, fp
	add	local03, #6
	rdword	local05, local03
	add	local01, #4
	wrword	local05, local01
	sub	fp, #12
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0445
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
LR__0490
LR__0491
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#5, fp
 if_e	sub	fp, #12
LR__0492
	add	fp, #12
	rdlong	local01, fp wz
	sub	fp, #12
 if_e	jmp	#LR__0493
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	wrlong	#0, local01
LR__0493
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
LR__0494
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_opendir_ret
	ret

_ff_cc_f_closedir
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_ff_cc_validate_0512
	mov	local01, result1
	add	fp, #8
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0495
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	wrlong	#0, local02
LR__0495
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_closedir_ret
	ret

_ff_cc_f_readdir
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	call	#_ff_cc_validate_0512
	mov	local01, result1
	add	fp, #12
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0499
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0496
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0445
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	jmp	#LR__0498
LR__0496
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_dir_read_0461
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#0, fp
 if_e	sub	fp, #12
	add	fp, #12
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0497
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	call	#_ff_cc_get_fileinfo_0475
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	mov	arg02, #0
	call	#_ff_cc_dir_next_0449
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	cmp	result1, #4 wz
 if_e	add	fp, #12
 if_e	wrlong	#0, fp
 if_e	sub	fp, #12
LR__0497
LR__0498
LR__0499
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_readdir_ret
	ret

_ff_cc_f_stat
	mov	COUNT_, #3
	call	#pushregs_
	add	ptra, #60
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	mov	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	mov	arg03, #0
	call	#_ff_cc_mount_volume_0510
	mov	local01, result1
	add	fp, #12
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0504
	add	fp, #16
	mov	arg01, fp
	sub	fp, #12
	rdlong	arg02, fp
	sub	fp, #4
	call	#_ff_cc_follow_path_0487
	mov	local03, result1
	add	fp, #12
	wrlong	local03, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0503
	add	fp, #59
	rdbyte	local02, fp
	sub	fp, #59
	zerox	local02, #7
	test	local02, #128 wz
 if_e	jmp	#LR__0500
	add	fp, #12
	wrlong	#6, fp
	sub	fp, #12
	jmp	#LR__0502
LR__0500
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_e	jmp	#LR__0501
	add	fp, #16
	mov	arg01, fp
	sub	fp, #8
	rdlong	arg02, fp
	sub	fp, #8
	call	#_ff_cc_get_fileinfo_0475
LR__0501
LR__0502
LR__0503
LR__0504
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_stat_ret
	ret

_ff_cc_f_unlink
	mov	COUNT_, #6
	call	#pushregs_
	add	ptra, #108
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #96
	wrlong	#0, fp
	sub	fp, #96
	mov	arg01, fp
	add	fp, #100
	mov	arg02, fp
	sub	fp, #104
	mov	arg03, #2
	call	#_ff_cc_mount_volume_0510
	mov	local01, result1
	add	fp, #8
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0514
	add	fp, #104
	rdlong	local02, fp
	sub	fp, #92
	wrlong	local02, fp
	mov	arg01, fp
	sub	fp, #8
	rdlong	arg02, fp
	sub	fp, #4
	call	#_ff_cc_follow_path_0487
	mov	local03, result1
	add	fp, #8
	wrlong	local03, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0513
	add	fp, #55
	rdbyte	local02, fp
	sub	fp, #55
	zerox	local02, #7
	test	local02, #128 wz
 if_e	jmp	#LR__0505
	add	fp, #8
	wrlong	#6, fp
	sub	fp, #8
	jmp	#LR__0506
LR__0505
	add	fp, #18
	rdbyte	local02, fp
	sub	fp, #18
	zerox	local02, #7
	test	local02, #1 wz
 if_ne	add	fp, #8
 if_ne	wrlong	#7, fp
 if_ne	sub	fp, #8
LR__0506
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0509
	add	fp, #104
	rdlong	arg01, fp
	sub	fp, #64
	rdlong	arg02, fp
	sub	fp, #40
	call	#_ff_cc_ld_clust_0455
	mov	local03, result1
	add	fp, #100
	wrlong	local03, fp
	sub	fp, #82
	rdbyte	local02, fp
	sub	fp, #18
	zerox	local02, #7
	test	local02, #16 wz
 if_e	jmp	#LR__0508
	add	fp, #104
	rdlong	local02, fp
	sub	fp, #48
	wrlong	local02, fp
	add	fp, #44
	rdlong	local02, fp
	sub	fp, #36
	wrlong	local02, fp
	sub	fp, #8
	mov	arg01, fp
	sub	fp, #56
	mov	arg02, #0
	call	#_ff_cc_dir_sdi_0445
	mov	local04, result1
	add	fp, #8
	wrlong	local04, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0507
	add	fp, #56
	mov	arg01, fp
	sub	fp, #56
	mov	arg02, #0
	call	#_ff_cc_dir_read_0461
	add	fp, #8
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_e	add	fp, #8
 if_e	wrlong	#7, fp
 if_e	sub	fp, #8
	add	fp, #8
	rdlong	local02, fp
	sub	fp, #8
	cmp	local02, #4 wz
 if_e	add	fp, #8
 if_e	wrlong	#0, fp
 if_e	sub	fp, #8
LR__0507
LR__0508
LR__0509
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0512
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	call	#_ff_cc_dir_remove_0471
	add	fp, #8
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0510
	add	fp, #100
	rdlong	local05, fp wz
	sub	fp, #100
 if_e	jmp	#LR__0510
	add	fp, #12
	mov	local02, fp
	mov	local06, local02
	add	fp, #88
	rdlong	local04, fp
	sub	fp, #100
	mov	local05, local04
	mov	local03, #0
	mov	arg01, local06
	mov	arg02, local05
	mov	arg03, #0
	call	#_ff_cc_remove_chain_0430
	mov	local01, result1
	add	fp, #8
	wrlong	local01, fp
	sub	fp, #8
LR__0510
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0511
	add	fp, #104
	rdlong	arg01, fp
	sub	fp, #104
	call	#_ff_cc_sync_fs_0416
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
LR__0511
LR__0512
LR__0513
LR__0514
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_unlink_ret
	ret

_ff_cc_f_mkdir
	mov	COUNT_, #6
	call	#pushregs_
	add	ptra, #88
	add	fp, #4
	wrlong	arg01, fp
	mov	arg01, fp
	add	fp, #68
	mov	arg02, fp
	sub	fp, #72
	mov	arg03, #2
	call	#_ff_cc_mount_volume_0510
	mov	local01, result1
	add	fp, #8
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0524
	add	fp, #72
	rdlong	local02, fp
	sub	fp, #60
	wrlong	local02, fp
	mov	arg01, fp
	sub	fp, #8
	rdlong	local03, fp
	sub	fp, #4
	mov	arg02, local03
	call	#_ff_cc_follow_path_0487
	mov	local04, result1
	add	fp, #8
	wrlong	local04, fp
	mov	local05, local04
	sub	fp, #8
	mov	local02, local05 wz
 if_e	add	fp, #8
 if_e	wrlong	#8, fp
 if_e	sub	fp, #8
	add	fp, #8
	rdlong	local02, fp
	sub	fp, #8
	cmp	local02, #4 wz
 if_ne	jmp	#LR__0523
	add	fp, #72
	rdlong	local02, fp
	sub	fp, #16
	wrlong	local02, fp
	mov	arg01, fp
	sub	fp, #56
	mov	arg02, #0
	call	#_ff_cc_create_chain_0436
	mov	local06, result1
	add	fp, #76
	wrlong	local06, fp
	sub	fp, #68
	wrlong	#0, fp
	add	fp, #68
	rdlong	local02, fp wz
	sub	fp, #76
 if_e	add	fp, #8
 if_e	wrlong	#7, fp
 if_e	sub	fp, #8
	add	fp, #76
	rdlong	local02, fp
	sub	fp, #76
	cmp	local02, #1 wz
 if_e	add	fp, #8
 if_e	wrlong	#2, fp
 if_e	sub	fp, #8
	add	fp, #76
	rdlong	local02, fp
	sub	fp, #76
	cmp	local02, ##-1 wz
 if_e	add	fp, #8
 if_e	wrlong	#1, fp
 if_e	sub	fp, #8
	add	fp, #84
	wrlong	##1310785536, fp
	sub	fp, #76
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0520
	add	fp, #72
	rdlong	arg01, fp
	add	fp, #4
	rdlong	local06, fp
	sub	fp, #76
	mov	local03, local06
	mov	arg02, local03
	call	#_ff_cc_dir_clear_0441
	mov	local04, result1
	add	fp, #8
	wrlong	local04, fp
	mov	local05, local04
	sub	fp, #8
	mov	local02, local05 wz
 if_ne	jmp	#LR__0519
	add	fp, #72
	rdlong	arg01, fp
	sub	fp, #72
	add	arg01, #48
	mov	arg02, #32
	mov	arg03, #11
	loc	pa,	#(@LR__0517-@LR__0515)
	call	#FCACHE_LOAD_
LR__0515
	rep	@LR__0518, #11
LR__0516
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0517
LR__0518
	add	fp, #72
	rdlong	local02, fp
	add	local02, #48
	wrbyte	#46, local02
	rdlong	local02, fp
	add	local02, #59
	wrbyte	#16, local02
	rdlong	arg01, fp
	add	arg01, #70
	add	fp, #12
	rdlong	arg02, fp
	sub	fp, #84
	call	#_ff_cc_st_dword_0398
	add	fp, #72
	rdlong	arg01, fp
	mov	arg02, arg01
	add	arg02, #48
	add	fp, #4
	rdlong	arg03, fp
	sub	fp, #76
	call	#_ff_cc_st_clust_0456
	add	fp, #72
	rdlong	arg01, fp
	add	arg01, #80
	rdlong	arg02, fp
	sub	fp, #72
	add	arg02, #48
	mov	arg03, #32
	call	#_ff_cc_mem_cpy_0401
	add	fp, #72
	rdlong	local02, fp
	add	local02, #81
	wrbyte	#46, local02
	sub	fp, #52
	rdlong	local02, fp
	add	fp, #60
	wrlong	local02, fp
	sub	fp, #8
	rdlong	arg01, fp
	mov	arg02, arg01
	add	arg02, #80
	add	fp, #8
	rdlong	arg03, fp
	sub	fp, #80
	call	#_ff_cc_st_clust_0456
	add	fp, #72
	rdlong	local02, fp
	add	local02, #3
	wrbyte	#1, local02
	sub	fp, #60
	mov	arg01, fp
	sub	fp, #12
	call	#_ff_cc_dir_register_0468
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
LR__0519
LR__0520
	add	fp, #8
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0521
	add	fp, #40
	rdlong	arg01, fp
	add	arg01, #22
	add	fp, #44
	rdlong	arg02, fp
	sub	fp, #84
	call	#_ff_cc_st_dword_0398
	add	fp, #72
	rdlong	arg01, fp
	sub	fp, #32
	rdlong	arg02, fp
	add	fp, #36
	rdlong	arg03, fp
	sub	fp, #76
	call	#_ff_cc_st_clust_0456
	add	fp, #40
	rdlong	local02, fp
	add	local02, #11
	wrbyte	#16, local02
	add	fp, #32
	rdlong	local02, fp
	add	local02, #3
	wrbyte	#1, local02
	sub	fp, #64
	rdlong	local02, fp wz
	sub	fp, #8
 if_ne	jmp	#LR__0522
	add	fp, #72
	rdlong	arg01, fp
	sub	fp, #72
	call	#_ff_cc_sync_fs_0416
	add	fp, #8
	wrlong	result1, fp
	sub	fp, #8
	jmp	#LR__0522
LR__0521
	add	fp, #56
	mov	arg01, fp
	add	fp, #20
	rdlong	arg02, fp
	sub	fp, #76
	mov	arg03, #0
	call	#_ff_cc_remove_chain_0430
LR__0522
LR__0523
LR__0524
	add	fp, #8
	rdlong	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_mkdir_ret
	ret

_ff_cc_f_rename
	mov	COUNT_, #9
	call	#pushregs_
	add	ptra, #148
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	mov	arg01, fp
	sub	fp, #8
	call	#_ff_cc_get_ldnumber_0493
	add	fp, #4
	mov	arg01, fp
	add	fp, #100
	mov	arg02, fp
	sub	fp, #104
	mov	arg03, #2
	call	#_ff_cc_mount_volume_0510
	mov	local01, result1
	add	fp, #12
	wrlong	local01, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0539
	add	fp, #104
	rdlong	local02, fp
	sub	fp, #88
	wrlong	local02, fp
	mov	arg01, fp
	sub	fp, #12
	rdlong	arg02, fp
	sub	fp, #4
	call	#_ff_cc_follow_path_0487
	mov	local03, result1
	add	fp, #12
	wrlong	local03, fp
	rdlong	local04, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0525
	add	fp, #59
	rdbyte	local05, fp
	sub	fp, #59
	mov	local06, local05
	zerox	local06, #7
	and	local06, #160 wz
 if_e	jmp	#LR__0525
	mov	local02, #6
	add	fp, #12
	wrlong	#6, fp
	sub	fp, #12
LR__0525
	add	fp, #12
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0538
	add	fp, #108
	mov	arg01, fp
	sub	fp, #64
	rdlong	arg02, fp
	sub	fp, #44
	mov	arg03, #32
	call	#_ff_cc_mem_cpy_0401
	add	fp, #60
	mov	arg01, fp
	sub	fp, #44
	mov	arg02, fp
	sub	fp, #16
	mov	arg03, #44
	call	#_ff_cc_mem_cpy_0401
	add	fp, #60
	mov	arg01, fp
	sub	fp, #52
	rdlong	arg02, fp
	sub	fp, #8
	call	#_ff_cc_follow_path_0487
	add	fp, #12
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0528
	add	fp, #68
	rdlong	local04, fp
	sub	fp, #44
	rdlong	local05, fp
	sub	fp, #24
	cmp	local04, local05 wz
 if_ne	jmp	#LR__0526
	add	fp, #76
	rdlong	local01, fp
	sub	fp, #44
	rdlong	local07, fp
	sub	fp, #32
	cmp	local01, local07 wz
 if_e	mov	local02, #4
 if_e	jmp	#LR__0527
LR__0526
	mov	local02, #8
LR__0527
	add	fp, #12
	wrlong	local02, fp
	sub	fp, #12
LR__0528
	add	fp, #12
	rdlong	local02, fp
	sub	fp, #12
	cmp	local02, #4 wz
 if_ne	jmp	#LR__0535
	add	fp, #60
	mov	arg01, fp
	sub	fp, #60
	call	#_ff_cc_dir_register_0468
	add	fp, #12
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0534
	add	fp, #88
	rdlong	arg01, fp
	add	fp, #52
	wrlong	arg01, fp
	add	arg01, #13
	sub	fp, #32
	mov	arg02, fp
	sub	fp, #108
	add	arg02, #13
	mov	arg03, #19
	call	#_ff_cc_mem_cpy_0401
	add	fp, #140
	rdlong	local02, fp
	sub	fp, #21
	rdbyte	local06, fp
	add	local02, #11
	wrbyte	local06, local02
	add	fp, #21
	rdlong	local04, fp
	sub	fp, #140
	add	local04, #11
	rdbyte	local02, local04
	test	local02, #16 wz
 if_ne	jmp	#LR__0529
	add	fp, #140
	rdlong	local02, fp
	mov	local05, local02
	sub	fp, #140
	add	local05, #11
	rdbyte	local06, local05
	or	local06, #32
	add	local02, #11
	wrbyte	local06, local02
LR__0529
	add	fp, #104
	rdlong	local02, fp
	add	local02, #3
	wrbyte	#1, local02
	add	fp, #36
	rdlong	local04, fp
	sub	fp, #140
	add	local04, #11
	rdbyte	local02, local04
	test	local02, #16 wz
 if_e	jmp	#LR__0533
	add	fp, #24
	rdlong	local03, fp
	add	fp, #44
	rdlong	local08, fp
	sub	fp, #68
	cmp	local03, local08 wz
 if_e	jmp	#LR__0533
	add	fp, #104
	rdlong	local02, fp
	mov	local05, local02
	mov	local06, local05
	add	fp, #36
	rdlong	local01, fp
	sub	fp, #140
	mov	local03, local01
	mov	arg01, local06
	mov	arg02, local03
	call	#_ff_cc_ld_clust_0455
	mov	local08, result1
	mov	arg01, local02
	mov	arg02, local08
	call	#_ff_cc_clst2sect_0417
	mov	local09, result1
	add	fp, #144
	wrlong	local09, fp
	rdlong	local04, fp wz
	sub	fp, #144
 if_ne	jmp	#LR__0530
	mov	local02, #2
	add	fp, #12
	wrlong	#2, fp
	sub	fp, #12
	jmp	#LR__0532
LR__0530
	add	fp, #104
	rdlong	arg01, fp
	add	fp, #40
	rdlong	arg02, fp
	sub	fp, #144
	call	#_ff_cc_move_window_0414
	mov	local03, result1
	add	fp, #12
	wrlong	local03, fp
	add	fp, #92
	rdlong	local06, fp
	mov	local05, local06
	add	local05, #48
	mov	local02, local05
	add	local02, #32
	add	fp, #36
	wrlong	local02, fp
	sub	fp, #128
	rdlong	local04, fp
	sub	fp, #12
	mov	local02, local04 wz
 if_ne	jmp	#LR__0531
	add	fp, #140
	rdlong	local03, fp
	sub	fp, #140
	mov	local05, local03
	add	local05, #1
	rdbyte	local01, local05
	sub	local05, #1
	mov	local06, local01
	zerox	local06, #7
	cmp	local06, #46 wz
 if_ne	jmp	#LR__0531
	add	fp, #104
	rdlong	arg01, fp
	add	fp, #36
	rdlong	local05, fp
	sub	fp, #72
	rdlong	local01, fp
	sub	fp, #68
	mov	local03, local01
	mov	arg02, local05
	mov	arg03, local03
	call	#_ff_cc_st_clust_0456
	add	fp, #104
	rdlong	local04, fp
	sub	fp, #104
	mov	local02, local04
	mov	local06, #1
	add	local02, #3
	wrbyte	#1, local02
	sub	local02, #3
LR__0531
LR__0532
LR__0533
LR__0534
LR__0535
	add	fp, #12
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0537
	add	fp, #16
	mov	arg01, fp
	sub	fp, #16
	call	#_ff_cc_dir_remove_0471
	mov	local06, result1
	add	fp, #12
	wrlong	local06, fp
	rdlong	local02, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0536
	add	fp, #104
	rdlong	arg01, fp
	sub	fp, #104
	call	#_ff_cc_sync_fs_0416
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
LR__0536
LR__0537
LR__0538
LR__0539
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_ff_cc_f_rename_ret
	ret

_ff_cc_stat
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	ptr___system__dat__, #304
	mov	result1, ptr___system__dat__
	sub	ptr___system__dat__, #304
	mov	local03, result1
	mov	arg01, local03
	mov	arg02, local01
	mov	arg03, #0
	call	#__system____getvfsforfile
	mov	local04, result1 wz
 if_e	jmp	#LR__0540
	add	local04, #44
	rdlong	local05, local04
	sub	local04, #44
	mov	local06, local05 wz
 if_ne	jmp	#LR__0541
LR__0540
	add	ptr___system__dat__, ##564
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0542
LR__0541
	mov	arg01, local02
	mov	arg02, #0
	mov	arg03, #48
	call	#__system____builtin_memset
	add	local04, #44
	rdlong	local06, local04
	rdlong	local05, local06
	add	local06, #4
	rdlong	local07, local06
	mov	arg01, local03
	mov	arg02, local02
	mov	local08, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local08
LR__0542
	mov	ptra, fp
	call	#popregs_
_ff_cc_stat_ret
	ret

_ff_cc__set_dos_error_0639
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, local01
	fle	local02, #20
	jmprel	local02
LR__0543
	jmp	#LR__0544
	jmp	#LR__0558
	jmp	#LR__0559
	jmp	#LR__0560
	jmp	#LR__0545
	jmp	#LR__0546
	jmp	#LR__0547
	jmp	#LR__0548
	jmp	#LR__0550
	jmp	#LR__0553
	jmp	#LR__0549
	jmp	#LR__0554
	jmp	#LR__0555
	jmp	#LR__0556
	jmp	#LR__0561
	jmp	#LR__0561
	jmp	#LR__0561
	jmp	#LR__0551
	jmp	#LR__0557
	jmp	#LR__0552
	jmp	#LR__0561
LR__0544
	mov	local03, #0
	jmp	#LR__0562
LR__0545
LR__0546
LR__0547
	mov	local03, #4
	jmp	#LR__0562
LR__0548
LR__0549
	mov	local03, #6
	jmp	#LR__0562
LR__0550
	mov	local03, #9
	jmp	#LR__0562
LR__0551
	mov	local03, #7
	jmp	#LR__0562
LR__0552
LR__0553
LR__0554
LR__0555
LR__0556
	mov	local03, #10
	jmp	#LR__0562
LR__0557
	mov	local03, #11
	jmp	#LR__0562
LR__0558
LR__0559
LR__0560
LR__0561
	mov	local03, #12
LR__0562
	add	ptr___system__dat__, ##564
	wrlong	local03, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	cmp	local03, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
_ff_cc__set_dos_error_0639_ret
	ret

_ff_cc_v_creat_0643
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, ##1076
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local03, result1 wz
 if_ne	jmp	#LR__0563
	add	ptr___system__dat__, ##564
	wrlong	#7, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0565
LR__0563
	mov	arg01, local03
	mov	arg02, #0
	mov	arg03, ##1076
	call	#_ff_cc_memset
	add	local03, ##1036
	mov	arg01, local03
	sub	local03, ##1036
	mov	arg02, local02
	mov	arg03, #7
	call	#_ff_cc_f_open
	mov	local04, result1 wz
 if_e	jmp	#LR__0564
	mov	arg01, local03
	call	#__system___gc_free
	mov	arg01, local04
	call	#_ff_cc__set_dos_error_0639
	jmp	#LR__0565
LR__0564
	wrlong	local03, local01
	mov	result1, #0
LR__0565
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_creat_0643_ret
	ret

_ff_cc_v_close_0646
	mov	COUNT_, #2
	call	#pushregs_
	rdlong	local01, arg01
	add	local01, ##1036
	mov	arg01, local01
	sub	local01, ##1036
	call	#_ff_cc_f_close
	mov	local02, result1
	mov	arg01, local01
	call	#__system___gc_free
	mov	arg01, local02
	call	#_ff_cc__set_dos_error_0639
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_close_0646_ret
	ret

_ff_cc_v_opendir_0649
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, #44
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local03, result1 wz
 if_ne	jmp	#LR__0566
	add	ptr___system__dat__, ##564
	wrlong	#7, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0568
LR__0566
	mov	arg01, local03
	mov	arg02, local02
	call	#_ff_cc_f_opendir
	mov	local04, result1 wz
 if_e	jmp	#LR__0567
	mov	arg01, local03
	call	#__system___gc_free
	mov	arg01, local04
	call	#_ff_cc__set_dos_error_0639
	jmp	#LR__0568
LR__0567
	add	local01, #4
	wrlong	local03, local01
	mov	result1, #0
LR__0568
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_opendir_0649_ret
	ret

_ff_cc_v_closedir_0652
	mov	COUNT_, #2
	call	#pushregs_
	add	arg01, #4
	rdlong	local01, arg01
	mov	arg01, local01
	call	#_ff_cc_f_closedir
	mov	local02, result1
	mov	arg01, local01
	call	#__system___gc_free
	cmp	local02, #0 wz
 if_e	jmp	#LR__0569
	mov	arg01, local02
	call	#_ff_cc__set_dos_error_0639
LR__0569
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_closedir_0652_ret
	ret

_ff_cc_v_readdir_0655
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #44
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	local01, fp
	add	local01, #4
	rdlong	arg01, local01
	add	fp, #8
	mov	arg02, fp
	sub	fp, #12
	call	#_ff_cc_f_readdir
	mov	local02, result1
	add	fp, #40
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #40
 if_e	jmp	#LR__0570
	add	fp, #40
	rdlong	arg01, fp
	sub	fp, #40
	call	#_ff_cc__set_dos_error_0639
	jmp	#LR__0571
LR__0570
	add	fp, #24
	rdbyte	local01, fp
	sub	fp, #24
	zerox	local01, #7 wz
 if_e	neg	result1, #1
 if_e	jmp	#LR__0571
	add	fp, #8
	rdlong	arg01, fp
	add	fp, #16
	mov	arg02, fp
	sub	fp, #24
	call	#_ff_cc_strcpy
	mov	result1, #0
LR__0571
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_readdir_0655_ret
	ret

_ff_cc_unixtime_0663
	mov	_var01, arg02
	shr	_var01, #11
	and	_var01, #31
	mov	_var02, arg02
	shr	_var02, #5
	and	_var02, #63
	and	arg02, #31
	shl	arg02, #1
	mov	_var03, _var02
	shl	_var03, #4
	sub	_var03, _var02
	shl	_var03, #2
	add	arg02, _var03
	qmul	_var01, ##3600
	getqx	_var04
	add	arg02, _var04
	mov	result1, arg02
_ff_cc_unixtime_0663_ret
	ret

_ff_cc_v_stat_0667
	mov	COUNT_, #8
	call	#pushregs_
	add	ptra, #48
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	mov	arg01, arg02
	sub	fp, #8
	mov	arg02, #0
	mov	arg03, #48
	call	#_ff_cc_memset
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	rdbyte	local02, local01 wz
 if_e	jmp	#LR__0572
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #4
	rdbyte	local04, local03
	cmp	local04, #46 wz
 if_ne	jmp	#LR__0573
	add	fp, #4
	rdlong	local05, fp
	sub	fp, #4
	add	local05, #1
	rdbyte	local06, local05 wz
 if_ne	jmp	#LR__0573
LR__0572
	add	fp, #24
	wrbyte	#16, fp
	sub	fp, #12
	wrlong	#0, fp
	sub	fp, #12
	jmp	#LR__0574
LR__0573
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #16
	call	#_ff_cc_f_stat
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
LR__0574
	add	fp, #12
	rdlong	local02, fp wz
	sub	fp, #12
 if_e	jmp	#LR__0575
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	call	#_ff_cc__set_dos_error_0639
	jmp	#LR__0578
LR__0575
	add	fp, #44
	wrlong	#292, fp
	sub	fp, #20
	rdbyte	local02, fp
	sub	fp, #24
	zerox	local02, #7
	test	local02, #1 wz
 if_e	jmp	#LR__0576
	add	fp, #44
	rdlong	local02, fp
	or	local02, #146
	wrlong	local02, fp
	sub	fp, #44
LR__0576
	add	fp, #24
	rdbyte	local02, fp
	sub	fp, #24
	zerox	local02, #7
	test	local02, #16 wz
 if_e	jmp	#LR__0577
	add	fp, #44
	rdlong	local02, fp
	or	local02, ##4169
	wrlong	local02, fp
	sub	fp, #44
LR__0577
	add	fp, #8
	rdlong	local02, fp
	add	fp, #36
	rdlong	local07, fp
	add	local02, #8
	wrlong	local07, local02
	sub	fp, #36
	rdlong	local02, fp
	add	local02, #12
	wrlong	#1, local02
	rdlong	local02, fp
	add	fp, #8
	rdlong	local07, fp
	add	local02, #24
	wrlong	local07, local02
	sub	fp, #8
	rdlong	local02, fp
	add	local02, #28
	wrlong	##512, local02
	rdlong	local02, fp
	mov	local07, local02
	add	local07, #24
	rdlong	local08, local07
	abs	local03, local08 wc
	shr	local03, #9
 if_b	neg	local03, local03
	add	local02, #32
	wrlong	local03, local02
	rdlong	local02, fp
	mov	local07, local02
	mov	local03, local02
	add	fp, #12
	rdword	arg01, fp
	add	fp, #2
	rdword	arg02, fp
	sub	fp, #22
	zerox	arg02, #15
	call	#_ff_cc_unixtime_0663
	add	local03, #44
	wrlong	result1, local03
	add	local07, #40
	wrlong	result1, local07
	add	local02, #36
	wrlong	result1, local02
	add	fp, #12
	rdlong	result1, fp
	sub	fp, #12
LR__0578
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_stat_0667_ret
	ret

_ff_cc_v_read_0671
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #28
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdlong	local01, fp
	rdlong	local02, local01
	add	fp, #12
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0579
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0582
LR__0579
	add	fp, #16
	rdlong	arg01, fp
	add	arg01, ##1036
	sub	fp, #8
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	add	fp, #12
	mov	arg04, fp
	sub	fp, #24
	call	#_ff_cc_f_read
	mov	local03, result1
	add	fp, #20
	wrlong	local03, fp
	rdlong	local01, fp wz
	sub	fp, #20
 if_e	jmp	#LR__0580
	add	fp, #4
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #8
	rdlong	local02, local04
	or	local02, #32
	add	local01, #8
	wrlong	local02, local01
	add	fp, #16
	rdlong	arg01, fp
	sub	fp, #20
	call	#_ff_cc__set_dos_error_0639
	jmp	#LR__0582
LR__0580
	add	fp, #24
	rdlong	local01, fp wz
	sub	fp, #24
 if_ne	jmp	#LR__0581
	add	fp, #4
	rdlong	local01, fp
	mov	local04, local01
	sub	fp, #4
	add	local04, #8
	rdlong	local02, local04
	or	local02, #16
	add	local01, #8
	wrlong	local02, local01
LR__0581
	add	fp, #24
	rdlong	result1, fp
	sub	fp, #24
LR__0582
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_read_0671_ret
	ret

_ff_cc_v_write_0675
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #28
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdlong	local01, fp
	rdlong	local02, local01
	add	fp, #12
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0583
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0585
LR__0583
	add	fp, #16
	rdlong	arg01, fp
	add	arg01, ##1036
	sub	fp, #8
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	add	fp, #12
	mov	arg04, fp
	sub	fp, #24
	call	#_ff_cc_f_write
	mov	local03, result1
	add	fp, #20
	wrlong	local03, fp
	rdlong	local01, fp wz
	sub	fp, #20
 if_e	jmp	#LR__0584
	add	fp, #4
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #8
	rdlong	local02, local04
	or	local02, #32
	add	local01, #8
	wrlong	local02, local01
	add	fp, #16
	rdlong	arg01, fp
	sub	fp, #20
	call	#_ff_cc__set_dos_error_0639
	jmp	#LR__0585
LR__0584
	add	fp, #24
	rdlong	result1, fp
	sub	fp, #24
LR__0585
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_write_0675_ret
	ret

_ff_cc_v_lseek_0679
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	rdlong	local03, arg01
	add	local03, ##1036 wz
 if_ne	jmp	#LR__0586
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0591
LR__0586
	cmp	local02, #0 wz
 if_e	jmp	#LR__0589
	cmp	local02, #1 wz
 if_ne	jmp	#LR__0587
	add	local03, #20
	rdlong	local04, local03
	sub	local03, #20
	add	local01, local04
	jmp	#LR__0588
LR__0587
	add	local03, #12
	rdlong	local04, local03
	sub	local03, #12
	add	local01, local04
LR__0588
LR__0589
	mov	arg01, local03
	mov	arg02, local01
	call	#_ff_cc_f_lseek
	mov	local05, result1 wz
 if_e	jmp	#LR__0590
	mov	arg01, local05
	call	#_ff_cc__set_dos_error_0639
	jmp	#LR__0591
LR__0590
	mov	result1, local01
LR__0591
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_lseek_0679_ret
	ret

_ff_cc_v_ioctl
	add	ptr___system__dat__, ##564
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
_ff_cc_v_ioctl_ret
	ret

_ff_cc_v_mkdir
	call	#_ff_cc_f_mkdir
	mov	arg01, result1
	call	#_ff_cc__set_dos_error_0639
_ff_cc_v_mkdir_ret
	ret

_ff_cc_v_remove
	call	#_ff_cc_f_unlink
	mov	arg01, result1
	call	#_ff_cc__set_dos_error_0639
_ff_cc_v_remove_ret
	ret

_ff_cc_v_rmdir_0683
	call	#_ff_cc_f_unlink
	mov	arg01, result1
	call	#_ff_cc__set_dos_error_0639
_ff_cc_v_rmdir_0683_ret
	ret

_ff_cc_v_rename_0685
	call	#_ff_cc_f_rename
	mov	arg01, result1
	call	#_ff_cc__set_dos_error_0639
_ff_cc_v_rename_0685_ret
	ret

_ff_cc_v_open_0689
	mov	COUNT_, #10
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	arg01, ##1076
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local04, result1 wz
 if_ne	jmp	#LR__0592
	add	ptr___system__dat__, ##564
	wrlong	#7, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0599
LR__0592
	mov	local05, local04
	mov	local06, #0
	mov	local07, ##1076
	mov	arg01, local05
	mov	arg02, #0
	mov	arg03, ##1076
	call	#_ff_cc_memset
	mov	local08, local03
	and	local08, #3 wz
 if_e	jmp	#LR__0593
	cmp	local08, #1 wz
 if_e	jmp	#LR__0594
	jmp	#LR__0595
LR__0593
	mov	local09, #1
	jmp	#LR__0596
LR__0594
	mov	local09, #2
	jmp	#LR__0596
LR__0595
	mov	local09, #3
LR__0596
	test	local03, #8 wz
 if_ne	or	local09, #24
 if_ne	jmp	#LR__0597
	test	local03, #32 wz
 if_ne	or	local09, #48
LR__0597
	add	local04, ##1036
	mov	arg01, local04
	sub	local04, ##1036
	mov	arg02, local02
	mov	arg03, local09
	call	#_ff_cc_f_open
	mov	local10, result1 wz
 if_e	jmp	#LR__0598
	mov	arg01, local04
	call	#__system___gc_free
	mov	arg01, local10
	call	#_ff_cc__set_dos_error_0639
	jmp	#LR__0599
LR__0598
	wrlong	local04, local01
	mov	result1, #0
LR__0599
	mov	ptra, fp
	call	#popregs_
_ff_cc_v_open_0689_ret
	ret

_ff_cc_xmit_mmc_0954
	mov	COUNT_, #4
	call	#pushregs_
	add	ptr__ff_cc_dat__, #364
	rdlong	local01, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #8
	rdlong	local02, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #372
	loc	pa,	#(@LR__0601-@LR__0600)
	call	#FCACHE_LOAD_
LR__0600
	rdbyte	local03, arg01
	mov	local04, local03
	zerox	local04, #7
	test	local04, #128 wz
	add	arg01, #1
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #64 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #32 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #16 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #8 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #4 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	mov	local04, local03
	zerox	local04, #7
	test	local04, #2 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	zerox	local03, #7
	test	local03, #1 wz
	drvnz	local02
	drvh	local01
	waitx	#16
	drvl	local01
	waitx	#16
	sub	arg02, #1 wz
 if_ne	jmp	#LR__0600
LR__0601
	mov	ptra, fp
	call	#popregs_
_ff_cc_xmit_mmc_0954_ret
	ret

_ff_cc_rcvr_mmc_0960
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	add	ptr__ff_cc_dat__, #364
	rdlong	local02, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #8
	rdlong	arg01, ptr__ff_cc_dat__
	add	ptr__ff_cc_dat__, #4
	rdlong	local03, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #376
	drvh	arg01
	loc	pa,	#(@LR__0603-@LR__0602)
	call	#FCACHE_LOAD_
LR__0602
	mov	local04, #0
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	mov	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	zerox	local04, #7
	shl	local04, #1
	waitx	#8
	testp	local03 wc
	wrc	result1
	test	result1, #1 wz
 if_ne	add	local04, #1
	drvh	local02
	waitx	#16
	drvl	local02
	waitx	#16
	wrbyte	local04, local01
	sub	arg02, #1 wz
	add	local01, #1
 if_ne	jmp	#LR__0602
LR__0603
	mov	ptra, fp
	call	#popregs_
_ff_cc_rcvr_mmc_0960_ret
	ret

_ff_cc_wait_ready_0963
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #12
	add	fp, #8
	wrlong	##5000, fp
	sub	fp, #8
LR__0604
	add	fp, #8
	rdlong	local01, fp wz
	sub	fp, #8
 if_e	jmp	#LR__0605
	add	fp, #4
	mov	arg01, fp
	sub	fp, #4
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0960
	add	fp, #4
	rdbyte	local02, fp
	sub	fp, #4
	zerox	local02, #7
	cmp	local02, #255 wz
 if_e	jmp	#LR__0605
	waitx	##16000
	add	fp, #8
	rdlong	local03, fp
	sub	local03, #1
	wrlong	local03, fp
	sub	fp, #8
	jmp	#LR__0604
LR__0605
	add	fp, #8
	rdlong	local01, fp wz
	sub	fp, #8
 if_ne	mov	local04, #1
 if_e	mov	local04, #0
	mov	result1, local04
	mov	ptra, fp
	call	#popregs_
_ff_cc_wait_ready_0963_ret
	ret

_ff_cc_deselect_0969
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #20
	add	ptr__ff_cc_dat__, #368
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #4
	wrlong	local01, fp
	sub	ptr__ff_cc_dat__, #4
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #4
	wrlong	local01, fp
	add	ptr__ff_cc_dat__, #8
	rdlong	local01, ptr__ff_cc_dat__
	add	fp, #4
	wrlong	local01, fp
	add	ptr__ff_cc_dat__, #4
	rdlong	local01, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #376
	add	fp, #4
	wrlong	local01, fp
	sub	fp, #12
	rdlong	arg01, fp
	sub	fp, #4
	drvh	arg01
	waitx	#16
	mov	arg01, fp
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0960
	mov	ptra, fp
	call	#popregs_
_ff_cc_deselect_0969_ret
	ret

_ff_cc_select_0972
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #12
	add	ptr__ff_cc_dat__, #368
	rdlong	arg01, ptr__ff_cc_dat__
	sub	ptr__ff_cc_dat__, #368
	add	fp, #8
	wrlong	arg01, fp
	drvl	arg01
	waitx	#16
	sub	fp, #4
	mov	arg01, fp
	sub	fp, #4
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0960
	call	#_ff_cc_wait_ready_0963
	cmp	result1, #0 wz
 if_ne	mov	result1, #1
 if_ne	jmp	#LR__0606
	call	#_ff_cc_deselect_0969
	mov	result1, #0
LR__0606
	mov	ptra, fp
	call	#popregs_
_ff_cc_select_0972_ret
	ret

_ff_cc_rcvr_datablock_0975
	mov	COUNT_, #4
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #8
	wrlong	##1000, fp
	sub	fp, #16
LR__0607
	add	fp, #16
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0608
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0960
	add	fp, #12
	rdbyte	local02, fp
	sub	fp, #12
	zerox	local02, #7
	cmp	local02, #255 wz
 if_ne	jmp	#LR__0608
	waitx	##16000
	add	fp, #16
	rdlong	local03, fp
	sub	local03, #1
	wrlong	local03, fp
	sub	fp, #16
	jmp	#LR__0607
LR__0608
	add	fp, #12
	rdbyte	local04, fp
	sub	fp, #12
	zerox	local04, #7
	cmp	local04, #254 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0609
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	call	#_ff_cc_rcvr_mmc_0960
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #2
	call	#_ff_cc_rcvr_mmc_0960
	mov	result1, #1
LR__0609
	mov	ptra, fp
	call	#popregs_
_ff_cc_rcvr_datablock_0975_ret
	ret

_ff_cc_xmit_datablock_0977
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrbyte	arg02, fp
	sub	fp, #8
	call	#_ff_cc_wait_ready_0963
	cmp	result1, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0611
	add	fp, #8
	rdbyte	local01, fp
	add	fp, #4
	wrbyte	local01, fp
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #1
	call	#_ff_cc_xmit_mmc_0954
	add	fp, #8
	rdbyte	local01, fp
	sub	fp, #8
	zerox	local01, #7
	cmp	local01, #253 wz
 if_e	jmp	#LR__0610
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	decod	arg02, #9
	call	#_ff_cc_xmit_mmc_0954
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #2
	call	#_ff_cc_rcvr_mmc_0960
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0960
	add	fp, #12
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	and	local01, #31
	cmp	local01, #5 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0611
LR__0610
	mov	result1, #1
LR__0611
	mov	ptra, fp
	call	#popregs_
_ff_cc_xmit_datablock_0977_ret
	ret

_ff_cc_send_cmd_0981
	mov	COUNT_, #5
	call	#pushregs_
	add	ptra, #28
_ff_cc_send_cmd_0981_enter
	add	fp, #4
	wrbyte	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7
	test	local01, #128 wz
 if_e	jmp	#LR__0613
	add	fp, #4
	rdbyte	local01, fp
	and	local01, #127
	wrbyte	local01, fp
	sub	fp, #4
	mov	arg01, #55
	mov	arg02, #0
	call	#_ff_cc_send_cmd_0981
	add	fp, #12
	wrbyte	result1, fp
	rdbyte	local01, fp
	sub	fp, #12
	zerox	local01, #7
	cmp	local01, #1 wcz
 if_be	jmp	#LR__0612
	add	fp, #12
	rdbyte	result1, fp
	sub	fp, #12
	jmp	#LR__0618
LR__0612
LR__0613
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7
	cmp	local01, #12 wz
 if_e	jmp	#LR__0614
	call	#_ff_cc_deselect_0969
	call	#_ff_cc_select_0972
	cmp	result1, #0 wz
 if_e	mov	result1, #255
 if_e	jmp	#LR__0618
LR__0614
	add	fp, #4
	rdbyte	local02, fp
	mov	local01, #64
	or	local01, local02
	add	fp, #16
	wrbyte	local01, fp
	sub	fp, #12
	rdlong	local01, fp
	shr	local01, #24
	add	fp, #13
	wrbyte	local01, fp
	sub	fp, #13
	rdlong	local01, fp
	shr	local01, #16
	add	fp, #14
	wrbyte	local01, fp
	sub	fp, #14
	rdlong	local01, fp
	shr	local01, #8
	add	fp, #15
	wrbyte	local01, fp
	sub	fp, #15
	rdlong	local01, fp
	add	fp, #16
	wrbyte	local01, fp
	sub	fp, #12
	wrbyte	#1, fp
	sub	fp, #8
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7 wz
 if_e	add	fp, #12
 if_e	wrbyte	#149, fp
 if_e	sub	fp, #12
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7
	cmp	local01, #8 wz
 if_e	add	fp, #12
 if_e	wrbyte	#135, fp
 if_e	sub	fp, #12
	add	fp, #12
	rdbyte	local01, fp
	add	fp, #13
	wrbyte	local01, fp
	sub	fp, #5
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, #6
	call	#_ff_cc_xmit_mmc_0954
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7
	cmp	local01, #12 wz
 if_ne	jmp	#LR__0615
	add	fp, #16
	mov	arg01, fp
	sub	fp, #16
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0960
LR__0615
	add	fp, #12
	wrbyte	#10, fp
	sub	fp, #12
LR__0616
	add	fp, #16
	mov	arg01, fp
	sub	fp, #16
	mov	arg02, #1
	call	#_ff_cc_rcvr_mmc_0960
	add	fp, #16
	rdbyte	local01, fp
	sub	fp, #16
	zerox	local01, #7
	test	local01, #128 wz
 if_e	jmp	#LR__0617
	add	fp, #12
	rdbyte	local03, fp
	sub	local03, #1
	wrbyte	local03, fp
	rdbyte	local04, fp
	sub	fp, #12
	mov	local05, local04 wz
 if_ne	jmp	#LR__0616
LR__0617
	add	fp, #16
	rdbyte	result1, fp
	sub	fp, #16
LR__0618
	mov	ptra, fp
	call	#popregs_
_ff_cc_send_cmd_0981_ret
	ret

_ff_cc_strcpy
	mov	_var01, arg01
	cmp	arg02, #0 wz
 if_e	mov	result1, arg01
 if_e	jmp	#_ff_cc_strcpy_ret
	loc	pa,	#(@LR__0620-@LR__0619)
	call	#FCACHE_LOAD_
LR__0619
	rdbyte	_var02, arg02 wz
	wrbyte	_var02, _var01
	add	arg02, #1
	add	_var01, #1
 if_ne	jmp	#LR__0619
LR__0620
	mov	result1, arg01
_ff_cc_strcpy_ret
	ret

_ff_cc_memset
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, arg03
	mov	_var04, _var01
	mov	_var05, #3
	test	_var05, _var01 wz
 if_ne	jmp	#LR__0624
	cmp	_var03, #4 wcz
 if_be	jmp	#LR__0624
	mov	_var06, _var01
	and	_var02, #255
	mov	_var05, _var02
	shl	_var05, #24
	mov	_var07, _var02
	shl	_var07, #16
	or	_var05, _var07
	mov	_var08, _var02
	shl	_var08, #8
	or	_var05, _var08
	or	_var05, _var02
	mov	_var09, _var05
	loc	pa,	#(@LR__0622-@LR__0621)
	call	#FCACHE_LOAD_
LR__0621
	cmp	_var03, #4 wcz
 if_b	jmp	#LR__0623
	mov	_var05, _var06
	mov	_var07, _var06
	add	_var07, #4
	mov	_var06, _var07
	wrlong	_var09, _var05
	mov	_var05, _var03
	sub	_var05, #4
	mov	_var03, _var05
	jmp	#LR__0621
LR__0622
LR__0623
	mov	_var01, _var06
LR__0624
	loc	pa,	#(@LR__0626-@LR__0625)
	call	#FCACHE_LOAD_
LR__0625
	cmp	_var03, #0 wcz
 if_be	jmp	#LR__0627
	wrbyte	_var02, _var01
	sub	_var03, #1
	add	_var01, #1
	jmp	#LR__0625
LR__0626
LR__0627
	mov	result1, _var04
_ff_cc_memset_ret
	ret

___struct__anon_9b5668f900000005_sputc
	rdlong	_var01, objptr
	add	objptr, #4
	rdlong	_var02, objptr
	sub	objptr, #4
	cmps	_var01, _var02 wcz
 if_ae	jmp	#LR__0628
	rdlong	_var01, objptr
	mov	_var02, _var01
	add	_var02, #1
	wrlong	_var02, objptr
	wrbyte	arg01, _var01
LR__0628
	mov	result1, #1
___struct__anon_9b5668f900000005_sputc_ret
	ret

___struct__fmtfile_putchar
	mov	COUNT_, #5
	call	#pushregs_
	rdlong	local01, objptr
	add	local01, #20
	rdlong	local02, local01
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	rdlong	arg02, objptr
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	ptra, fp
	call	#popregs_
___struct__fmtfile_putchar_ret
	ret
hubexit
	jmp	#cogexit

__system___setbaud
	rdlong	muldiva_, #20
	mov	muldivb_, arg01
	call	#divide_
	dirl	#62
	dirl	#63
	wrlong	muldivb_, ptr___system__dat__
	shl	muldivb_, #16
	mov	arg02, #7
	add	arg02, muldivb_
	wrpin	#124, #62
	wxpin	arg02, #62
	wrpin	#62, #63
	add	arg02, #20
	wxpin	arg02, #63
	dirh	#62
	dirh	#63
__system___setbaud_ret
	ret

__system___txraw
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, ptr___system__dat__ wz
 if_ne	jmp	#LR__0629
	mov	arg01, ##230400
	call	#__system___setbaud
LR__0629
	wypin	local01, #62
	waitx	#1
	loc	pa,	#(@LR__0631-@LR__0630)
	call	#FCACHE_LOAD_
LR__0630
	testp	#62 wc
 if_nc	jmp	#LR__0630
LR__0631
	mov	result1, #1
	mov	ptra, fp
	call	#popregs_
__system___txraw_ret
	ret

__system___rxraw
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, ptr___system__dat__ wz
 if_ne	jmp	#LR__0632
	mov	arg01, ##230400
	call	#__system___setbaud
LR__0632
	cmp	local01, #0 wz
 if_e	jmp	#LR__0633
	getct	local03
	rdlong	local04, #20
	shr	local04, #10
	qmul	local01, local04
	getqx	local05
	add	local03, local05
LR__0633
	neg	local06, #1
	mov	local07, #0
	add	ptr___system__dat__, #4
	rdlong	local08, ptr___system__dat__
	sub	ptr___system__dat__, #4
LR__0634
	testb	local08, #8 wc
	testbn	local08, #9 andc
	shr	local08, #10
 if_b	mov	local07, #1
 if_b	jmp	#LR__0635
	testp	#63 wz
 if_e	mov	local07, #1
 if_e	rdpin	local08, #63
 if_e	shr	local08, #4
LR__0635
	mov	local02, #0
	cmp	local07, #0 wz
 if_ne	neg	local02, #1
	mov	local09, #0
	mov	local04, #0
	cmp	local01, #0 wz
 if_ne	neg	local04, #1
	mov	local05, #0
	mov	local10, #0
	getct	local11
	sub	local11, local03
	cmps	local11, #0 wcz
 if_b	neg	local10, #1
	cmp	local10, #0 wz
 if_ne	neg	local05, #1
	test	local04, local05 wz
 if_ne	neg	local09, #1
	or	local02, local09 wz
 if_e	jmp	#LR__0634
	cmp	local07, #0 wz
 if_ne	mov	local06, local08
 if_ne	and	local06, #255
	add	ptr___system__dat__, #4
	wrlong	local08, ptr___system__dat__
	sub	ptr___system__dat__, #4
	mov	result1, local06
	mov	ptra, fp
	call	#popregs_
__system___rxraw_ret
	ret

__system____builtin_memset
	mov	_var01, arg01
	mov	_var02, arg02
	shl	_var02, #8
	or	_var02, arg02
	mov	_var03, _var02
	shl	_var03, #16
	or	_var03, _var02
	loc	pa,	#(@LR__0637-@LR__0636)
	call	#FCACHE_LOAD_
LR__0636
	cmps	arg03, #3 wcz
 if_be	jmp	#LR__0638
	wrlong	_var03, arg01
	add	arg01, #4
	sub	arg03, #4
	jmp	#LR__0636
LR__0637
LR__0638
	cmp	arg03, #0 wz
 if_e	jmp	#LR__0643
	loc	pa,	#(@LR__0641-@LR__0639)
	call	#FCACHE_LOAD_
LR__0639
	rep	@LR__0642, arg03
LR__0640
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0641
LR__0642
LR__0643
	mov	result1, _var01
__system____builtin_memset_ret
	ret

__system__longmove
	mov	_var01, arg01
	cmps	arg01, arg02 wcz
 if_ae	jmp	#LR__0648
	mov	_var02, arg03 wz
 if_e	jmp	#LR__0654
	loc	pa,	#(@LR__0646-@LR__0644)
	call	#FCACHE_LOAD_
LR__0644
	rep	@LR__0647, _var02
LR__0645
	rdlong	_var03, arg02
	wrlong	_var03, arg01
	add	arg01, #4
	add	arg02, #4
LR__0646
LR__0647
	jmp	#LR__0654
LR__0648
	mov	_var04, arg03
	shl	_var04, #2
	add	arg01, _var04
	mov	_var04, arg03
	shl	_var04, #2
	add	arg02, _var04
	mov	_var05, arg03 wz
 if_e	jmp	#LR__0653
	loc	pa,	#(@LR__0651-@LR__0649)
	call	#FCACHE_LOAD_
LR__0649
	rep	@LR__0652, _var05
LR__0650
	sub	arg01, #4
	sub	arg02, #4
	rdlong	_var03, arg02
	wrlong	_var03, arg01
LR__0651
LR__0652
LR__0653
LR__0654
	mov	result1, _var01
__system__longmove_ret
	ret

__system____builtin_strcpy
	mov	_var01, arg01
	loc	pa,	#(@LR__0656-@LR__0655)
	call	#FCACHE_LOAD_
LR__0655
	rdbyte	_var02, arg02 wz
	wrbyte	_var02, arg01
	add	arg02, #1
	add	arg01, #1
 if_ne	jmp	#LR__0655
LR__0656
	mov	result1, _var01
__system____builtin_strcpy_ret
	ret

__system____topofstack
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #8
	add	fp, #4
	wrlong	arg01, fp
	mov	result1, fp
	sub	fp, #4
	mov	ptra, fp
	call	#popregs_
__system____topofstack_ret
	ret

__system___make_methodptr
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, #8
	call	#__system___gc_alloc_managed
	mov	local03, result1 wz
 if_e	jmp	#LR__0657
	wrlong	local01, local03
	mov	local04, local03
	add	local04, #4
	wrlong	local02, local04
LR__0657
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
__system___make_methodptr_ret
	ret

__system___tx
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	cmp	local01, #10 wz
 if_ne	jmp	#LR__0658
	add	ptr___system__dat__, #8
	rdlong	local02, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	local02, #2 wz
 if_e	jmp	#LR__0658
	mov	local02, #13
	mov	arg01, #13
	call	#__system___txraw
LR__0658
	mov	arg01, local01
	call	#__system___txraw
	mov	ptra, fp
	call	#popregs_
__system___tx_ret
	ret

__system___rx
	mov	COUNT_, #2
	call	#pushregs_
LR__0659
	mov	arg01, #0
	call	#__system___rxraw
	mov	local01, result1
	cmp	local01, ##-1 wz
 if_e	jmp	#LR__0659
	cmp	local01, #13 wz
 if_ne	jmp	#LR__0660
	add	ptr___system__dat__, #8
	rdlong	local02, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	local02, #2 wz
 if_ne	mov	local01, #10
LR__0660
	add	ptr___system__dat__, #8
	rdlong	local02, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	local02, #1 wz
 if_e	jmp	#LR__0663
	cmp	local01, #127 wz
 if_ne	jmp	#LR__0661
	mov	arg01, #8
	call	#__system___tx
	jmp	#LR__0662
LR__0661
	mov	arg01, local01
	call	#__system___tx
LR__0662
LR__0663
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
__system___rx_ret
	ret

__system___lockmem
	mov	COUNT_, #2
	call	#pushregs_
	mov	result1, __lockreg
	mov	local01, result1
	loc	pa,	#(@LR__0666-@LR__0664)
	call	#FCACHE_LOAD_
LR__0664
LR__0665
	locktry	local01 wc
	muxnc	result1, ##-1
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0665
	rdbyte	local02, arg01 wz
 if_e	wrbyte	#1, arg01
	lockrel	local01 wc
	muxc	result1, ##-1
	cmp	local02, #0 wz
 if_ne	jmp	#LR__0664
LR__0666
	mov	ptra, fp
	call	#popregs_
__system___lockmem_ret
	ret

__system___waitms
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, #20
	loc	pa,	#(@LR__0668-@LR__0667)
	call	#FCACHE_LOAD_
LR__0667
	cmps	local01, ##1000 wcz
 if_a	waitx	local02
 if_a	sub	local01, ##1000
 if_a	jmp	#LR__0667
LR__0668
	cmps	local01, #0 wcz
 if_be	jmp	#LR__0669
	mov	muldiva_, local02
	mov	muldivb_, ##1000
	call	#divide_
	qmul	local01, muldivb_
	getqx	arg01
	waitx	arg01
LR__0669
	mov	ptra, fp
	call	#popregs_
__system___waitms_ret
	ret

__system____getvfsforfile
	mov	COUNT_, #18
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	rdbyte	local04, local02
	cmp	local04, #47 wz
 if_ne	jmp	#LR__0670
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#__system__strncpy
	jmp	#LR__0671
LR__0670
	add	ptr___system__dat__, #48
	mov	arg02, ptr___system__dat__
	sub	ptr___system__dat__, #48
	mov	arg01, local01
	mov	arg03, #256
	call	#__system__strncpy
	mov	arg02, ##@LR__0942
	mov	arg01, local01
	mov	arg03, #256
	call	#__system__strncat
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#__system__strncat
LR__0671
	mov	local05, #0
LR__0672
	cmps	local05, #4 wcz
 if_ae	jmp	#LR__0683
	mov	local04, local05
	shl	local04, #2
	add	ptr___system__dat__, #16
	add	local04, ptr___system__dat__
	rdlong	local06, local04 wz
	sub	ptr___system__dat__, #16
 if_e	jmp	#LR__0682
	mov	local04, local05
	shl	local04, #2
	add	ptr___system__dat__, #16
	add	local04, ptr___system__dat__
	rdlong	arg01, local04
	sub	ptr___system__dat__, #16
	mov	local07, #0
	loc	pa,	#(@LR__0674-@LR__0673)
	call	#FCACHE_LOAD_
LR__0673
	rdbyte	local08, arg01 wz
 if_ne	add	local07, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0673
LR__0674
	mov	result1, local07
	mov	local09, result1
	mov	local10, local09
	add	local10, local01
	rdbyte	local04, local10
	cmp	local04, #47 wz
 if_e	jmp	#LR__0675
	mov	local11, local09
	add	local11, local01
	rdbyte	local12, local11 wz
 if_ne	jmp	#LR__0681
LR__0675
	mov	arg01, local01
	mov	local13, local05
	shl	local13, #2
	add	ptr___system__dat__, #16
	add	local13, ptr___system__dat__
	rdlong	arg02, local13
	mov	arg03, local09
	sub	ptr___system__dat__, #16
	call	#__system__strncmp
	mov	local14, result1 wz
 if_ne	jmp	#LR__0681
	mov	local04, local05
	shl	local04, #2
	add	ptr___system__dat__, #32
	add	local04, ptr___system__dat__
	rdlong	local15, local04
	sub	ptr___system__dat__, #32
	loc	pa,	#(@LR__0678-@LR__0676)
	call	#FCACHE_LOAD_
LR__0676
	mov	local06, local09
	add	local06, #1
	add	local06, local01
	rdbyte	local04, local06
	cmp	local04, #46 wz
 if_ne	jmp	#LR__0679
	mov	local16, local09
	add	local16, #2
	add	local16, local01
	rdbyte	local11, local16
	cmp	local11, #47 wz
 if_e	jmp	#LR__0677
	mov	local17, local09
	add	local17, #2
	add	local17, local01
	rdbyte	local18, local17 wz
 if_ne	jmp	#LR__0679
LR__0677
	add	local09, #1
	jmp	#LR__0676
LR__0678
LR__0679
	cmp	local03, #0 wz
 if_e	jmp	#LR__0680
	mov	arg01, local03
	mov	arg02, local01
	mov	arg03, #256
	call	#__system__strncpy
LR__0680
	mov	arg01, local01
	mov	arg02, local01
	add	arg02, local09
	add	arg02, #1
	call	#__system____builtin_strcpy
	mov	result1, local15
	jmp	#LR__0684
LR__0681
LR__0682
	add	local05, #1
	jmp	#LR__0672
LR__0683
	add	ptr___system__dat__, ##560
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##560
LR__0684
	mov	ptra, fp
	call	#popregs_
__system____getvfsforfile_ret
	ret

__system___basic_print_char
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg02
	call	#__system___gettxfunc
	mov	local02, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0685
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	result1, #1
LR__0685
	mov	ptra, fp
	call	#popregs_
__system___basic_print_char_ret
	ret

__system___basic_print_string
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	call	#__system___gettxfunc
	mov	local03, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0686
	cmp	local01, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0686
	mov	arg01, local03
	mov	arg02, local02
	mov	arg03, local01
	call	#__system___fmtstr
LR__0686
	mov	ptra, fp
	call	#popregs_
__system___basic_print_string_ret
	ret

__system___basic_print_integer
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	mov	local03, arg04
	call	#__system___gettxfunc
	mov	local04, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0687
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, local01
	mov	arg04, local03
	call	#__system___fmtnum
LR__0687
	mov	ptra, fp
	call	#popregs_
__system___basic_print_integer_ret
	ret

__system___basic_print_unsigned
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	mov	local03, arg04
	call	#__system___gettxfunc
	mov	local04, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0688
	bith	local02, #58
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, local01
	mov	arg04, local03
	call	#__system___fmtnum
LR__0688
	mov	ptra, fp
	call	#popregs_
__system___basic_print_unsigned_ret
	ret

__system___fmtchar
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrbyte	arg03, fp
	add	fp, #1
	wrbyte	#0, fp
	sub	fp, #13
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #8
	mov	arg03, fp
	sub	fp, #16
	call	#__system___fmtstr
	mov	ptra, fp
	call	#popregs_
__system___fmtchar_ret
	ret

__system___fmtstr
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, local02
	and	local04, #255
	mov	arg01, local03
	mov	local05, #0
	loc	pa,	#(@LR__0690-@LR__0689)
	call	#FCACHE_LOAD_
LR__0689
	rdbyte	local06, arg01 wz
 if_ne	add	local05, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0689
LR__0690
	mov	result1, local05
	mov	local07, result1
	cmp	local04, #0 wz
 if_e	jmp	#LR__0691
	fles	local07, local04 wcz
LR__0691
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local07
	mov	arg04, #2
	call	#__system___fmtpad
	mov	local08, result1
	cmps	local08, #0 wcz
 if_b	mov	result1, local08
 if_b	jmp	#LR__0694
	mov	local09, #0
LR__0692
	cmps	local09, local07 wcz
 if_ae	jmp	#LR__0693
	mov	local10, local01
	rdlong	local11, local10
	add	local10, #4
	rdlong	local12, local10
	rdbyte	arg01, local03
	mov	local13, objptr
	mov	objptr, local11
	add	local03, #1
	call	local12
	mov	objptr, local13
	mov	local14, result1
	cmps	local14, #0 wcz
 if_b	mov	result1, local14
 if_b	jmp	#LR__0694
	add	local08, local14
	add	local09, #1
	jmp	#LR__0692
LR__0693
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local07
	mov	arg04, #1
	call	#__system___fmtpad
	mov	local14, result1
	cmps	local14, #0 wcz
 if_b	mov	result1, local14
 if_ae	add	local08, local14
 if_ae	mov	result1, local08
LR__0694
	mov	ptra, fp
	call	#popregs_
__system___fmtstr_ret
	ret

__system___fmtnum
	mov	COUNT_, #7
	call	#pushregs_
	add	ptra, #112
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #4
	mov	local01, fp
	add	fp, #68
	wrlong	local01, fp
	add	fp, #4
	wrlong	#0, fp
	sub	fp, #84
	rdlong	local01, fp
	shr	local01, #16
	and	local01, #63
	add	fp, #88
	wrlong	local01, fp
	sub	fp, #88
	rdlong	local01, fp
	and	local01, #255
	add	fp, #92
	wrlong	local01, fp
	sub	fp, #92
	rdlong	local01, fp
	shr	local01, #26
	and	local01, #3
	add	fp, #96
	wrlong	local01, fp
	sub	fp, #8
	rdlong	local01, fp
	sub	fp, #96
	cmps	local01, #0 wcz
 if_be	jmp	#LR__0695
	add	fp, #96
	rdlong	local01, fp
	sub	local01, #1
	wrlong	local01, fp
	sub	fp, #96
LR__0695
	add	fp, #100
	rdlong	local02, fp
	sub	fp, #100
	cmps	local02, #64 wcz
 if_a	jmp	#LR__0696
	add	fp, #100
	rdlong	local03, fp
	sub	fp, #100
	mov	local04, local03 wz
 if_ne	jmp	#LR__0697
LR__0696
	add	fp, #100
	wrlong	#64, fp
	sub	fp, #100
LR__0697
	add	fp, #104
	rdlong	local01, fp
	sub	fp, #104
	cmp	local01, #3 wz
 if_ne	jmp	#LR__0698
	add	fp, #104
	wrlong	#0, fp
	sub	fp, #104
	jmp	#LR__0700
LR__0698
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmps	local01, #0 wcz
 if_ae	jmp	#LR__0699
	add	fp, #104
	wrlong	#4, fp
	sub	fp, #92
	rdlong	local01, fp
	neg	local01, local01
	wrlong	local01, fp
	sub	fp, #12
LR__0699
LR__0700
	add	fp, #104
	rdlong	local01, fp wz
	sub	fp, #104
 if_e	jmp	#LR__0707
	add	fp, #92
	rdlong	local04, fp
	add	local04, #1
	wrlong	local04, fp
	add	fp, #4
	rdlong	local01, fp
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #100
	cmp	local01, local04 wz
 if_ne	jmp	#LR__0702
	add	fp, #96
	rdlong	local04, fp
	sub	local04, #1
	wrlong	local04, fp
	rdlong	local01, fp wz
	sub	fp, #96
 if_ne	jmp	#LR__0701
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	mov	arg03, #35
	call	#__system___fmtchar
	jmp	#LR__0712
LR__0701
LR__0702
	add	fp, #104
	rdlong	local01, fp
	sub	fp, #104
	cmp	local01, #2 wz
 if_ne	jmp	#LR__0703
	add	fp, #88
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #88
	wrbyte	#32, local01
	jmp	#LR__0706
LR__0703
	add	fp, #104
	rdlong	local01, fp
	sub	fp, #104
	cmp	local01, #4 wz
 if_ne	jmp	#LR__0704
	add	fp, #88
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #88
	wrbyte	#45, local01
	jmp	#LR__0705
LR__0704
	add	fp, #88
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #88
	wrbyte	#43, local01
LR__0705
LR__0706
LR__0707
	add	fp, #88
	rdlong	arg01, fp
	sub	fp, #76
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	add	fp, #80
	rdlong	arg04, fp
	mov	local05, #0
	sub	fp, #88
	rdlong	local06, fp
	sub	fp, #8
	testbn	local06, #29 wz
 if_ne	mov	local05, #1
	mov	arg05, local05
	call	#__system___uitoa
	mov	local07, result1
	add	fp, #92
	rdlong	local01, fp
	add	local01, local07
	wrlong	local01, fp
	add	fp, #8
	rdlong	local04, fp
	sub	fp, #100
	cmps	local01, local04 wcz
 if_be	jmp	#LR__0711
	loc	pa,	#(@LR__0709-@LR__0708)
	call	#FCACHE_LOAD_
LR__0708
	add	fp, #100
	rdlong	local01, fp
	mov	local04, local01
	sub	local04, #1
	wrlong	local04, fp
	sub	fp, #100
	cmps	local01, #0 wcz
 if_be	jmp	#LR__0710
	add	fp, #88
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #88
	wrbyte	#35, local01
	jmp	#LR__0708
LR__0709
LR__0710
	add	fp, #88
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #88
	wrbyte	#0, local01
LR__0711
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #12
	mov	arg03, fp
	sub	fp, #20
	call	#__system___fmtstr
LR__0712
	mov	ptra, fp
	call	#popregs_
__system___fmtnum_ret
	ret

__system___fmtfloat
	mov	COUNT_, #17
	call	#pushregs_
	add	ptra, #292
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #12
	wrlong	#10, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #4
	wrlong	#2, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #24
	wrlong	#0, fp
	add	fp, #104
	mov	local01, fp
	sub	fp, #8
	wrlong	local01, fp
	add	fp, #4
	wrlong	local01, fp
	sub	fp, #188
	rdlong	local02, fp
	shr	local02, #16
	and	local02, #63
	add	fp, #176
	wrlong	local02, fp
	sub	fp, #176
	rdlong	local02, fp
	shr	local02, #28
	and	local02, #1
	add	fp, #264
	wrlong	local02, fp
	sub	fp, #88
	rdlong	local02, fp wz
	sub	fp, #184
 if_ne	jmp	#LR__0714
	add	fp, #16
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #97 wz
 if_ne	jmp	#LR__0713
	add	fp, #184
	wrlong	#13, fp
	sub	fp, #132
	wrlong	#1, fp
	sub	fp, #52
	jmp	#LR__0715
LR__0713
	add	fp, #184
	wrlong	#6, fp
	sub	fp, #184
	jmp	#LR__0715
LR__0714
	add	fp, #184
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #184
LR__0715
	add	fp, #8
	rdlong	local02, fp
	shr	local02, #22
	and	local02, #3
	add	fp, #260
	wrlong	local02, fp
	sub	fp, #260
	rdlong	local02, fp
	shr	local02, #29
	and	local02, #1
	add	fp, #180
	wrlong	local02, fp
	sub	fp, #180
	rdlong	local02, fp
	shr	local02, #8
	and	local02, #255
	add	fp, #96
	wrlong	local02, fp
	sub	fp, #96
	rdlong	local02, fp
	and	local02, #255
	add	fp, #100
	wrlong	local02, fp
	mov	local02, #0
	sub	fp, #92
	rdlong	local01, fp
	cmp	local01, #101 wz
 if_e	mov	local02, #1
	add	fp, #20
	wrlong	local02, fp
	add	fp, #152
	rdlong	local01, fp wz
 if_ne	mov	local02, #69
 if_e	mov	local02, #101
	sub	fp, #140
	wrlong	local02, fp
	sub	fp, #32
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #97 wz
 if_ne	jmp	#LR__0716
	add	fp, #36
	wrlong	#1, fp
	add	fp, #152
	rdlong	local01, fp wz
 if_ne	mov	local02, #80
 if_e	mov	local02, #112
	sub	fp, #140
	wrlong	local02, fp
	sub	fp, #20
	wrlong	#2, fp
	add	fp, #28
	wrlong	#1, fp
	add	fp, #132
	rdlong	local01, fp wz
 if_ne	mov	local02, #88
 if_e	mov	local02, #120
	sub	fp, #124
	wrlong	local02, fp
	sub	fp, #64
LR__0716
	add	fp, #16
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #35 wz
 if_ne	jmp	#LR__0719
	add	fp, #72
	wrlong	#1, fp
	add	fp, #200
	rdlong	local02, fp wz
	sub	fp, #272
 if_e	jmp	#LR__0717
	add	fp, #16
	wrlong	#102, fp
	add	fp, #256
	wrlong	#0, fp
	sub	fp, #272
	jmp	#LR__0718
LR__0717
	add	fp, #272
	wrlong	#1, fp
	sub	fp, #272
LR__0718
LR__0719
	add	fp, #8
	rdlong	local02, fp
	shr	local02, #26
	and	local02, #3
	add	fp, #92
	wrlong	local02, fp
	sub	fp, #88
	rdlong	result1, fp
	sub	fp, #12
	shr	result1, #31 wz
 if_e	jmp	#LR__0720
	add	fp, #44
	wrlong	#45, fp
	sub	fp, #32
	rdlong	result1, fp
	bitnot	result1, #31
	wrlong	result1, fp
	sub	fp, #12
	jmp	#LR__0723
LR__0720
	add	fp, #100
	rdlong	local02, fp
	sub	fp, #100
	cmp	local02, #1 wz
 if_ne	jmp	#LR__0721
	add	fp, #44
	wrlong	#43, fp
	sub	fp, #44
	jmp	#LR__0722
LR__0721
	add	fp, #100
	rdlong	local02, fp
	sub	fp, #100
	cmp	local02, #2 wz
 if_e	add	fp, #44
 if_e	wrlong	#32, fp
 if_e	sub	fp, #44
LR__0722
LR__0723
	add	fp, #8
	rdlong	local02, fp
	shr	local02, #24
	and	local02, #3
	add	fp, #60
	wrlong	local02, fp
	mov	local02, #0
	sub	fp, #24
	rdlong	local03, fp
	sub	fp, #44
	mov	local01, local03 wz
 if_ne	jmp	#LR__0724
	add	fp, #28
	rdlong	local04, fp
	sub	fp, #28
	mov	local05, local04
	cmp	local05, #10 wz
 if_e	jmp	#LR__0725
LR__0724
	xor	local02, #1
LR__0725
	add	fp, #60
	wrlong	local02, fp
	rdlong	local02, fp wz
	sub	fp, #60
 if_e	jmp	#LR__0728
	add	fp, #68
	rdlong	local03, fp
	sub	fp, #68
	cmp	local03, #2 wz
 if_ne	jmp	#LR__0728
	add	fp, #268
	rdlong	local06, fp
	sub	fp, #268
	mov	local04, local06
	cmp	local04, #2 wz
 if_e	jmp	#LR__0728
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #148
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local06, fp
	sub	fp, #64
	mov	local04, local06
	mov	arg03, local04
	call	#__system__emitsign_0260
	mov	local07, result1
	add	fp, #276
	wrlong	local07, fp
	mov	local02, local07
	sub	fp, #276
	cmps	local02, #0 wcz
 if_ae	jmp	#LR__0726
	add	fp, #276
	rdlong	result1, fp
	sub	fp, #276
	jmp	#LR__0784
LR__0726
	add	fp, #192
	rdlong	local02, fp
	add	fp, #84
	rdlong	local05, fp
	mov	local03, local05
	add	local02, local05
	sub	fp, #84
	wrlong	local02, fp
	sub	fp, #88
	rdlong	local01, fp wz
	sub	fp, #104
 if_e	jmp	#LR__0727
	add	fp, #104
	rdlong	local02, fp
	add	fp, #172
	rdlong	local03, fp
	sub	local02, local03
	sub	fp, #172
	wrlong	local02, fp
	sub	fp, #104
	cmps	local02, #0 wcz
 if_b	add	fp, #104
 if_b	wrlong	#0, fp
 if_b	sub	fp, #104
	add	fp, #8
	rdlong	local01, fp
	bitl	local01, #232
	wrlong	local01, fp
	mov	local02, local01
	add	fp, #96
	rdlong	local05, fp
	mov	local03, local05
	shl	local03, #8
	or	local02, local03
	sub	fp, #96
	wrlong	local02, fp
	sub	fp, #8
LR__0727
	mov	local02, #0
	add	fp, #60
	wrlong	#0, fp
	sub	fp, #60
LR__0728
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	call	#__system____builtin_ilogb
	cmp	result1, ##2147483647 wz
 if_ne	jmp	#LR__0730
	add	fp, #44
	rdlong	local02, fp wz
	sub	fp, #44
 if_e	jmp	#LR__0729
	add	fp, #192
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #148
	rdlong	local04, fp
	sub	fp, #44
	wrbyte	local04, local02
LR__0729
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #192
	mov	arg02, ##@LR__0943
	call	#__system____builtin_strcpy
	jmp	#LR__0772
LR__0730
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	call	#__system____builtin_ilogb
	cmp	result1, ##-2147483648 wz
 if_ne	jmp	#LR__0732
	add	fp, #44
	rdlong	local02, fp wz
	sub	fp, #44
 if_e	jmp	#LR__0731
	add	fp, #192
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #148
	rdlong	local04, fp
	sub	fp, #44
	wrbyte	local04, local02
LR__0731
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #192
	mov	arg02, ##@LR__0944
	call	#__system____builtin_strcpy
	jmp	#LR__0772
LR__0732
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #103 wz
 if_e	jmp	#LR__0733
	add	fp, #16
	rdlong	local05, fp
	sub	fp, #16
	mov	local03, local05
	cmp	local03, #35 wz
 if_ne	jmp	#LR__0739
LR__0733
	add	fp, #12
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	local04, fp
	mov	arg03, local04
	add	fp, #152
	rdlong	arg04, fp
	sub	fp, #156
	rdlong	arg05, fp
	sub	fp, #28
	call	#__system__disassemble_0258
	add	fp, #16
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #35 wz
 if_ne	jmp	#LR__0736
	add	fp, #32
	rdlong	local02, fp
	add	fp, #152
	rdlong	local03, fp
	sub	fp, #184
	cmps	local02, local03 wcz
 if_be	jmp	#LR__0734
	add	fp, #36
	wrlong	#1, fp
	sub	fp, #36
	jmp	#LR__0742
LR__0734
	add	fp, #32
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #0 wcz
 if_ae	jmp	#LR__0735
	add	fp, #184
	rdlong	local02, fp
	neg	local02, local02
	sub	fp, #152
	rdlong	local03, fp
	sub	fp, #32
	cmps	local03, local02 wcz
 if_be	add	fp, #36
 if_be	wrlong	#1, fp
 if_be	sub	fp, #36
	jmp	#LR__0742
LR__0735
	add	fp, #32
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #0 wcz
 if_be	jmp	#LR__0742
	add	fp, #184
	rdlong	local02, fp
	sub	fp, #152
	rdlong	local03, fp
	sub	local02, local03
	add	fp, #152
	wrlong	local02, fp
	sub	fp, #184
	jmp	#LR__0742
LR__0736
	mov	local02, #0
	add	fp, #8
	rdlong	local01, fp
	shr	local01, #28
	test	local01, #1 wz
 if_e	mov	local02, #1
	add	fp, #44
	wrlong	local02, fp
	sub	fp, #20
	rdlong	local01, fp
	mov	local02, local01
	add	fp, #152
	rdlong	local05, fp
	sub	fp, #184
	cmps	local02, local05 wcz
 if_ae	jmp	#LR__0737
	add	fp, #32
	rdlong	local04, fp
	sub	fp, #32
	cmps	local04, ##-4 wcz
 if_ae	jmp	#LR__0738
LR__0737
	add	fp, #36
	wrlong	#1, fp
	sub	fp, #36
	jmp	#LR__0742
LR__0738
	add	fp, #184
	rdlong	local02, fp
	sub	fp, #152
	rdlong	local03, fp
	sub	local02, local03
	add	fp, #152
	wrlong	local02, fp
	sub	fp, #172
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	arg03, fp
	add	fp, #152
	rdlong	local07, fp
	neg	arg04, local07
	sub	fp, #156
	rdlong	local08, fp
	sub	fp, #28
	mov	arg05, local08
	call	#__system__disassemble_0258
	jmp	#LR__0742
LR__0739
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__0740
	add	fp, #12
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	arg03, fp
	add	fp, #152
	rdlong	arg04, fp
	sub	fp, #156
	rdlong	arg05, fp
	sub	fp, #28
	call	#__system__disassemble_0258
	jmp	#LR__0741
LR__0740
	add	fp, #12
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	arg03, fp
	add	fp, #152
	rdlong	local07, fp
	add	local07, #1
	neg	arg04, local07
	sub	fp, #156
	rdlong	local08, fp
	sub	fp, #28
	mov	arg05, local08
	call	#__system__disassemble_0258
LR__0741
LR__0742
	add	fp, #28
	rdlong	local02, fp
	sub	fp, #28
	cmp	local02, #2 wz
 if_ne	jmp	#LR__0745
	add	fp, #28
	wrlong	#16, fp
	sub	fp, #28
LR__0743
	add	fp, #20
	rdlong	local02, fp wz
	sub	fp, #20
 if_e	jmp	#LR__0744
	add	fp, #20
	rdlong	local03, fp
	sub	fp, #20
	cmp	local03, ##16777216 wcz
 if_ae	jmp	#LR__0744
	add	fp, #20
	rdlong	local02, fp
	shl	local02, #1
	wrlong	local02, fp
	sub	fp, #20
	jmp	#LR__0743
LR__0744
LR__0745
	add	fp, #112
	mov	arg01, fp
	sub	fp, #92
	rdlong	arg02, fp
	add	fp, #8
	rdlong	arg03, fp
	add	fp, #160
	rdlong	arg05, fp
	sub	fp, #188
	mov	arg04, #1
	call	#__system___uitoa
	add	fp, #88
	wrlong	result1, fp
	sub	fp, #56
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #0 wcz
 if_ae	jmp	#LR__0746
	add	fp, #96
	wrlong	#45, fp
	add	fp, #80
	mov	arg01, fp
	sub	fp, #144
	rdlong	local03, fp
	neg	local04, local03
	mov	local06, #10
	add	fp, #24
	rdlong	local09, fp
	mov	local07, local09
	add	fp, #132
	rdlong	local10, fp
	sub	fp, #188
	mov	local11, local10
	mov	arg02, local04
	mov	arg03, #10
	mov	arg04, local07
	mov	arg05, local11
	call	#__system___uitoa
	mov	local08, result1
	add	fp, #92
	wrlong	local08, fp
	sub	fp, #92
	jmp	#LR__0747
LR__0746
	add	fp, #96
	wrlong	#43, fp
	add	fp, #80
	mov	arg01, fp
	sub	fp, #144
	rdlong	arg02, fp
	add	fp, #24
	rdlong	local07, fp
	mov	local06, local07
	add	fp, #132
	rdlong	local11, fp
	sub	fp, #188
	mov	local09, local11
	mov	arg03, #10
	mov	arg04, local06
	mov	arg05, local09
	call	#__system___uitoa
	mov	local10, result1
	add	fp, #92
	wrlong	local10, fp
	sub	fp, #92
LR__0747
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__0748
	add	fp, #80
	wrlong	#0, fp
	sub	fp, #4
	wrlong	#0, fp
	add	fp, #108
	rdlong	local02, fp
	add	local02, #1
	sub	fp, #100
	wrlong	local02, fp
	sub	fp, #84
	jmp	#LR__0751
LR__0748
	add	fp, #32
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #0 wcz
 if_ae	jmp	#LR__0749
	add	fp, #32
	rdlong	local01, fp
	add	fp, #48
	wrlong	local01, fp
	sub	fp, #4
	wrlong	local01, fp
	sub	fp, #44
	rdlong	local02, fp
	add	fp, #152
	rdlong	local03, fp
	add	local02, local03
	add	local02, #1
	sub	fp, #100
	wrlong	local02, fp
	sub	fp, #84
	jmp	#LR__0750
LR__0749
	add	fp, #76
	wrlong	#0, fp
	sub	fp, #44
	rdlong	local02, fp
	add	fp, #48
	wrlong	local02, fp
	add	fp, #104
	rdlong	local03, fp
	add	local02, local03
	add	local02, #1
	sub	fp, #100
	wrlong	local02, fp
	sub	fp, #84
LR__0750
LR__0751
	add	fp, #84
	rdlong	local02, fp
	sub	fp, #8
	rdlong	local03, fp
	sub	local02, local03
	add	local02, #1
	sub	fp, #36
	wrlong	local02, fp
	add	fp, #4
	rdlong	local02, fp wz
	sub	fp, #44
 if_e	jmp	#LR__0752
	add	fp, #40
	rdlong	local03, fp
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #40
LR__0752
	add	fp, #28
	rdlong	local02, fp
	sub	fp, #28
	cmp	local02, #16 wz
 if_ne	jmp	#LR__0753
	add	fp, #40
	rdlong	local02, fp
	add	local02, #2
	wrlong	local02, fp
	sub	fp, #40
LR__0753
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__0754
	add	fp, #40
	rdlong	local02, fp
	mov	local03, #2
	add	fp, #52
	rdlong	local05, fp
	add	local03, local05
	add	local02, local03
	sub	fp, #52
	wrlong	local02, fp
	sub	fp, #40
LR__0754
	add	fp, #40
	rdlong	local02, fp
	sub	fp, #40
	cmps	local02, #64 wcz
 if_a	neg	result1, #1
 if_a	jmp	#LR__0784
	add	fp, #60
	rdlong	local02, fp wz
	sub	fp, #60
 if_e	jmp	#LR__0756
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #148
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local06, fp
	sub	fp, #64
	mov	arg03, local06
	call	#__system__emitsign_0260
	mov	local07, result1
	add	fp, #280
	wrlong	local07, fp
	mov	local02, local07
	sub	fp, #280
	cmps	local02, #0 wcz
 if_ae	jmp	#LR__0755
	add	fp, #280
	rdlong	result1, fp
	sub	fp, #280
	jmp	#LR__0784
LR__0755
	add	fp, #192
	rdlong	local02, fp
	add	fp, #88
	rdlong	local03, fp
	add	local02, local03
	sub	fp, #88
	wrlong	local02, fp
	sub	fp, #192
LR__0756
	add	fp, #76
	rdlong	local02, fp
	sub	fp, #52
	wrlong	local02, fp
	sub	fp, #24
	loc	pa,	#(@LR__0762-@LR__0757)
	call	#FCACHE_LOAD_
LR__0757
	add	fp, #24
	rdlong	local03, fp
	mov	local01, local03
	add	fp, #60
	rdlong	local04, fp
	sub	fp, #84
	mov	local05, local04
	cmps	local01, local05 wcz
 if_ae	jmp	#LR__0763
	add	fp, #24
	rdlong	local06, fp
	sub	fp, #24
	cmps	local06, #0 wcz
 if_b	jmp	#LR__0758
	add	fp, #24
	rdlong	local09, fp
	add	fp, #64
	rdlong	local08, fp
	sub	fp, #88
	cmps	local09, local08 wcz
 if_ae	jmp	#LR__0758
	add	fp, #192
	rdlong	local06, fp
	mov	local09, local06
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #168
	rdlong	local08, fp
	mov	local10, local08
	add	fp, #88
	mov	local12, fp
	add	local10, fp
	rdbyte	local13, local10
	wrbyte	local13, local06
	sub	fp, #112
	jmp	#LR__0759
LR__0758
	add	fp, #192
	rdlong	local06, fp
	mov	local09, local06
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #192
	mov	local10, #48
	wrbyte	#48, local06
LR__0759
	add	fp, #24
	rdlong	local06, fp
	add	fp, #56
	rdlong	local09, fp
	sub	fp, #80
	cmp	local06, local09 wz
 if_ne	jmp	#LR__0761
	add	fp, #272
	rdlong	local08, fp
	sub	fp, #272
	mov	local10, local08 wz
 if_ne	jmp	#LR__0760
	add	fp, #84
	rdlong	local13, fp
	mov	local12, local13
	sub	local12, #1
	sub	fp, #60
	rdlong	local14, fp
	sub	fp, #24
	mov	local15, local14
	cmps	local15, local12 wcz
 if_ae	jmp	#LR__0761
LR__0760
	add	fp, #192
	rdlong	local07, fp
	mov	local06, local07
	mov	local11, local07
	mov	local09, local11
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #192
	mov	local10, #46
	wrbyte	#46, local06
LR__0761
	add	fp, #24
	rdlong	local07, fp
	mov	local06, local07
	mov	local11, local07
	mov	local09, local11
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #24
	jmp	#LR__0757
LR__0762
LR__0763
	add	fp, #52
	rdlong	local02, fp wz
	sub	fp, #52
 if_e	jmp	#LR__0768
	add	fp, #192
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #192
	loc	pa,	#(@LR__0765-@LR__0764)
	call	#FCACHE_LOAD_
LR__0764
	add	fp, #192
	rdlong	local02, fp
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #196
	cmps	local02, local03 wcz
 if_be	jmp	#LR__0766
	add	fp, #192
	rdlong	local07, fp
	sub	fp, #192
	mov	local06, local07
	rdbyte	local04, local06
	cmp	local04, #48 wz
 if_ne	jmp	#LR__0766
	add	fp, #192
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #192
	jmp	#LR__0764
LR__0765
LR__0766
	add	fp, #192
	rdlong	local01, fp
	sub	fp, #192
	rdbyte	local02, local01
	cmp	local02, #46 wz
 if_ne	jmp	#LR__0767
	add	fp, #192
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #192
LR__0767
	add	fp, #192
	rdlong	local05, fp
	mov	local03, local05
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #192
LR__0768
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__0771
	add	fp, #192
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #144
	rdlong	local04, fp
	wrbyte	local04, local02
	add	fp, #144
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #96
	rdlong	local04, fp
	wrbyte	local04, local02
	sub	fp, #72
	wrlong	#0, fp
	sub	fp, #24
LR__0769
	add	fp, #24
	rdlong	local01, fp
	add	fp, #68
	rdlong	local04, fp
	sub	fp, #92
	mov	local05, local04
	cmps	local01, local05 wcz
 if_ae	jmp	#LR__0770
	add	fp, #192
	rdlong	local06, fp
	mov	local09, local06
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #168
	rdlong	local08, fp
	mov	local10, local08
	add	fp, #152
	mov	local12, fp
	add	local10, fp
	rdbyte	local13, local10
	wrbyte	local13, local06
	sub	fp, #152
	rdlong	local07, fp
	mov	local06, local07
	mov	local11, local07
	mov	local09, local11
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #24
	jmp	#LR__0769
LR__0770
LR__0771
	add	fp, #192
	rdlong	local01, fp
	sub	fp, #192
	mov	local02, local01
	mov	local03, #0
	wrbyte	#0, local02
LR__0772
	add	fp, #108
	rdlong	local02, fp wz
	sub	fp, #108
 if_e	jmp	#LR__0783
	add	fp, #72
	rdlong	local03, fp wz
	sub	fp, #72
 if_e	jmp	#LR__0783
	add	fp, #196
	rdlong	local06, fp
	sub	fp, #196
	mov	arg01, local06
	mov	local16, #0
	loc	pa,	#(@LR__0774-@LR__0773)
	call	#FCACHE_LOAD_
LR__0773
	rdbyte	local17, arg01 wz
 if_ne	add	local16, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0773
LR__0774
	mov	result1, local16
	mov	local07, result1
	add	fp, #108
	rdlong	local11, fp
	sub	fp, #108
	mov	local09, local11
	cmps	local07, local09 wcz
 if_be	jmp	#LR__0783
	add	fp, #196
	rdlong	local02, fp
	add	fp, #92
	wrlong	local02, fp
	sub	fp, #252
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__0775
	add	fp, #184
	wrlong	#0, fp
	sub	fp, #76
	rdlong	local02, fp
	add	fp, #176
	wrlong	local02, fp
	sub	fp, #284
	jmp	#LR__0776
LR__0775
	add	fp, #108
	rdlong	local02, fp
	sub	local02, #1
	add	fp, #76
	rdlong	local03, fp
	sub	local02, local03
	add	fp, #100
	wrlong	local02, fp
	sub	fp, #284
LR__0776
	loc	pa,	#(@LR__0778-@LR__0777)
	call	#FCACHE_LOAD_
LR__0777
	add	fp, #284
	rdlong	local02, fp wz
	sub	fp, #284
 if_e	jmp	#LR__0779
	add	fp, #288
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	wrbyte	#42, local02
	sub	fp, #4
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #284
	jmp	#LR__0777
LR__0778
LR__0779
	add	fp, #184
	rdlong	local02, fp wz
	sub	fp, #184
 if_e	jmp	#LR__0782
	add	fp, #288
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	wrbyte	#46, local02
	sub	fp, #4
	wrlong	#0, fp
	sub	fp, #284
LR__0780
	add	fp, #284
	rdlong	local01, fp
	sub	fp, #100
	rdlong	local05, fp
	sub	fp, #184
	cmps	local01, local05 wcz
 if_ae	jmp	#LR__0781
	add	fp, #288
	rdlong	local06, fp
	mov	local09, local06
	add	local09, #1
	wrlong	local09, fp
	mov	local10, #42
	wrbyte	#42, local06
	sub	fp, #4
	rdlong	local07, fp
	mov	local06, local07
	mov	local11, local07
	mov	local09, local11
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #284
	jmp	#LR__0780
LR__0781
LR__0782
	add	fp, #288
	rdlong	local01, fp
	mov	local02, local01
	mov	local05, local01
	mov	local03, local05
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #288
	mov	local04, #0
	wrbyte	#0, local02
LR__0783
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #188
	rdlong	arg03, fp
	sub	fp, #196
	call	#__system___fmtstr
LR__0784
	mov	ptra, fp
	call	#popregs_
__system___fmtfloat_ret
	ret

__system___float_fromuns
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01 wz
 if_e	mov	result1, local01
 if_e	jmp	#LR__0785
	mov	arg02, local01
	encod	arg02, arg02 wc
 if_b	add	arg02, #1
	sub	arg02, #1
	mov	local02, #31
	sub	local02, arg02
	shl	local01, local02
	shr	local01, #2
	mov	arg01, #0
	mov	arg03, local01
	call	#__system___float_Pack
LR__0785
	mov	ptra, fp
	call	#popregs_
__system___float_fromuns_ret
	ret

__system___float_fromint
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	cmps	local01, #0 wcz
 if_b	neg	local01, local01
 if_b	mov	local02, #1
 if_ae	mov	local02, #0
	mov	arg01, local01
	call	#__system___float_fromuns
	cmp	local02, #0 wz
 if_ne	bitnot	result1, #31
	mov	ptra, fp
	call	#popregs_
__system___float_fromint_ret
	ret

__system___float_mul
	mov	COUNT_, #13
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, local01
	mov	local04, local03
	zerox	local04, #22
	mov	local05, local03
	shl	local05, #1
	shr	local05, #24
	shr	local03, #31
	mov	arg01, local02
	mov	result1, arg01
	mov	local06, result1
	mov	local07, local06
	mov	local08, local07
	zerox	local08, #22
	mov	local09, local07
	shl	local09, #1
	shr	local09, #24
	mov	local10, local09
	shr	local07, #31
	mov	local11, #0
	xor	local03, local07
	cmp	local05, #255 wz
 if_e	jmp	#LR__0789
	cmp	local10, #255 wz
 if_e	jmp	#LR__0792
	cmp	local05, #0 wz
 if_e	jmp	#LR__0794
	bith	local04, #23
LR__0786
	cmp	local10, #0 wz
 if_e	jmp	#LR__0798
	bith	local08, #23
LR__0787
	add	local05, local10
	sub	local05, #254
	mov	local12, local05
	mov	local09, local04
	shl	local09, #4
	mov	local06, local08
	shl	local06, #5
	qmul	local09, local06
	getqx	local11
	shl	local04, #4
	shl	local08, #5
	qmul	local04, local08
	getqy	local13
	cmp	local13, ##16777216 wcz
 if_b	jmp	#LR__0788
	add	local12, #1
	shr	local11, #1
	mov	local06, local13
	shl	local06, #31
	or	local11, local06
	shr	local13, #1
LR__0788
	mov	arg01, local13
	mov	arg02, local11
	mov	arg03, local12
	mov	arg04, local03
	call	#__system__pack_0892
	jmp	#LR__0802
LR__0789
	cmp	local04, #0 wz
 if_ne	mov	result1, local01
 if_ne	jmp	#LR__0802
	cmps	local10, #255 wcz
 if_ae	jmp	#LR__0790
	cmp	local10, #0 wz
 if_ne	jmp	#LR__0791
	cmp	local08, #0 wz
 if_ne	jmp	#LR__0791
	mov	result1, ##2146435072
	jmp	#LR__0802
LR__0790
	cmp	local08, #0 wz
 if_ne	mov	result1, local02
 if_ne	jmp	#LR__0802
LR__0791
	or	local03, #2
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, local05
	mov	arg04, local03
	call	#__system__pack_0892
	jmp	#LR__0802
LR__0792
	cmp	local05, #0 wz
 if_ne	jmp	#LR__0793
	cmp	local04, #0 wz
 if_e	mov	result1, ##2146435072
 if_e	jmp	#LR__0802
LR__0793
	cmp	local08, #0 wz
 if_ne	mov	result1, local02
 if_ne	jmp	#LR__0802
	mov	arg03, local10
	mov	arg04, local03
	or	arg04, #2
	mov	arg01, #0
	mov	arg02, #0
	call	#__system__pack_0892
	jmp	#LR__0802
LR__0794
	cmp	local04, #0 wz
 if_e	jmp	#LR__0797
	shl	local04, #1
	loc	pa,	#(@LR__0796-@LR__0795)
	call	#FCACHE_LOAD_
LR__0795
	cmp	local04, ##8388608 wcz
 if_b	sub	local05, #1
 if_b	shl	local04, #1
 if_b	jmp	#LR__0795
LR__0796
	jmp	#LR__0786
LR__0797
	or	local03, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	mov	arg04, local03
	call	#__system__pack_0892
	jmp	#LR__0802
LR__0798
	cmp	local08, #0 wz
 if_e	jmp	#LR__0801
	shl	local08, #1
	loc	pa,	#(@LR__0800-@LR__0799)
	call	#FCACHE_LOAD_
LR__0799
	cmp	local08, ##8388608 wcz
 if_b	sub	local10, #1
 if_b	shl	local08, #1
 if_b	jmp	#LR__0799
LR__0800
	jmp	#LR__0787
LR__0801
	mov	arg04, local03
	or	arg04, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0892
LR__0802
	mov	ptra, fp
	call	#popregs_
__system___float_mul_ret
	ret

__system___float_div
	mov	COUNT_, #15
	call	#pushregs_
	mov	local03, arg01
	mov	local04, arg02
	mov	local05, local03
	mov	local06, local05
	zerox	local06, #22
	mov	local07, local05
	shl	local07, #1
	shr	local07, #24
	shr	local05, #31
	mov	result1, local04
	mov	local08, result1
	mov	local09, local08
	zerox	local09, #22
	mov	local10, local08
	shl	local10, #1
	shr	local10, #24
	shr	local08, #31
	xor	local05, local08
	cmp	local07, #255 wz
 if_e	jmp	#LR__0808
	cmp	local10, #255 wz
 if_e	jmp	#LR__0809
	cmp	local07, #0 wz
 if_e	jmp	#LR__0810
	bith	local06, #23
LR__0803
	cmp	local10, #0 wz
 if_e	jmp	#LR__0815
	bith	local09, #23
LR__0804
	sub	local07, local10
	mov	local11, local07
	mov	arg01, local06
	shr	arg01, #2
	shl	local06, #30
	mov	arg02, local06
	mov	arg03, local09
	setq	arg01
	qdiv	arg02, arg03
	getqx	result1
	getqy	result2
	mov	local01, result1
	mov	local02, result2
	mov	local12, local01
	mov	local13, local02 wz
	mov	local14, local12
	shl	local14, #25
	mov	local15, #0
 if_ne	mov	local15, #1
	or	local14, local15
	shr	local12, #7
	cmp	local12, ##16777216 wcz
 if_b	jmp	#LR__0805
	add	local11, #1
	shr	local14, #1
	mov	local15, local12
	shl	local15, #31
	or	local14, local15
	shr	local12, #1
	jmp	#LR__0807
LR__0805
	cmp	local12, ##8388608 wcz
 if_ae	jmp	#LR__0806
	sub	local11, #1
	shl	local12, #1
	mov	local15, local14
	shr	local15, #31
	or	local12, local15
	shl	local14, #1
LR__0806
LR__0807
	mov	arg01, local12
	mov	arg02, local14
	mov	arg03, local11
	mov	arg04, local05
	call	#__system__pack_0892
	jmp	#LR__0819
LR__0808
	cmp	local06, #0 wz
 if_ne	mov	result1, local03
 if_ne	jmp	#LR__0819
	cmp	local10, #255 wz
 if_e	mov	result1, ##2146435072
 if_e	jmp	#LR__0819
	or	local05, #2
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, local07
	mov	arg04, local05
	call	#__system__pack_0892
	jmp	#LR__0819
LR__0809
	cmp	local09, #0 wz
 if_ne	mov	result1, local04
 if_ne	jmp	#LR__0819
	mov	arg04, local05
	or	arg04, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0892
	jmp	#LR__0819
LR__0810
	cmp	local06, #0 wz
 if_e	jmp	#LR__0813
	shl	local06, #1
	loc	pa,	#(@LR__0812-@LR__0811)
	call	#FCACHE_LOAD_
LR__0811
	cmp	local06, ##8388608 wcz
 if_b	sub	local07, #1
 if_b	shl	local06, #1
 if_b	jmp	#LR__0811
LR__0812
	jmp	#LR__0803
LR__0813
	cmp	local10, #0 wz
 if_ne	jmp	#LR__0814
	cmp	local09, #0 wz
 if_e	mov	result1, ##2146435072
 if_e	jmp	#LR__0819
LR__0814
	mov	arg04, local05
	or	arg04, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0892
	jmp	#LR__0819
LR__0815
	cmp	local09, #0 wz
 if_e	jmp	#LR__0818
	shl	local09, #1
	loc	pa,	#(@LR__0817-@LR__0816)
	call	#FCACHE_LOAD_
LR__0816
	cmp	local09, ##8388608 wcz
 if_b	sub	local10, #1
 if_b	shl	local09, #1
 if_b	jmp	#LR__0816
LR__0817
	jmp	#LR__0804
LR__0818
	mov	arg04, local05
	or	arg04, #2
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0892
LR__0819
	mov	ptra, fp
	call	#popregs_
__system___float_div_ret
	ret

__system___float_cmp
	mov	_var01, arg01
	cmps	_var01, ##2139095040 wcz
 if_a	jmp	#LR__0820
	cmps	arg02, ##2139095040 wcz
 if_be	jmp	#LR__0821
LR__0820
	mov	result1, arg03
	jmp	#__system___float_cmp_ret
LR__0821
	cmp	_var01, ##-8388608 wcz
 if_a	jmp	#LR__0822
	cmp	_var01, ##-8388608 wcz
 if_be	jmp	#LR__0823
LR__0822
	mov	result1, arg03
	jmp	#__system___float_cmp_ret
LR__0823
	cmps	_var01, #0 wcz
 if_ae	jmp	#LR__0825
	cmps	arg02, #0 wcz
 if_b	mov	result1, arg02
 if_b	sub	result1, _var01
 if_b	jmp	#__system___float_cmp_ret
	cmp	arg02, #0 wz
 if_ne	jmp	#LR__0824
	cmp	_var01, ##-2147483648 wz
 if_e	mov	result1, #0
 if_e	jmp	#__system___float_cmp_ret
LR__0824
	neg	result1, #1
	jmp	#__system___float_cmp_ret
LR__0825
	cmps	arg02, #0 wcz
 if_ae	jmp	#LR__0827
	cmp	_var01, #0 wz
 if_ne	jmp	#LR__0826
	cmp	arg02, ##-2147483648 wz
 if_e	mov	result1, #0
 if_e	jmp	#__system___float_cmp_ret
LR__0826
	mov	result1, #1
	jmp	#__system___float_cmp_ret
LR__0827
	sub	_var01, arg02
	mov	result1, _var01
__system___float_cmp_ret
	ret

__system___float_Unpack
	mov	_var01, arg01
	shr	_var01, #31
	mov	_var02, arg01
	shl	_var02, #1
	shr	_var02, #24 wz
	and	arg01, ##8388607
 if_ne	shl	arg01, #6
 if_ne	bith	arg01, #29
 if_ne	jmp	#LR__0828
	mov	_var03, arg01
	encod	_var03, _var03 wc
 if_b	add	_var03, #1
	sub	_var03, #23
	mov	_var02, _var03
	mov	_var04, #7
	sub	_var04, _var03
	shl	arg01, _var04
LR__0828
	sub	_var02, #127
	mov	result3, arg01
	mov	result1, _var01
	mov	result2, _var02
__system___float_Unpack_ret
	ret

__system___float_Pack
	mov	_var01, #0
	cmp	arg03, #0 wz
 if_e	jmp	#LR__0830
	mov	_var02, arg03
	encod	_var02, _var02 wc
 if_b	add	_var02, #1
	mov	_var01, #33
	sub	_var01, _var02
	shl	arg03, _var01
	mov	_var02, #3
	sub	_var02, _var01
	add	arg02, _var02
	mov	_var03, arg02
	add	arg03, #256
	mov	_var04, arg03
	andn	_var04, #255 wz
 if_e	add	_var03, #1
	add	_var03, #127
	fges	_var03, ##-23
	fles	_var03, #255
	cmps	_var03, #1 wcz
 if_ae	jmp	#LR__0829
	shr	arg03, #1
	decod	_var04, #31
	add	_var04, arg03
	neg	_var03, _var03
	shr	_var04, _var03
	mov	arg03, _var04
	mov	_var03, #0
LR__0829
	mov	result1, arg01
	shl	result1, #31
	mov	_var02, _var03
	shl	_var02, #23
	or	result1, _var02
	mov	_var05, arg03
	shr	_var05, #9
	or	result1, _var05
	jmp	#__system___float_Pack_ret
LR__0830
	mov	result1, _var01
__system___float_Pack_ret
	ret

__system____builtin_ilogb
	mov	COUNT_, #2
	call	#pushregs_
	call	#__system___float_Unpack
	mov	local01, result2
	mov	local02, result3 wz
 if_e	mov	result1, ##-2147483647
 if_e	jmp	#LR__0832
	cmp	local01, #128 wz
 if_ne	jmp	#LR__0831
	cmp	local02, ##536870912 wz
 if_e	bmask	result1, #30
 if_e	jmp	#LR__0832
	decod	result1, #31
	jmp	#LR__0832
LR__0831
	mov	result1, local01
LR__0832
	mov	ptra, fp
	call	#popregs_
__system____builtin_ilogb_ret
	ret

__system___float_pow_n
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	cmps	local03, #0 wcz
 if_ae	jmp	#LR__0833
	mov	local04, #1
	neg	local03, local03
	cmps	local03, #0 wcz
 if_b	mov	result1, #0
 if_b	jmp	#LR__0841
	jmp	#LR__0834
LR__0833
	mov	local04, #0
LR__0834
	mov	local05, ##1065353216
LR__0835
	cmps	local03, #0 wcz
 if_be	jmp	#LR__0837
	test	local03, #1 wz
 if_e	jmp	#LR__0836
	mov	arg01, local05
	mov	arg02, local02
	call	#__system___float_mul
	mov	local05, result1
LR__0836
	sar	local03, #1
	mov	arg01, local02
	mov	arg02, local02
	call	#__system___float_mul
	mov	local02, result1
	jmp	#LR__0835
LR__0837
	cmp	local04, #0 wz
 if_e	jmp	#LR__0838
	mov	arg01, local01
	mov	arg02, local05
	call	#__system___float_div
	mov	local05, result1
	jmp	#LR__0840
LR__0838
	mov	arg01, local01
	mov	arg02, ##1065353216
	mov	arg03, #1
	call	#__system___float_cmp
	cmp	result1, #0 wz
 if_e	jmp	#LR__0839
	mov	arg01, local01
	mov	arg02, local05
	call	#__system___float_mul
	mov	local05, result1
LR__0839
LR__0840
	mov	result1, local05
LR__0841
	mov	ptra, fp
	call	#popregs_
__system___float_pow_n_ret
	ret

__system___gc_ptrs
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, __heap_ptr
	mov	local02, local01
	add	local02, ##15992
	rdlong	local03, local01 wz
 if_ne	jmp	#LR__0842
	mov	local04, local02
	sub	local04, local01
	wrword	#1, local01
	mov	local03, local01
	add	local03, #2
	wrword	##27792, local03
	mov	local03, local01
	add	local03, #4
	wrword	#0, local03
	mov	local03, local01
	add	local03, #6
	wrword	#1, local03
	add	local01, #16
	abs	local03, local04 wc
	shr	local03, #4
 if_b	neg	local03, local03
	wrword	local03, local01
	mov	local03, local01
	add	local03, #2
	wrword	##27791, local03
	mov	local03, local01
	add	local03, #4
	wrword	#0, local03
	mov	local03, local01
	add	local03, #6
	wrword	#0, local03
	sub	local01, #16
LR__0842
	mov	result2, local02
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
__system___gc_ptrs_ret
	ret

__system___gc_nextBlockPtr
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	rdword	local02, local01 wz
 if_ne	jmp	#LR__0843
	mov	arg01, ##@LR__0945
	call	#__system___gc_errmsg
	jmp	#LR__0844
LR__0843
	mov	result1, local01
	shl	local02, #4
	add	result1, local02
LR__0844
	mov	ptra, fp
	call	#popregs_
__system___gc_nextBlockPtr_ret
	ret

__system___gc_tryalloc
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	call	#__system___gc_ptrs
	mov	local03, result1
	mov	local04, result2
	mov	local05, local03
	mov	local06, #0
	loc	pa,	#(@LR__0846-@LR__0845)
	call	#FCACHE_LOAD_
LR__0845
	mov	local07, local05
	mov	local08, local03
	mov	local09, local05
	add	local09, #6
	rdword	local10, local09
	mov	arg01, local08
	mov	arg02, local10 wz
 if_e	mov	result1, #0
 if_ne	shl	arg02, #4
 if_ne	add	arg01, arg02
 if_ne	mov	result1, arg01
	mov	local11, result1
	mov	local05, local11 wz
 if_ne	mov	local08, local05
 if_ne	rdword	local06, local08
	cmp	local05, #0 wz
 if_e	jmp	#LR__0847
	cmps	local05, local04 wcz
 if_ae	jmp	#LR__0847
	cmps	local01, local06 wcz
 if_a	jmp	#LR__0845
LR__0846
LR__0847
	cmp	local05, #0 wz
 if_e	mov	result1, local05
 if_e	jmp	#LR__0850
	mov	local08, local05
	add	local08, #6
	rdword	local12, local08
	cmps	local01, local06 wcz
 if_ae	jmp	#LR__0849
	wrword	local01, local05
	mov	arg01, local05
	mov	local09, local01
	shl	local09, #4
	add	arg01, local09
	mov	local08, local06
	sub	local08, local01
	wrword	local08, arg01
	mov	local08, arg01
	add	local08, #2
	wrword	##27791, local08
	mov	arg02, local05 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local11, arg01
	add	local11, #4
	wrword	result1, local11
	mov	local08, local05
	add	local08, #6
	mov	local09, arg01
	rdword	local10, local08
	add	local09, #6
	wrword	local10, local09
	mov	local13, arg01
	mov	arg02, local13 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local12, result1
	call	#__system___gc_nextBlockPtr
	mov	local14, result1 wz
 if_e	jmp	#LR__0848
	cmps	local14, local04 wcz
 if_ae	jmp	#LR__0848
	mov	local08, local03
	mov	local09, local13
	mov	arg01, local08
	mov	arg02, local09 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, arg01
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local10, result1
	mov	local11, local14
	add	local11, #4
	wrword	local10, local11
LR__0848
LR__0849
	add	local07, #6
	wrword	local12, local07
	mov	local08, ##27776
	or	local08, local02
	cogid	result1
	or	local08, result1
	mov	local10, local05
	add	local10, #2
	wrword	local08, local10
	mov	local08, local03
	add	local08, #8
	mov	local09, local05
	rdword	local10, local08
	add	local09, #6
	wrword	local10, local09
	mov	arg02, local05 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	add	local03, #8
	wrword	result1, local03
	add	local05, #8
	mov	result1, local05
	or	result1, ##1669332992
LR__0850
	mov	ptra, fp
	call	#popregs_
__system___gc_tryalloc_ret
	ret

__system___gc_errmsg
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
LR__0851
	rdbyte	local02, local01 wz
	add	local01, #1
 if_e	jmp	#LR__0852
	mov	arg01, local02
	call	#__system___tx
	jmp	#LR__0851
LR__0852
	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
__system___gc_errmsg_ret
	ret

__system___gc_alloc_managed
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	arg02, #0
	call	#__system___gc_doalloc
	mov	local02, result1 wz
 if_ne	jmp	#LR__0853
	cmps	local01, #0 wcz
 if_be	jmp	#LR__0853
	mov	arg01, ##@LR__0946
	call	#__system___gc_errmsg
	jmp	#LR__0854
LR__0853
	mov	result1, local02
LR__0854
	mov	ptra, fp
	call	#popregs_
__system___gc_alloc_managed_ret
	ret

__system___gc_doalloc
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01 wz
	mov	local02, arg02
 if_e	mov	result1, #0
 if_e	jmp	#LR__0862
	add	local01, #23
	andn	local01, #15
	shr	local01, #4
	add	ptr___system__dat__, #12
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #12
	call	#__system___lockmem
	mov	arg01, local01
	mov	arg02, local02
	call	#__system___gc_tryalloc
	mov	local03, result1 wz
 if_ne	jmp	#LR__0855
	call	#__system___gc_docollect
	mov	arg01, local01
	mov	arg02, local02
	call	#__system___gc_tryalloc
	mov	local03, result1
LR__0855
	add	ptr___system__dat__, #12
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #12
	wrbyte	#0, arg01
	cmp	local03, #0 wz
 if_e	jmp	#LR__0861
	shl	local01, #4
	sub	local01, #8
	abs	local04, local01 wc
	shr	local04, #2
 if_b	neg	local04, local04
	mov	local05, local04 wz
	mov	local06, local03
 if_e	jmp	#LR__0860
	loc	pa,	#(@LR__0858-@LR__0856)
	call	#FCACHE_LOAD_
LR__0856
	rep	@LR__0859, local05
LR__0857
	wrlong	#0, local06
	add	local06, #4
LR__0858
LR__0859
LR__0860
LR__0861
	mov	result1, local03
LR__0862
	mov	ptra, fp
	call	#popregs_
__system___gc_doalloc_ret
	ret

__system___gc_isvalidptr
	mov	_var01, arg03
	mov	_var02, _var01
	and	_var02, ##-1048576
	cmp	_var02, ##1669332992 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#__system___gc_isvalidptr_ret
	sub	_var01, #8
	andn	_var01, ##-1048576
	cmps	_var01, arg01 wcz
 if_b	jmp	#LR__0863
	cmps	_var01, arg02 wcz
 if_b	jmp	#LR__0864
LR__0863
	mov	result1, #0
	jmp	#__system___gc_isvalidptr_ret
LR__0864
	mov	_var02, _var01
	xor	_var02, arg01
	and	_var02, #15 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#__system___gc_isvalidptr_ret
	mov	_var02, _var01
	add	_var02, #2
	rdword	_var02, _var02
	and	_var02, ##65472
	cmp	_var02, ##27776 wz
 if_ne	mov	result1, #0
 if_e	mov	result1, _var01
__system___gc_isvalidptr_ret
	ret

__system___gc_free
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	call	#__system___gc_ptrs
	mov	arg01, result1
	mov	arg02, result2
	mov	arg03, local01
	call	#__system___gc_isvalidptr
	mov	local01, result1 wz
 if_e	jmp	#LR__0865
	add	ptr___system__dat__, #12
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #12
	call	#__system___lockmem
	mov	arg01, local01
	call	#__system___gc_dofree
	add	ptr___system__dat__, #12
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #12
	wrbyte	#0, arg01
LR__0865
	mov	ptra, fp
	call	#popregs_
__system___gc_free_ret
	ret

__system___gc_dofree
	mov	COUNT_, #13
	call	#pushregs_
	mov	local01, arg01
	call	#__system___gc_ptrs
	mov	local02, result1
	mov	local03, result2
	mov	local04, local01
	add	local04, #2
	wrword	##27791, local04
	mov	local05, local01
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local06, result1
	loc	pa,	#(@LR__0867-@LR__0866)
	call	#FCACHE_LOAD_
LR__0866
	add	local05, #4
	rdword	arg02, local05 wz
	mov	arg01, local02
 if_e	mov	result1, #0
 if_ne	shl	arg02, #4
 if_ne	add	arg01, arg02
 if_ne	mov	result1, arg01
	mov	local05, result1 wz
 if_e	jmp	#LR__0868
	mov	arg01, local05
	mov	local07, #0
	add	arg01, #2
	rdword	local08, arg01
	cmp	local08, ##27791 wz
 if_e	neg	local07, #1
	mov	result1, local07
	mov	local09, result1 wz
 if_e	jmp	#LR__0866
LR__0867
LR__0868
	cmp	local05, #0 wz
 if_e	mov	local05, local02
	mov	local04, local05
	add	local04, #6
	mov	local09, local01
	rdword	local10, local04
	add	local09, #6
	wrword	local10, local09
	mov	arg02, local01 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local02
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local10, result1
	mov	local11, local05
	add	local11, #6
	wrword	local10, local11
	cmp	local05, local02 wz
 if_e	jmp	#LR__0871
	mov	arg01, local05
	call	#__system___gc_nextBlockPtr
	cmp	result1, local01 wz
 if_ne	jmp	#LR__0870
	rdword	local04, local05
	rdword	local11, local01
	add	local04, local11
	wrword	local04, local05
	mov	local04, local01
	add	local04, #2
	wrword	#0, local04
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local06, result1
	cmps	local06, local03 wcz
 if_ae	jmp	#LR__0869
	mov	arg02, local05 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local02
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local11, local06
	add	local11, #4
	wrword	result1, local11
LR__0869
	mov	local04, local01
	add	local04, #6
	mov	local09, local05
	rdword	local10, local04
	add	local09, #6
	wrword	local10, local09
	add	local01, #6
	wrword	#0, local01
	mov	local01, local05
LR__0870
LR__0871
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local12, result1 wz
 if_e	jmp	#LR__0873
	cmps	local12, local03 wcz
 if_ae	jmp	#LR__0873
	mov	arg01, local12
	mov	local07, #0
	add	arg01, #2
	rdword	local08, arg01
	cmp	local08, ##27791 wz
 if_e	neg	local07, #1
	mov	result1, local07 wz
 if_e	jmp	#LR__0873
	mov	local05, local01
	rdword	local04, local05
	mov	local01, local12
	rdword	local11, local01
	add	local04, local11
	mov	local13, local05
	wrword	local04, local13
	mov	local04, local01
	add	local04, #6
	mov	local09, local05
	rdword	local10, local04
	add	local09, #6
	wrword	local10, local09
	mov	local04, local01
	add	local04, #2
	wrword	#170, local04
	mov	local04, local01
	add	local04, #6
	wrword	#0, local04
	mov	local04, local01
	mov	arg01, local04
	call	#__system___gc_nextBlockPtr
	mov	local09, result1
	mov	local06, local09 wz
 if_e	jmp	#LR__0872
	cmps	local06, local03 wcz
 if_ae	jmp	#LR__0872
	mov	local04, local02
	mov	local09, local05
	mov	arg01, local04
	mov	arg02, local09 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, arg01
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local10, result1
	mov	local11, local06
	add	local11, #4
	wrword	local10, local11
LR__0872
LR__0873
	mov	result1, local06
	mov	ptra, fp
	call	#popregs_
__system___gc_dofree_ret
	ret

__system___gc_docollect
	mov	COUNT_, #9
	call	#pushregs_
	call	#__system___gc_ptrs
	mov	local01, result2
	mov	local02, result1
	mov	arg01, local02
	call	#__system___gc_nextBlockPtr
	mov	local03, result1 wz
	cogid	result1
	mov	local04, result1
 if_e	jmp	#LR__0875
LR__0874
	cmps	local03, local01 wcz
 if_ae	jmp	#LR__0875
	mov	local05, local03
	add	local05, #2
	rdword	local06, local05
	andn	local06, #32
	mov	local07, local03
	add	local07, #2
	wrword	local06, local07
	mov	arg01, local03
	call	#__system___gc_nextBlockPtr
	mov	local03, result1 wz
 if_ne	jmp	#LR__0874
LR__0875
	mov	local06, #0
	mov	arg01, #0
	call	#__system____topofstack
	mov	local07, result1
	mov	arg01, local06
	mov	arg02, local07
	call	#__system___gc_markhub
	call	#__system___gc_markcog
	mov	arg01, local02
	call	#__system___gc_nextBlockPtr
	mov	local08, result1 wz
 if_ne	jmp	#LR__0876
	mov	arg01, ##@LR__0947
	call	#__system___gc_errmsg
	jmp	#LR__0882
LR__0876
LR__0877
	mov	local03, local08
	mov	arg01, local03
	call	#__system___gc_nextBlockPtr
	mov	local08, result1
	mov	local06, local03
	add	local06, #2
	rdword	local09, local06
	test	local09, #32 wz
 if_ne	jmp	#LR__0880
	mov	local05, local09
	and	local05, #16 wz
 if_ne	jmp	#LR__0880
	mov	local06, local09
	and	local06, #15
	mov	local09, local06
	cmp	local09, local04 wz
 if_e	jmp	#LR__0878
	cmp	local09, #14 wz
 if_ne	jmp	#LR__0879
LR__0878
	mov	local06, local03
	mov	arg01, local06
	call	#__system___gc_dofree
	mov	local05, result1
	mov	local08, local05
LR__0879
LR__0880
	cmp	local08, #0 wz
 if_e	jmp	#LR__0881
	cmps	local08, local01 wcz
 if_b	jmp	#LR__0877
LR__0881
LR__0882
	mov	ptra, fp
	call	#popregs_
__system___gc_docollect_ret
	ret

__system___gc_markhub
	mov	COUNT_, #10
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	call	#__system___gc_ptrs
	mov	local03, result1
	mov	local04, result2
LR__0883
	cmps	local01, local02 wcz
 if_ae	jmp	#LR__0884
	rdlong	arg03, local01
	add	local01, #4
	mov	arg01, local03
	mov	arg02, local04
	call	#__system___gc_isvalidptr
	mov	local05, result1 wz
 if_e	jmp	#LR__0883
	mov	arg01, local05
	mov	local06, #0
	add	arg01, #2
	rdword	local07, arg01
	cmp	local07, ##27791 wz
 if_e	neg	local06, #1
	mov	result1, local06
	mov	local08, result1 wz
 if_ne	jmp	#LR__0883
	mov	local09, local05
	add	local09, #2
	rdword	local10, local09
	andn	local10, #15
	or	local10, #46
	mov	local09, local05
	add	local09, #2
	wrword	local10, local09
	jmp	#LR__0883
LR__0884
	mov	ptra, fp
	call	#popregs_
__system___gc_markhub_ret
	ret

__system___gc_markcog
	mov	COUNT_, #6
	call	#pushregs_
	call	#__system___gc_ptrs
	mov	local01, result1
	mov	local02, result2
	mov	local03, #0
LR__0885
	mov	local04, #496
	sub	local04, local03
	add	local04, #496
	'.live	local04
	alts	local04, #0
	mov	local05, local04
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local05
	call	#__system___gc_isvalidptr
	mov	local05, result1 wz
 if_e	jmp	#LR__0886
	mov	local06, local05
	add	local06, #2
	rdword	local04, local06
	or	local04, #32
	add	local05, #2
	wrword	local04, local05
LR__0886
	add	local03, #1
	cmps	local03, #496 wcz
 if_b	jmp	#LR__0885
	mov	ptra, fp
	call	#popregs_
__system___gc_markcog_ret
	ret

__system____default_getc
__system____default_getc_ret
	ret

__system____default_putc
__system____default_putc_ret
	ret

__system____default_putc_terminal
__system____default_putc_terminal_ret
	ret

__system____default_flush
__system____default_flush_ret
	ret

__system____getftab
	cmp	arg01, #10 wcz
 if_ae	mov	result1, #0
 if_ae	jmp	#__system____getftab_ret
	qmul	arg01, #44
	getqx	result1
	add	ptr___system__dat__, ##568
	add	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##568
__system____getftab_ret
	ret

__system__strncpy
	mov	_var01, arg01
LR__0887
	sub	arg03, #1
	cmps	arg03, #0 wcz
 if_b	jmp	#LR__0888
	rdbyte	_var02, arg02
	wrbyte	_var02, _var01
	add	arg02, #1
	rdbyte	_var03, _var01 wz
	add	_var01, #1
 if_ne	jmp	#LR__0887
LR__0888
	loc	pa,	#(@LR__0890-@LR__0889)
	call	#FCACHE_LOAD_
LR__0889
	sub	arg03, #1
	cmps	arg03, #0 wcz
 if_ae	wrbyte	#0, _var01
 if_ae	add	_var01, #1
 if_ae	jmp	#LR__0889
LR__0890
	mov	result1, arg01
__system__strncpy_ret
	ret

__system__strncat
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, arg03
	mov	_var04, _var02 wz
 if_e	jmp	#LR__0895
	cmp	_var03, #0 wcz
 if_be	jmp	#LR__0895
	mov	_var05, _var01
	loc	pa,	#(@LR__0893-@LR__0891)
	call	#FCACHE_LOAD_
LR__0891
	rdbyte	_var06, _var05 wz
 if_ne	add	_var05, #1
 if_ne	jmp	#LR__0891
	mov	_var07, _var03
LR__0892
	mov	_var08, _var04
	mov	_var09, _var04
	add	_var09, #1
	mov	_var04, _var09
	rdbyte	_var10, _var08
	mov	_var06, _var10
	zerox	_var06, #7 wz
 if_e	jmp	#LR__0894
	mov	_var11, _var07
	sub	_var11, #1
	mov	_var07, _var11
	cmps	_var07, #0 wcz
 if_ae	wrbyte	_var10, _var05
 if_ae	add	_var05, #1
 if_ae	jmp	#LR__0892
LR__0893
LR__0894
	mov	_var06, #0
	wrbyte	#0, _var05
LR__0895
	mov	result1, _var01
__system__strncat_ret
	ret

__system__strncmp
	mov	_var01, arg01 wz
	mov	_var02, arg02
	mov	_var03, arg03
 if_ne	jmp	#LR__0896
	cmp	_var02, #0 wz
 if_ne	neg	_var04, #1
 if_e	mov	_var04, #0
	mov	result1, _var04
	jmp	#__system__strncmp_ret
LR__0896
	cmp	_var02, #0 wz
 if_e	mov	result1, #1
 if_e	jmp	#__system__strncmp_ret
	mov	_var05, _var03
	loc	pa,	#(@LR__0898-@LR__0897)
	call	#FCACHE_LOAD_
LR__0897
	rdbyte	_var06, _var01
	mov	_var07, _var02
	mov	_var08, _var02
	add	_var08, #1
	mov	_var02, _var08
	rdbyte	_var09, _var07
	mov	_var04, _var05
	sub	_var04, #1
	mov	_var05, _var04
	cmps	_var05, #0 wcz
	add	_var01, #1
 if_b	jmp	#LR__0899
	cmp	_var06, #0 wz
 if_e	jmp	#LR__0899
	cmp	_var06, _var09 wz
 if_e	jmp	#LR__0897
LR__0898
LR__0899
	cmps	_var05, #0 wcz
 if_b	mov	result1, #0
 if_b	jmp	#__system__strncmp_ret
	cmp	_var06, _var09 wz
 if_e	mov	result1, #0
 if_e	jmp	#__system__strncmp_ret
	cmp	_var06, #0 wz
 if_e	neg	result1, #1
 if_e	jmp	#__system__strncmp_ret
	cmp	_var09, #0 wz
 if_e	mov	result1, #1
 if_ne	mov	result1, _var06
 if_ne	sub	result1, _var09
__system__strncmp_ret
	ret

__system___strrev
	rdbyte	_var01, arg01 wz
 if_e	jmp	#__system___strrev_ret
	mov	_var02, arg01
	loc	pa,	#(@LR__0901-@LR__0900)
	call	#FCACHE_LOAD_
LR__0900
	rdbyte	_var01, _var02 wz
 if_ne	add	_var02, #1
 if_ne	jmp	#LR__0900
LR__0901
	sub	_var02, #1
LR__0902
	cmps	_var02, arg01 wcz
 if_be	jmp	#LR__0903
	rdbyte	_var03, arg01
	rdbyte	_var04, _var02
	wrbyte	_var04, arg01
	wrbyte	_var03, _var02
	add	arg01, #1
	sub	_var02, #1
	jmp	#LR__0902
LR__0903
__system___strrev_ret
	ret

__system___fmtpad
	mov	COUNT_, #12
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg04
	getbyte	local04, local02, #1
	shr	local02, #22
	and	local02, #3 wz
	mov	local05, #0
 if_e	mov	local02, #1
	test	local02, local03 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0907
	sub	local04, arg03
	mov	local06, local04
	cmps	local06, #0 wcz
 if_be	mov	result1, #0
 if_be	jmp	#LR__0907
	cmp	local02, #3 wz
 if_ne	jmp	#LR__0904
	cmp	local03, #1 wz
	wrz	local07
	add	local06, local07
	abs	local06, local06 wc
	shr	local06, #1
 if_b	neg	local06, local06
LR__0904
	mov	local08, #0
LR__0905
	cmps	local08, local06 wcz
 if_ae	jmp	#LR__0906
	mov	local09, local01
	rdlong	local07, local09
	add	local09, #4
	rdlong	local10, local09
	mov	arg01, #32
	mov	local11, objptr
	mov	objptr, local07
	call	local10
	mov	objptr, local11
	mov	local12, result1
	cmps	local12, #0 wcz
 if_b	mov	result1, local12
 if_b	jmp	#LR__0907
	add	local05, local12
	add	local08, #1
	jmp	#LR__0905
LR__0906
	mov	result1, local05
LR__0907
	mov	ptra, fp
	call	#popregs_
__system___fmtpad_ret
	ret

__system___uitoa
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, arg05 wz
	mov	local06, local01
	mov	local07, #0
 if_ne	mov	local08, #55
 if_e	mov	local08, #87
LR__0908
	mov	muldiva_, local02
	mov	muldivb_, local03
	call	#unsdivide_
	mov	local09, muldiva_
	cmp	local09, #10 wcz
 if_b	add	local09, #48
 if_ae	add	local09, local08
	wrbyte	local09, local06
	mov	muldiva_, local02
	mov	muldivb_, local03
	add	local06, #1
	call	#unsdivide_
	mov	local02, muldivb_ wz
	add	local07, #1
 if_ne	jmp	#LR__0908
	cmp	local07, local04 wcz
 if_b	jmp	#LR__0908
	wrbyte	#0, local06
	mov	arg01, local01
	call	#__system___strrev
	mov	result1, local07
	mov	ptra, fp
	call	#popregs_
__system___uitoa_ret
	ret

__system__disassemble_0258
	mov	COUNT_, #22
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, arg05
	mov	arg01, local05
	call	#__system___float_fromint
	mov	local06, result1
	mov	local07, #0
	mov	local08, #1
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #1
	call	#__system___float_cmp
	mov	local09, result1 wz
 if_e	wrlong	#0, local02
 if_e	wrlong	#0, local03
 if_e	jmp	#LR__0921
	mov	arg01, local01
	call	#__system____builtin_ilogb
	mov	local10, result1
	cmp	local05, #10 wz
 if_ne	jmp	#LR__0909
	mov	muldiva_, local10
	shl	muldiva_, #1
	add	muldiva_, local10
	mov	muldivb_, #10
	call	#divide_
	mov	local10, muldivb_
	mov	local11, #9
	jmp	#LR__0910
LR__0909
	mov	local11, #24
LR__0910
LR__0911
	cmps	local07, #8 wcz
	add	local07, #1
 if_ae	jmp	#LR__0912
	mov	arg01, ##1065353216
	mov	arg02, local06
	mov	arg03, local10
	call	#__system___float_pow_n
	mov	local12, result1
	mov	arg01, local01
	mov	arg02, local12
	call	#__system___float_div
	mov	local13, result1
	mov	arg01, local13
	mov	local08, #1
	mov	arg02, ##1065353216
	mov	arg03, #1
	call	#__system___float_cmp
	mov	local09, result1
	cmps	local09, #0 wcz
 if_b	sub	local10, #1
 if_b	jmp	#LR__0911
	mov	arg01, local13
	mov	arg02, local06
	neg	local08, #1
	neg	arg03, #1
	call	#__system___float_cmp
	mov	local09, result1
	cmps	local09, #0 wcz
 if_ae	add	local10, #1
 if_ae	jmp	#LR__0911
LR__0912
	mov	arg01, local13
	call	#__system____builtin_ilogb
	mov	local14, result1
	mov	local15, local13
	mov	local16, local15
	and	local16, ##8388607
	bith	local16, #23
	shl	local16, local14
	cmp	local05, #2 wz
 if_e	shl	local04, #2
	mov	local17, #0
	cmps	local04, #0 wcz
 if_ae	jmp	#LR__0913
	mov	local18, local10
	sub	local18, local04
	mov	local04, local18
	cmps	local04, #0 wcz
 if_b	jmp	#LR__0920
	jmp	#LR__0914
LR__0913
	add	local04, #1
LR__0914
	fles	local04, local11 wcz
	mov	local19, #1
	loc	pa,	#(@LR__0916-@LR__0915)
	call	#FCACHE_LOAD_
LR__0915
	cmp	local17, ##8388608 wcz
 if_ae	jmp	#LR__0917
	cmps	local04, #0 wcz
	sub	local04, #1
 if_be	jmp	#LR__0917
	mov	local20, local16
	shr	local20, #23
	and	local16, ##8388607
	qmul	local17, local05
	getqx	local17
	qmul	local19, local05
	getqx	local19
	qmul	local16, local05
	getqx	local16
	add	local17, local20
	jmp	#LR__0915
LR__0916
LR__0917
	mov	local18, local05
	shl	local18, #23
	abs	local21, local18 wc
	shr	local21, #1
 if_b	neg	local21, local21
	cmp	local16, local21 wcz
 if_a	jmp	#LR__0918
	mov	local08, local05
	shl	local08, #23
	abs	local09, local08 wc
	shr	local09, #1
 if_b	neg	local09, local09
	cmp	local16, local09 wz
 if_ne	jmp	#LR__0919
	mov	local22, local17
	and	local22, #1 wz
 if_e	jmp	#LR__0919
LR__0918
	mov	local18, local17
	mov	local21, local17
	add	local21, #1
	mov	local17, local21
	cmp	local17, local19 wz
 if_e	mov	local18, local10
 if_e	add	local18, #1
 if_e	mov	local10, local18
LR__0919
LR__0920
	wrlong	local17, local02
	wrlong	local10, local03
LR__0921
	mov	ptra, fp
	call	#popregs_
__system__disassemble_0258_ret
	ret

__system__emitsign_0260
	mov	_var01, #0
	cmp	arg02, #0 wz
 if_ne	wrbyte	arg02, arg01
 if_ne	mov	_var01, #1
 if_ne	add	arg01, #1
	cmp	arg03, #0 wz
 if_e	jmp	#LR__0922
	wrbyte	#48, arg01
	add	arg01, #1
	wrbyte	arg03, arg01
	add	_var01, #2
LR__0922
	mov	result1, _var01
__system__emitsign_0260_ret
	ret

__system___gettxfunc
	mov	COUNT_, #3
	call	#pushregs_
	call	#__system____getftab
	mov	local01, result1 wz
 if_e	jmp	#LR__0923
	add	local01, #8
	rdlong	local02, local01
	sub	local01, #8
	mov	local03, local02 wz
 if_ne	jmp	#LR__0924
LR__0923
	mov	result1, #0
	jmp	#LR__0925
LR__0924
	mov	arg01, local01
	mov	arg02, ptr____struct_s_vfs_file_t_putchar_
	call	#__system___make_methodptr
LR__0925
	mov	ptra, fp
	call	#popregs_
__system___gettxfunc_ret
	ret

__system___rxtxioctl_0831
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	cmp	local01, #256 wz
 if_e	jmp	#LR__0926
	cmp	local01, #257 wz
 if_e	jmp	#LR__0927
	jmp	#LR__0928
LR__0926
	add	ptr___system__dat__, #8
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, #8
	wrlong	result1, local02
	mov	result1, #0
	jmp	#LR__0929
LR__0927
	rdlong	arg01, local02
	add	ptr___system__dat__, #8
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #8
	mov	result1, #0
	jmp	#LR__0929
LR__0928
	add	ptr___system__dat__, ##564
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
LR__0929
	mov	ptra, fp
	call	#popregs_
__system___rxtxioctl_0831_ret
	ret

__system____dummy_flush_0832
	mov	result1, #0
__system____dummy_flush_0832_ret
	ret

__system__pack_0892
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	add	local03, #127
	test	local04, #4 wz
 if_e	jmp	#LR__0930
	cmp	local01, #0 wz
 if_e	decod	local01, #22
	bith	local01, #247
	jmp	#LR__0939
LR__0930
	test	local04, #2 wz
 if_ne	mov	local01, ##2139095040
 if_ne	mov	local02, #0
 if_ne	jmp	#LR__0938
	mov	local05, local04
	test	local05, #8 wz
 if_ne	mov	local01, #0
 if_ne	jmp	#LR__0937
	cmps	local03, #255 wcz
 if_ae	mov	local01, ##2139095040
 if_ae	mov	local02, #0
 if_ae	jmp	#LR__0936
	cmps	local03, #0 wcz
 if_a	jmp	#LR__0934
	shr	local02, #1
	mov	local06, local01
	and	local06, #1
	shl	local06, #31
	or	local02, local06
	shr	local01, #1
	loc	pa,	#(@LR__0932-@LR__0931)
	call	#FCACHE_LOAD_
LR__0931
	cmps	local03, #0 wcz
 if_ae	jmp	#LR__0933
	cmp	local01, #0 wz
 if_e	jmp	#LR__0933
	mov	local07, local02
	and	local07, #1
	add	local03, #1
	shr	local02, #1
	mov	local06, local01
	and	local06, #1
	shl	local06, #31
	or	local02, local06
	or	local02, local07
	shr	local01, #1
	jmp	#LR__0931
LR__0932
LR__0933
	cmps	local03, #0 wcz
 if_ae	jmp	#LR__0935
	cmp	local02, #0 wz
	wrnz	local02
	jmp	#LR__0935
LR__0934
	andn	local01, ##-8388608
	shl	local03, #23
	or	local01, local03
LR__0935
LR__0936
LR__0937
LR__0938
LR__0939
	test	local01, #1 wz
 if_ne	or	local02, #1
	mov	local08, local02
	mov	local06, #0
	add	local02, ##2147483647
	cmp	local02, local08 wcz
 if_b	mov	local06, #1
	add	local01, local06
	test	local04, #1 wz
 if_ne	bith	local01, #31
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
__system__pack_0892_ret
	ret

___struct_s_vfs_file_t_putchar
	mov	COUNT_, #4
	call	#pushregs_
	add	objptr, #20
	rdlong	local01, objptr wz
	sub	objptr, #20
 if_e	mov	result1, #0
 if_e	jmp	#LR__0940
	add	objptr, #20
	rdlong	local01, objptr
	sub	objptr, #20
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	mov	arg02, objptr
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	cmps	result1, #0 wcz
 if_b	mov	local01, #0
 if_ae	mov	local01, #1
	mov	result1, local01
LR__0940
	mov	ptra, fp
	call	#popregs_
___struct_s_vfs_file_t_putchar_ret
	ret

___struct_s_vfs_file_t_getchar
	mov	COUNT_, #4
	call	#pushregs_
	add	objptr, #24
	rdlong	local01, objptr wz
	sub	objptr, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0941
	add	objptr, #24
	rdlong	local01, objptr
	sub	objptr, #24
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	mov	arg01, objptr
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
LR__0941
	mov	ptra, fp
	call	#popregs_
___struct_s_vfs_file_t_getchar_ret
	ret

___struct__bas_wrap_sender_tx
	mov	COUNT_, #4
	call	#pushregs_
	rdlong	local01, objptr
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	mov	result1, #1
	mov	ptra, fp
	call	#popregs_
___struct__bas_wrap_sender_tx_ret
	ret

LR__0942
	byte	"/"
	byte	0
LR__0943
	byte	"inf"
	byte	0
LR__0944
	byte	"nan"
	byte	0
LR__0945
	byte	" !!! corrupted heap??? !!! "
	byte	0
LR__0946
	byte	" !!! out of heap memory !!! "
	byte	0
LR__0947
	byte	" !!! corrupted heap !!! "
	byte	0
LR__0948
	byte	"Power Cycling EVE"
	byte	0
LR__0949
	byte	"SPI Started"
	byte	0
LR__0950
	byte	"EVE powercycle complete."
	byte	0
LR__0951
	byte	"Waking up EVE."
	byte	0
LR__0952
	byte	"Eve now ACTIVE"
	byte	0
LR__0953
	byte	"Chip ID = 0x"
	byte	0
LR__0954
	byte	"Eve Needed Whacking"
	byte	0
LR__0955
	byte	"Eve Needed Whacking"
	byte	0
LR__0956
	byte	"First screen written"
	byte	0
LR__0957
	byte	"Clock freq = "
	byte	0
LR__0958
	byte	"Good ID: 0x"
	byte	0
LR__0959
	byte	"need "
	byte	0
LR__0960
	byte	", got "
	byte	0
LR__0961
	byte	"W4CPFE: "
	byte	0
LR__0962
	byte	"%c"
	byte	0
LR__0963
	byte	"Eve stuck - W:"
	byte	0
LR__0964
	byte	" R:"
	byte	0
LR__0965
	byte	"ftinit.."
	byte	0
LR__0966
	byte	"/files"
	byte	0
LR__0967
	byte	"/files"
	byte	0
LR__0968
	byte	"Hello world"
	byte	0
LR__0969
	byte	0
	byte	0
LR__0970
	byte	"/"
	byte	0
LR__0971
	byte	"???"
	byte	0
LR__0972
	byte	34,"*+,:;<=>?[]|",127
	byte	0
LR__0973
	byte	-21,"v",-112,"EXFAT   "
	byte	0
LR__0974
	byte	"FAT"
	byte	0
LR__0975
	byte	"FAT32"
	byte	0
	alignl
_dat_
	byte	$00[1085]
	byte	$05, $00, $00, $d0, $02, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00[31]
	byte	$77, $77, $77, $77, $00, $ff, $ff, $ff, $60, $00, $00, $02, $07, $00, $00, $26
	byte	$0c, $ff, $ff, $ff, $f0, $00, $5a, $00, $1f, $00, $00, $06, $43, $6f, $70, $72
	byte	$6f, $63, $65, $73, $73, $6f, $72, $20, $65, $78, $63, $65, $70, $74, $69, $6f
	byte	$6e, $00, $00, $00, $00, $ff, $ff, $ff, $60, $00, $00, $02, $07, $00, $00, $26
	byte	$0c, $ff, $ff, $ff, $f0, $00, $88, $00, $1c, $00, $00, $16, $43, $6f, $70, $72
	byte	$6f, $63, $65, $73, $73, $6f, $72, $20, $65, $78, $63, $65, $70, $74, $69, $6f
	byte	$6e, $3a, $0a, $0a, $25, $73, $00, $00, $00, $00, $00, $00, $00, $ff, $ff, $ff
	byte	$60, $00, $00, $02, $07, $00, $00, $26, $0c, $ff, $ff, $ff, $f0, $00, $5a, $00
	byte	$1d, $00, $00, $06, $43, $61, $6e, $6e, $6f, $74, $20, $6f, $70, $65, $6e, $20
	byte	$66, $69, $6c, $65, $3a, $00, $00, $00, $00, $00, $00, $00, $92, $01, $24, $03
	byte	$b6, $04, $48, $06, $da, $07, $6c, $09, $fd, $0a, $8f, $0c, $21, $0e, $b2, $0f
	byte	$43, $11, $d5, $12, $65, $14, $f6, $15, $87, $17, $17, $19, $a7, $1a, $37, $1c
	byte	$c6, $1d, $56, $1f, $e5, $20, $73, $22, $02, $24, $8f, $25, $1d, $27, $aa, $28
	byte	$37, $2a, $c3, $2b, $4f, $2d, $db, $2e, $66, $30, $f1, $31, $7b, $33, $05, $35
	byte	$8e, $36, $16, $38, $9e, $39, $26, $3b, $ad, $3c, $33, $3e, $b9, $3f, $3e, $41
	byte	$c3, $42, $47, $44, $ca, $45, $4c, $47, $ce, $48, $4f, $4a, $d0, $4b, $4f, $4d
	byte	$ce, $4e, $4d, $50, $ca, $51, $47, $53, $c3, $54, $3e, $56, $b8, $57, $31, $59
	byte	$aa, $5a, $21, $5c, $98, $5d, $0e, $5f, $83, $60, $f7, $61, $6a, $63, $dc, $64
	byte	$4d, $66, $bd, $67, $2c, $69, $9a, $6a, $07, $6c, $73, $6d, $de, $6e, $48, $70
	byte	$b1, $71, $19, $73, $7f, $74, $e5, $75, $49, $77, $ac, $78, $0f, $7a, $6f, $7b
	byte	$cf, $7c, $2e, $7e, $8b, $7f, $e7, $80, $42, $82, $9b, $83, $f3, $84, $4a, $86
	byte	$a0, $87, $f5, $88, $48, $8a, $99, $8b, $ea, $8c, $39, $8e, $86, $8f, $d3, $90
	byte	$1e, $92, $67, $93, $af, $94, $f6, $95, $3b, $97, $7f, $98, $c1, $99, $02, $9b
	byte	$41, $9c, $7f, $9d, $bb, $9e, $f6, $9f, $2f, $a1, $66, $a2, $9d, $a3, $d1, $a4
	byte	$04, $a6, $35, $a7, $65, $a8, $93, $a9, $bf, $aa, $ea, $ab, $13, $ad, $3b, $ae
	byte	$60, $af, $85, $b0, $a7, $b1, $c8, $b2, $e7, $b3, $04, $b5, $1f, $b6, $39, $b7
	byte	$51, $b8, $67, $b9, $7b, $ba, $8e, $bb, $9f, $bc, $ae, $bd, $bb, $be, $c6, $bf
	byte	$d0, $c0, $d7, $c1, $dd, $c2, $e1, $c3, $e3, $c4, $e3, $c5, $e1, $c6, $dd, $c7
	byte	$d7, $c8, $d0, $c9, $c6, $ca, $bb, $cb, $ad, $cc, $9e, $cd, $8c, $ce, $79, $cf
	byte	$63, $d0, $4c, $d1, $32, $d2, $17, $d3, $f9, $d3, $da, $d4, $b8, $d5, $95, $d6
	byte	$6f, $d7, $47, $d8, $1d, $d9, $f1, $d9, $c3, $da, $93, $db, $60, $dc, $2c, $dd
	byte	$f5, $dd, $bd, $de, $82, $df, $45, $e0, $06, $e1, $c4, $e1, $81, $e2, $3b, $e3
	byte	$f3, $e3, $a9, $e4, $5d, $e5, $0e, $e6, $bd, $e6, $6a, $e7, $15, $e8, $be, $e8
	byte	$64, $e9, $08, $ea, $aa, $ea, $4a, $eb, $e7, $eb, $82, $ec, $1b, $ed, $b1, $ed
	byte	$45, $ee, $d7, $ee, $67, $ef, $f4, $ef, $7f, $f0, $08, $f1, $8e, $f1, $12, $f2
	byte	$94, $f2, $13, $f3, $90, $f3, $0a, $f4, $83, $f4, $f9, $f4, $6c, $f5, $dd, $f5
	byte	$4c, $f6, $b9, $f6, $23, $f7, $8a, $f7, $f0, $f7, $52, $f8, $b3, $f8, $11, $f9
	byte	$6d, $f9, $c6, $f9, $1d, $fa, $72, $fa, $c4, $fa, $13, $fb, $61, $fb, $ab, $fb
	byte	$f4, $fb, $3a, $fc, $7d, $fc, $be, $fc, $fd, $fc, $39, $fd, $73, $fd, $aa, $fd
	byte	$df, $fd, $12, $fe, $42, $fe, $6f, $fe, $9a, $fe, $c3, $fe, $e9, $fe, $0d, $ff
	byte	$2e, $ff, $4d, $ff, $69, $ff, $83, $ff, $9b, $ff, $b0, $ff, $c2, $ff, $d2, $ff
	byte	$e0, $ff, $eb, $ff, $f3, $ff, $fa, $ff, $fd, $ff, $ff, $ff, $00, $00, $00, $00
	byte	$00[552]
	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_dat_ + 2788
	long	@@@_dat_ + 2796
	byte	$00, $00, $00, $00
	long	@@@_dat_ + 2804
	long	@@@_dat_ + 2812
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_dat_ + 2820
	long	@@@_dat_ + 2828
	byte	$00, $00, $00, $00
	long	@@@_dat_ + 2836
	long	@@@_dat_ + 2844
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_dat_ + 2852
	long	@@@_dat_ + 2860
	byte	$00, $00, $00, $00
	long	@@@_dat_ + 2868
	long	@@@_dat_ + 2876
	byte	$00[316]
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__rxtxioctl_0322
	byte	$00, $00, $00, $00
	long	@@@___dummy_flush_0323
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__rxtxioctl_0322
	byte	$00, $00, $00, $00
	long	@@@___dummy_flush_0323
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__rxtxioctl_0322
	byte	$00, $00, $00, $00
	long	@@@___dummy_flush_0323
	byte	$00[560]
	alignl
_SPI_spin2_dat_
	byte	$00, $fd, $0c, $fb, $f8, $ff, $9f, $ad, $01, $fc, $1c, $f2, $20, $00, $90, $ad
	byte	$03, $fc, $1c, $f2, $28, $00, $90, $ad, $02, $fc, $1c, $f2, $68, $01, $90, $ad
	byte	$04, $fc, $1c, $f2, $68, $00, $90, $ad, $00, $01, $6c, $fc, $d0, $ff, $9f, $fd
	byte	$f8, $f3, $03, $f6, $c1, $ff, $04, $fb, $c1, $01, $05, $fb, $e8, $ff, $9f, $fd
	byte	$f8, $f3, $03, $f6, $c1, $03, $05, $fb, $c1, $05, $05, $fb, $c1, $07, $05, $fb
	byte	$59, $02, $61, $fd, $00, $00, $1d, $f2, $58, $04, $61, $ad, $59, $04, $61, $5d
	byte	$18, $06, $25, $f0, $08, $0a, $05, $f6, $01, $06, $b5, $f0, $5a, $02, $61, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$f9, $0b, $6d, $fb, $1f, $fe, $60, $fd, $1f, $fe, $60, $fd, $98, $ff, $9f, $fd
	byte	$f8, $f3, $03, $f6, $c1, $03, $05, $fb, $c1, $05, $05, $fb, $c1, $0d, $05, $fb
	byte	$c1, $0f, $05, $fb, $86, $06, $c1, $fa, $01, $0c, $05, $f1, $59, $02, $61, $fd
	byte	$00, $00, $1d, $f2, $58, $04, $61, $ad, $59, $04, $61, $5d, $18, $06, $25, $f0
	byte	$01, $06, $b5, $f0, $5a, $02, $61, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $01, $06, $b5, $f0, $5a, $02, $61, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$01, $06, $b5, $f0, $5a, $02, $61, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $01, $06, $b5, $f0, $5a, $02, $61, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$01, $06, $b5, $f0, $5a, $02, $61, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $01, $06, $b5, $f0, $5a, $02, $61, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$01, $06, $b5, $f0, $5a, $02, $61, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $01, $06, $b5, $f0, $5a, $02, $61, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$c8, $0f, $6d, $fb, $a0, $fe, $9f, $fd, $f8, $f3, $03, $f6, $c1, $03, $05, $fb
	byte	$c1, $05, $05, $fb, $c1, $07, $05, $fb, $c1, $09, $05, $fb, $51, $02, $61, $fd
	byte	$00, $00, $1d, $f2, $58, $04, $61, $ad, $59, $04, $61, $5d, $00, $06, $05, $f6
	byte	$08, $0a, $05, $f6, $5f, $04, $61, $fd, $1f, $fe, $60, $fd, $40, $02, $71, $fd
	byte	$01, $06, $a5, $f0, $5f, $04, $61, $fd, $1f, $fe, $60, $fd, $f9, $0b, $6d, $fb
	byte	$84, $06, $61, $fc, $50, $fe, $9f, $fd, $58, $08, $61, $fd, $4b, $4c, $80, $ff
	byte	$1f, $00, $65, $fd, $59, $08, $61, $fd, $4b, $4c, $80, $ff, $1f, $00, $65, $fd
	byte	$e4, $ff, $9f, $fd, $30, $fe, $9f, $fd, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00[32]
	alignl
_ff_cc_dat_
	byte	$00[6]
	byte	$43, $55, $45, $41, $41, $41, $41, $43, $45, $45, $45, $49, $49, $49, $41, $41
	byte	$45, $92, $92, $4f, $4f, $4f, $55, $55, $59, $4f, $55, $4f, $9c, $4f, $9e, $9f
	byte	$41, $49, $4f, $55, $a5, $a5, $a6, $a7, $a8, $a9, $aa, $ab, $ac, $ad, $ae, $af
	byte	$b0, $b1, $b2, $b3, $b4, $41, $41, $41, $b8, $b9, $ba, $bb, $bc, $bd, $be, $bf
	byte	$c0, $c1, $c2, $c3, $c4, $c5, $41, $41, $c8, $c9, $ca, $cb, $cc, $cd, $ce, $cf
	byte	$d1, $d1, $45, $45, $45, $49, $49, $49, $49, $d9, $da, $db, $dc, $dd, $49, $df
	byte	$4f, $e1, $4f, $4f, $4f, $4f, $e6, $e8, $e8, $55, $55, $55, $59, $59, $ee, $ef
	byte	$f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $fa, $fb, $fc, $fd, $fe, $ff
	byte	$01, $00, $04, $00, $10, $00, $40, $00, $00, $01, $00, $02, $00, $00, $01, $00
	byte	$02, $00, $04, $00, $08, $00, $10, $00, $20, $00, $00, $00, $00, $00, $07, $00
	byte	$00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_ff_cc_dat_ + 244
	long	@@@_ff_cc_dat_ + 252
	long	@@@_ff_cc_dat_ + 260
	long	@@@_ff_cc_dat_ + 268
	long	@@@_ff_cc_dat_ + 276
	long	@@@_ff_cc_dat_ + 284
	long	@@@_ff_cc_dat_ + 292
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_dat_ + 300
	long	@@@_ff_cc_dat_ + 308
	long	@@@_ff_cc_dat_ + 316
	long	@@@_ff_cc_dat_ + 324
	long	@@@_ff_cc_dat_ + 332
	long	@@@_ff_cc_dat_ + 340
	long	@@@_ff_cc_dat_ + 348
	long	@@@_ff_cc_dat_ + 356
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_open_0689
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_creat_0643
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_close_0646
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_read_0671
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_write_0675
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_lseek_0679
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_ioctl
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_opendir_0649
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_closedir_0652
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_readdir_0655
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_stat_0667
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_mkdir
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_rmdir_0683
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_remove
	byte	$00, $00, $00, $00
	long	@@@_ff_cc_v_rename_0685
	byte	$00[16]
	byte	$01, $00, $00, $00
	alignl
__system__dat_
	byte	$00[8]
	byte	$03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00[552]
	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@__system__dat_ + 1008
	long	@@@__system__dat_ + 1016
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1024
	long	@@@__system__dat_ + 1032
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@__system__dat_ + 1040
	long	@@@__system__dat_ + 1048
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1056
	long	@@@__system__dat_ + 1064
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@__system__dat_ + 1072
	long	@@@__system__dat_ + 1080
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1088
	long	@@@__system__dat_ + 1096
	byte	$00[316]
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_0831
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_0832
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_0831
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_0832
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_0831
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_0832
__heap_base
	long	0[4002]
objmem
	long	0[0]
stackspace
	long	0[1]
	org	COG_BSS_START
_var01
	res	1
_var02
	res	1
_var03
	res	1
_var04
	res	1
_var05
	res	1
_var06
	res	1
_var07
	res	1
_var08
	res	1
_var09
	res	1
_var10
	res	1
_var11
	res	1
arg01
	res	1
arg02
	res	1
arg03
	res	1
arg04
	res	1
arg05
	res	1
local01
	res	1
local02
	res	1
local03
	res	1
local04
	res	1
local05
	res	1
local06
	res	1
local07
	res	1
local08
	res	1
local09
	res	1
local10
	res	1
local11
	res	1
local12
	res	1
local13
	res	1
local14
	res	1
local15
	res	1
local16
	res	1
local17
	res	1
local18
	res	1
local19
	res	1
local20
	res	1
local21
	res	1
local22
	res	1
local23
	res	1
local24
	res	1
local25
	res	1
local26
	res	1
local27
	res	1
local28
	res	1
local29
	res	1
local30
	res	1
local31
	res	1
local32
	res	1
local33
	res	1
local34
	res	1
local35
	res	1
local36
	res	1
local37
	res	1
local38
	res	1
local39
	res	1
local40
	res	1
local41
	res	1
local42
	res	1
muldiva_
	res	1
muldivb_
	res	1
	fit	480

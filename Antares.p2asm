con
	heapsize = 16000
dat
	nop
	cogid	pa
	coginit	pa,##$404
	orgh	$10
	long	0	'reserved
	long	0 ' clock frequency: will default to 160000000
	long	0 ' clock mode: will default to $10007fb
	orgh	$400
 _ret_	mov	result1, #0
	org	0
entry
	cmp	ptra, #0 wz
 if_ne	jmp	#spininit
	mov	ptra, ptr_stackspace_
	rdlong	pa, #20 wz
 if_ne	jmp	#skip_clock_set_
	hubset	#0
	hubset	##16779256
	waitx	##200000
	mov	pa, ##16779259
	hubset	pa
	wrlong	pa, #24
	wrlong	##160000000, #20
	jmp	#skip_clock_set_
	orgf	128
skip_clock_set_
	locknew	__lockreg
	wrlong	__lockreg, ptr___lockreg_
	call	#_main
cogexit
	waitx	##160000
	cogid	arg01
	cogstop	arg01
spininit
	rdlong	objptr, ptra
	add	ptra, #4
	rdlong	result1, ptra
	add	ptra, #4
	rdlong	arg01, ptra
	add	ptra, #4
	rdlong	arg02, ptra
	add	ptra, #4
	rdlong	arg03, ptra
	add	ptra, #4
	rdlong	arg04, ptra
	sub	ptra, #16
	call	result1
	jmp	#cogexit
FCACHE_LOAD_
    pop	fcache_tmpb_
    add	fcache_tmpb_, pa
    push	fcache_tmpb_
    sub	fcache_tmpb_, pa
    shr	pa, #2
    altd	pa
    mov	 0-0, ret_instr_
    sub	pa, #1
    setq	pa
    rdlong	$0, fcache_tmpb_
    jmp	#\$0 ' jmp to cache
ret_instr_
    ret
fcache_tmpb_
    long 0
COUNT_
    long 0
RETADDR_
    long 0
fp
    long 0
pushregs_
    pop  pa
    pop  RETADDR_
    tjz  COUNT_, #pushregs_done_
    sub  COUNT_, #1
    setq COUNT_
    wrlong local01, ptra
    add  COUNT_, #1
pushregs_done_
    shl  COUNT_, #2
    add  ptra, COUNT_
    shr  COUNT_, #2
    setq #2 ' push 3 registers starting at COUNT_
    wrlong COUNT_, ptra
    add    ptra, #12
    mov    fp, ptra
    jmp  pa
 popregs_
    pop    pa
    sub    ptra, #12
    setq   #2
    rdlong COUNT_, ptra
    tjz    COUNT_, #popregs__ret
    shl    COUNT_, #2
    sub    ptra, COUNT_
    shr    COUNT_, #2
    sub    COUNT_, #1
    setq   COUNT_
    rdlong local01, ptra
popregs__ret
    push   RETADDR_
    jmp    pa

unsdivide_
       setq    #0
       qdiv    muldiva_, muldivb_
       getqx   muldivb_
 _ret_ getqy   muldiva_

divide_
       abs     muldiva_,muldiva_     wc       'abs(x)
       muxc    itmp2_,#%11                    'store sign of x
       abs     muldivb_,muldivb_     wcz      'abs(y)
 if_c  xor     itmp2_,#%10                    'store sign of y
 if_z  ret
       call    #unsdivide_
       test    itmp2_,#1        wc       'restore sign, remainder
       negc    muldiva_,muldiva_ 
       test    itmp2_,#%10      wc       'restore sign, division result
 _ret_ negc    muldivb_,muldivb_

__heap_ptr
	long	@__heap_base
__lockreg
	long	0
itmp1_
	long	0
itmp2_
	long	0
objptr
	long	@objmem
ptr__SPI_spin2_dat__
	long	@_SPI_spin2_dat_
ptr____default_flush_
	long	@___default_flush
ptr____default_getc_
	long	@___default_getc
ptr____default_putc_
	long	@___default_putc
ptr____default_putc_terminal_
	long	@___default_putc_terminal
ptr____struct__anon_9b5668f900000005_sputc_
	long	@___struct__anon_9b5668f900000005_sputc
ptr____struct__fmtfile_putchar_
	long	@___struct__fmtfile_putchar
ptr____struct_s_vfs_file_t_putchar_
	long	@___struct_s_vfs_file_t_putchar
ptr___lockreg_
	long	@__lockreg
ptr___system__dat__
	long	@__system__dat_
ptr__dat__
	long	@_dat_
ptr__fs9p_internal_cc_dat__
	long	@_fs9p_internal_cc_dat_
ptr__plain_sendrecv_0645_
	long	@_plain_sendrecv_0645
ptr_stackspace_
	long	@stackspace
result1
	long	0
result2
	long	0
result3
	long	0
COG_BSS_START
	fit	480
	orgh
hubentry

_open
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	add	ptr__dat__, ##6364
	mov	local04, ptr__dat__
	mov	local05, #0
	sub	ptr__dat__, ##6364
	loc	pa,	#(@LR__0002-@LR__0001)
	call	#FCACHE_LOAD_
LR__0001
	cmps	local05, #10 wcz
 if_ae	jmp	#LR__0003
	qmul	local05, #44
	getqx	local06
	add	local06, local04
	add	local06, #8
	rdlong	local07, local06 wz
 if_ne	add	local05, #1
 if_ne	jmp	#LR__0001
LR__0002
LR__0003
	cmp	local05, #10 wz
 if_ne	jmp	#LR__0004
	add	ptr___system__dat__, ##564
	wrlong	#11, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0005
LR__0004
	qmul	local05, #44
	getqx	arg01
	add	arg01, local04
	mov	arg02, local01
	mov	arg03, local02
	mov	arg04, local03
	call	#__openraw
	mov	local08, result1 wz
 if_e	mov	local08, local05
	mov	result1, local08
LR__0005
	mov	ptra, fp
	call	#popregs_
_open_ret
	ret

_write
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	cmp	local01, #10 wcz
 if_b	jmp	#LR__0006
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0007
LR__0006
	qmul	local01, #44
	getqx	arg01
	add	ptr__dat__, ##6364
	add	arg01, ptr__dat__
	mov	arg02, local02
	mov	arg03, local03
	sub	ptr__dat__, ##6364
	call	#__vfswrite
LR__0007
	mov	ptra, fp
	call	#popregs_
_write_ret
	ret

_read
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	cmp	local01, #10 wcz
 if_b	jmp	#LR__0008
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0009
LR__0008
	qmul	local01, #44
	getqx	arg01
	add	ptr__dat__, ##6364
	add	arg01, ptr__dat__
	mov	arg02, local02
	mov	arg03, local03
	sub	ptr__dat__, ##6364
	call	#__vfsread
LR__0009
	mov	ptra, fp
	call	#popregs_
_read_ret
	ret

_close
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	cmp	local01, #10 wcz
 if_b	jmp	#LR__0010
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0011
LR__0010
	qmul	local01, #44
	getqx	arg01
	add	ptr__dat__, ##6364
	add	arg01, ptr__dat__
	sub	ptr__dat__, ##6364
	call	#__closeraw
LR__0011
	mov	ptra, fp
	call	#popregs_
_close_ret
	ret

_lseek
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	cmp	local01, #10 wcz
 if_b	jmp	#LR__0012
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0016
LR__0012
	qmul	local01, #44
	getqx	local04
	add	ptr__dat__, ##6364
	add	local04, ptr__dat__
	add	local04, #40
	rdlong	local05, local04 wz
	sub	local04, #40
	sub	ptr__dat__, ##6364
 if_ne	jmp	#LR__0013
	add	ptr___system__dat__, ##564
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0016
LR__0013
	add	local04, #8
	rdlong	local05, local04
	sub	local04, #8
	test	local05, #64 wz
 if_e	jmp	#LR__0014
	add	local04, #8
	rdlong	local05, local04
	or	local05, #128
	wrlong	local05, local04
	sub	local04, #8
LR__0014
	add	local04, #40
	rdlong	local05, local04
	sub	local04, #40
	rdlong	local06, local05
	add	local05, #4
	rdlong	local07, local05
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, local03
	mov	local08, objptr
	mov	objptr, local06
	call	local07
	mov	objptr, local08
	mov	local09, result1
	cmps	local09, #0 wcz
 if_ae	jmp	#LR__0015
	neg	arg01, local09 wz
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0016
LR__0015
	mov	result1, local09
LR__0016
	mov	ptra, fp
	call	#popregs_
_lseek_ret
	ret

_ioctl
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	call	#___getftab
	mov	local03, result1 wz
 if_ne	jmp	#LR__0017
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0019
LR__0017
	add	local03, #32
	rdlong	local04, local03
	sub	local03, #32
	rdlong	local05, local04
	add	local04, #4
	rdlong	local06, local04
	mov	arg01, local03
	mov	arg02, local01
	mov	arg03, local02
	mov	local07, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local07
	mov	local08, result1 wz
 if_e	jmp	#LR__0018
	add	ptr___system__dat__, ##564
	wrlong	local08, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	cmp	local08, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0019
LR__0018
	mov	result1, #0
LR__0019
	mov	ptra, fp
	call	#popregs_
_ioctl_ret
	ret

_isatty
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #12
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	mov	arg03, fp
	sub	fp, #8
	mov	arg02, #256
	call	#_ioctl
	cmp	result1, #0 wz
 if_e	mov	result1, #1
 if_ne	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
_isatty_ret
	ret

_chdir
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, #64
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	mov	arg02, fp
	sub	fp, #8
	call	#_stat
	add	fp, #60
	wrlong	result1, fp
	rdlong	local01, fp wz
	sub	fp, #60
 if_e	jmp	#LR__0020
	add	fp, #60
	rdlong	result1, fp
	sub	fp, #60
	jmp	#LR__0024
LR__0020
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	and	local01, ##61440
	cmp	local01, ##4096 wz
 if_e	jmp	#LR__0021
	add	ptr___system__dat__, ##564
	wrlong	#13, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0024
LR__0021
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #4
	rdbyte	local01, local02
	cmp	local01, #47 wz
 if_ne	jmp	#LR__0022
	add	ptr__dat__, ##5852
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##5852
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #4
	mov	arg03, #256
	call	#_strncpy
	jmp	#LR__0023
LR__0022
	add	ptr__dat__, ##6108
	mov	result1, ptr__dat__
	add	fp, #56
	wrlong	result1, fp
	mov	arg01, result1
	sub	fp, #56
	sub	ptr__dat__, #256
	mov	arg02, ptr__dat__
	sub	ptr__dat__, ##5852
	mov	arg03, #256
	call	#_strncpy
	add	fp, #56
	rdlong	arg01, fp
	sub	fp, #52
	rdlong	arg02, fp
	sub	fp, #4
	add	ptr__dat__, ##5852
	mov	arg03, ptr__dat__
	sub	ptr__dat__, ##5852
	call	#___getvfsforfile
LR__0023
	mov	result1, #0
LR__0024
	mov	ptra, fp
	call	#popregs_
_chdir_ret
	ret

___getftab
	cmp	arg01, #10 wcz
 if_ae	mov	result1, #0
 if_ae	jmp	#___getftab_ret
	qmul	arg01, #44
	getqx	result1
	add	ptr__dat__, ##6364
	add	result1, ptr__dat__
	sub	ptr__dat__, ##6364
___getftab_ret
	ret

_sprintf
	mov	COUNT_, #3
	call	#pushregs_
	add	ptra, #32
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdlong	local01, fp
	add	fp, #16
	wrlong	local01, fp
	sub	fp, #16
	rdlong	local01, fp
	add	local01, ##16777215
	add	fp, #20
	wrlong	local01, fp
	sub	fp, #12
	rdlong	local01, fp
	wrlong	local01, fp
	add	fp, #8
	mov	arg01, fp
	sub	fp, #20
	mov	arg02, ptr____struct__anon_9b5668f900000005_sputc_
	call	#__system___make_methodptr
	mov	arg01, result1
	add	fp, #8
	rdlong	arg02, fp
	add	fp, #4
	mov	arg03, fp
	sub	fp, #12
	call	#__dofmt
	mov	local02, result1
	add	fp, #16
	wrlong	local02, fp
	add	fp, #4
	mov	arg01, #0
	mov	local03, objptr
	mov	objptr, fp
	sub	fp, #20
	call	#___struct__anon_9b5668f900000005_sputc
	mov	objptr, local03
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
	mov	ptra, fp
	call	#popregs_
_sprintf_ret
	ret

_printf
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #24
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #8
	mov	arg01, #1
	call	#___getftab
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #8
	rdlong	local01, fp
	wrlong	local01, fp
	add	fp, #8
	mov	arg01, fp
	sub	fp, #16
	mov	arg02, ptr____struct__fmtfile_putchar_
	call	#__system___make_methodptr
	mov	arg01, result1
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #4
	mov	arg03, fp
	sub	fp, #8
	call	#__dofmt
	add	fp, #12
	wrlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_printf_ret
	ret

_fopen
	mov	COUNT_, #16
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, #0
	mov	local04, #0
	mov	local05, #0
	mov	local06, #0
	mov	local07, #0
	mov	local08, #0
LR__0025
	mov	local09, local02
	mov	local10, local02
	add	local10, #1
	mov	local02, local10
	rdbyte	local11, local09
	mov	local12, local11 wz
 if_e	jmp	#LR__0032
	mov	local13, local12
	cmp	local13, #114 wz
 if_e	jmp	#LR__0026
	cmp	local13, #119 wz
 if_e	jmp	#LR__0027
	cmp	local13, #97 wz
 if_e	jmp	#LR__0028
	cmp	local13, #98 wz
 if_e	jmp	#LR__0029
	cmp	local13, #43 wz
 if_e	jmp	#LR__0030
	jmp	#LR__0031
LR__0026
	mov	local03, #1
	jmp	#LR__0025
LR__0027
	mov	local07, #1
	mov	local08, #1
	mov	local04, #1
	jmp	#LR__0025
LR__0028
	mov	local04, #1
	mov	local07, #1
	mov	local05, #1
	jmp	#LR__0025
LR__0029
	mov	local06, #1
	jmp	#LR__0025
LR__0030
	cmp	local03, #0 wz
 if_ne	mov	local04, #1
 if_ne	jmp	#LR__0025
	cmp	local04, #0 wz
 if_ne	mov	local03, #1
 if_ne	jmp	#LR__0025
	add	ptr___system__dat__, ##564
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	mov	result1, #0
	jmp	#LR__0037
LR__0031
	add	ptr___system__dat__, ##564
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	mov	result1, #0
	jmp	#LR__0037
LR__0032
	cmp	local03, #0 wz
 if_e	jmp	#LR__0033
	cmp	local04, #0 wz
 if_ne	mov	local14, #2
 if_ne	jmp	#LR__0035
	mov	local14, #0
	jmp	#LR__0035
LR__0033
	cmp	local04, #0 wz
 if_ne	mov	local14, #1
 if_ne	jmp	#LR__0034
	add	ptr___system__dat__, ##564
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	mov	result1, #0
	jmp	#LR__0037
LR__0034
LR__0035
	cmp	local05, #0 wz
 if_ne	or	local14, #32
	cmp	local07, #0 wz
 if_ne	or	local14, #4
	cmp	local08, #0 wz
 if_ne	or	local14, #8
	mov	arg01, local01
	mov	arg02, local14
	mov	arg03, #438
	call	#_open
	mov	local15, result1
	cmps	local15, #0 wcz
 if_b	mov	result1, #0
 if_b	jmp	#LR__0037
	mov	arg01, local15
	call	#___getftab
	mov	local16, result1
	mov	arg01, local15
	call	#_isatty
	cmp	result1, #0 wz
 if_e	jmp	#LR__0036
	add	local16, #8
	rdlong	local11, local16
	or	local11, #256
	wrlong	local11, local16
	sub	local16, #8
LR__0036
	mov	result1, local16
LR__0037
	mov	ptra, fp
	call	#popregs_
_fopen_ret
	ret

_fflush
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, #0
	add	arg01, #36
	rdlong	local02, arg01 wz
	sub	arg01, #36
 if_e	jmp	#LR__0038
	add	arg01, #36
	rdlong	local02, arg01
	sub	arg01, #36
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	local01, result1
LR__0038
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
_fflush_ret
	ret

_fwrite
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg04
	qmul	arg02, arg03
	getqx	local03
	mov	arg01, local02
	call	#_fflush
	mov	arg01, local02
	mov	arg02, local01
	mov	arg03, local03
	call	#__vfswrite
	mov	ptra, fp
	call	#popregs_
_fwrite_ret
	ret

_strncpy
	mov	_var01, arg01
LR__0039
	sub	arg03, #1
	cmps	arg03, #0 wcz
 if_b	jmp	#LR__0040
	rdbyte	_var02, arg02
	wrbyte	_var02, _var01
	add	arg02, #1
	rdbyte	_var03, _var01 wz
	add	_var01, #1
 if_ne	jmp	#LR__0039
LR__0040
	loc	pa,	#(@LR__0042-@LR__0041)
	call	#FCACHE_LOAD_
LR__0041
	sub	arg03, #1
	cmps	arg03, #0 wcz
 if_ae	wrbyte	#0, _var01
 if_ae	add	_var01, #1
 if_ae	jmp	#LR__0041
LR__0042
	mov	result1, arg01
_strncpy_ret
	ret

_strncat
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, arg03
	mov	_var04, _var02 wz
 if_e	jmp	#LR__0047
	cmp	_var03, #0 wcz
 if_be	jmp	#LR__0047
	mov	_var05, _var01
	loc	pa,	#(@LR__0045-@LR__0043)
	call	#FCACHE_LOAD_
LR__0043
	rdbyte	_var06, _var05 wz
 if_ne	add	_var05, #1
 if_ne	jmp	#LR__0043
	mov	_var07, _var03
LR__0044
	mov	_var08, _var04
	mov	_var09, _var04
	add	_var09, #1
	mov	_var04, _var09
	rdbyte	_var10, _var08
	mov	_var06, _var10
	zerox	_var06, #7 wz
 if_e	jmp	#LR__0046
	mov	_var11, _var07
	sub	_var11, #1
	mov	_var07, _var11
	cmps	_var07, #0 wcz
 if_ae	wrbyte	_var10, _var05
 if_ae	add	_var05, #1
 if_ae	jmp	#LR__0044
LR__0045
LR__0046
	mov	_var06, #0
	wrbyte	#0, _var05
LR__0047
	mov	result1, _var01
_strncat_ret
	ret

_strncmp
	mov	_var01, arg01 wz
	mov	_var02, arg02
	mov	_var03, arg03
 if_ne	jmp	#LR__0048
	cmp	_var02, #0 wz
 if_ne	neg	_var04, #1
 if_e	mov	_var04, #0
	mov	result1, _var04
	jmp	#_strncmp_ret
LR__0048
	cmp	_var02, #0 wz
 if_e	mov	result1, #1
 if_e	jmp	#_strncmp_ret
	mov	_var05, _var03
	loc	pa,	#(@LR__0050-@LR__0049)
	call	#FCACHE_LOAD_
LR__0049
	rdbyte	_var06, _var01
	mov	_var07, _var02
	mov	_var08, _var02
	add	_var08, #1
	mov	_var02, _var08
	rdbyte	_var09, _var07
	mov	_var04, _var05
	sub	_var04, #1
	mov	_var05, _var04
	cmps	_var05, #0 wcz
	add	_var01, #1
 if_b	jmp	#LR__0051
	cmp	_var06, #0 wz
 if_e	jmp	#LR__0051
	cmp	_var06, _var09 wz
 if_e	jmp	#LR__0049
LR__0050
LR__0051
	cmps	_var05, #0 wcz
 if_b	mov	result1, #0
 if_b	jmp	#_strncmp_ret
	cmp	_var06, _var09 wz
 if_e	mov	result1, #0
 if_e	jmp	#_strncmp_ret
	cmp	_var06, #0 wz
 if_e	neg	result1, #1
 if_e	jmp	#_strncmp_ret
	cmp	_var09, #0 wz
 if_e	mov	result1, #1
 if_ne	mov	result1, _var06
 if_ne	sub	result1, _var09
_strncmp_ret
	ret

_Eve_Reset_HW
	mov	arg02, ##@LR__0707
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	drvl	#31
	mov	arg01, #50
	call	#__system___waitms
	drvh	#31
	mov	arg01, #200
	call	#__system___waitms
_Eve_Reset_HW_ret
	ret

_SPI_Disable
	mov	COUNT_, #1
	call	#pushregs_
	add	ptr__dat__, #4
	mov	arg01, #0
	mov	arg02, #0
	mov	local01, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, #4
	call	#_SPI_spin2_SendCommand
	mov	objptr, local01
	drvh	#30
	mov	ptra, fp
	call	#popregs_
_SPI_Disable_ret
	ret

_SPI_Write
	mov	COUNT_, #1
	call	#pushregs_
	add	ptr__dat__, #4
	zerox	arg01, #7
	and	arg01, #255
	mov	arg03, arg01
	mov	arg01, #24
	mov	arg02, #29
	mov	local01, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, #4
	call	#_SPI_spin2_Write8
	mov	objptr, local01
	mov	ptra, fp
	call	#popregs_
_SPI_Write_ret
	ret

_SPI_WriteBuffer
	mov	COUNT_, #1
	call	#pushregs_
	add	ptr__dat__, #4
	mov	arg03, arg01
	mov	arg04, arg02
	mov	arg01, #24
	mov	arg02, #29
	mov	local01, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, #4
	call	#_SPI_spin2_WriteN
	mov	objptr, local01
	mov	ptra, fp
	call	#popregs_
_SPI_WriteBuffer_ret
	ret

_SPI_ReadBuffer
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	ptr__dat__, #4
	mov	arg01, #25
	mov	arg02, #29
	mov	local03, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, #4
	call	#_SPI_spin2_Read8
	mov	objptr, local03
	mov	local04, #0
LR__0052
	cmps	local04, local02 wcz
 if_ae	jmp	#LR__0053
	mov	local05, local04
	add	local05, local01
	add	ptr__dat__, #4
	mov	arg01, #25
	mov	arg02, #29
	mov	local06, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, #4
	call	#_SPI_spin2_Read8
	mov	objptr, local06
	wrbyte	result1, local05
	add	local04, #1
	jmp	#LR__0052
LR__0053
	mov	ptra, fp
	call	#popregs_
_SPI_ReadBuffer_ret
	ret

_FT81x_Init
	mov	COUNT_, #6
	call	#pushregs_
	add	ptr__dat__, #4
	mov	arg01, #10
	mov	arg02, #0
	mov	local01, objptr
	mov	objptr, ptr__dat__
	sub	ptr__dat__, #4
	call	#_SPI_spin2_start
	mov	objptr, local01
	mov	arg02, ##@LR__0708
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	call	#_Eve_Reset_HW
	mov	arg02, ##@LR__0709
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg02, ##@LR__0710
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, #66
	call	#_HostCommand
	mov	arg01, #68
	call	#_HostCommand
	mov	arg01, #300
	call	#__system___waitms
	mov	arg01, #0
	call	#_HostCommand
	mov	arg01, #300
	call	#__system___waitms
	mov	arg01, #66
	call	#_HostCommand
	mov	arg01, ##18017
	call	#_HostCommand3
	mov	arg01, #0
	call	#_HostCommand
	mov	arg01, #300
	call	#__system___waitms
LR__0054
	call	#_Cmd_READ_REG_ID
	mov	local02, result1
	zerox	local02, #7 wz
 if_e	jmp	#LR__0054
	mov	arg02, ##@LR__0711
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, ##786432
	call	#_rd32
	mov	local03, result1
	mov	local04, local03
	shr	local04, #16
	and	local03, ##65535
	mov	arg02, ##@LR__0712
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	zerox	local04, #15
	mov	arg01, #0
	mov	arg02, local04
	mov	arg03, ##327680
	mov	arg04, #16
	call	#__system___basic_print_unsigned
	zerox	local03, #15
	mov	arg01, #0
	mov	arg02, local03
	mov	arg03, ##327680
	mov	arg04, #16
	call	#__system___basic_print_unsigned
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, ##3153932
	mov	arg02, ##72000000
	call	#_wr32
	mov	arg01, ##3154168
	call	#_rd16
	mov	local05, result1
	zerox	local05, #15
	cmp	local05, ##4095 wz
 if_ne	jmp	#LR__0055
	mov	arg01, ##3182946
	call	#_rd16
	mov	local06, result1
	mov	arg01, ##3153952
	mov	arg02, #1
	call	#_wr32
	mov	arg01, ##3154168
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154172
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154176
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154032
	mov	arg02, #0
	call	#_wr32
	wrword	#0, ptr__dat__
	mov	arg01, ##3153952
	mov	arg02, #0
	call	#_wr32
	mov	arg01, #100
	call	#__system___waitms
	mov	arg01, ##3182946
	mov	arg02, local06
	call	#_wr16
	mov	arg02, ##@LR__0713
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg02, ##@LR__0714
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
LR__0055
	mov	arg01, ##3154076
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3154032
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3153964
	mov	arg02, ##548
	call	#_wr16
	mov	arg01, ##3153968
	mov	arg02, #43
	call	#_wr16
	mov	arg01, ##3153976
	mov	arg02, #0
	call	#_wr16
	mov	arg01, ##3153980
	mov	arg02, #41
	call	#_wr16
	mov	arg01, ##3153984
	mov	arg02, #292
	call	#_wr16
	mov	arg01, ##3153988
	mov	arg02, #12
	call	#_wr16
	mov	arg01, ##3153996
	mov	arg02, #0
	call	#_wr16
	mov	arg01, ##3154000
	mov	arg02, #10
	call	#_wr16
	mov	arg01, ##3154020
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3154028
	mov	arg02, #1
	call	#_wr8
	mov	arg01, ##3153972
	mov	arg02, #480
	call	#_wr16
	mov	arg01, ##3153992
	mov	arg02, #272
	call	#_wr16
	mov	arg01, ##3154024
	mov	arg02, #1
	call	#_wr8
	mov	arg01, ##3154016
	mov	arg02, #1
	call	#_wr8
	mov	arg01, ##3154200
	mov	arg02, ##1200
	call	#_wr16
	mov	arg01, ##3154180
	mov	arg02, #2
	call	#_wr8
	mov	arg01, ##3154184
	mov	arg02, #1
	call	#_wr8
	mov	arg01, ##3154196
	mov	arg02, #15
	call	#_wr8
	mov	arg01, ##3154072
	decod	arg02, #15
	call	#_wr16
	mov	arg01, ##3154076
	decod	arg02, #15
	call	#_wr16
	mov	arg01, ##3154128
	mov	arg02, #250
	call	#_wr16
	mov	arg01, ##3154132
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3145728
	decod	arg02, #25
	call	#_wr32
	mov	arg01, ##3145732
	mov	arg02, ##637534215
	call	#_wr32
	mov	arg01, ##3145736
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154004
	mov	arg02, #2
	call	#_wr8
	mov	arg01, ##3154032
	mov	arg02, #5
	call	#_wr8
	mov	arg02, ##@LR__0715
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, ##3154132
	mov	arg02, #128
	call	#_wr8
	mov	arg01, ##3154052
	mov	arg02, #128
	call	#_wr8
	mov	arg01, ##3154060
	mov	arg02, #0
	call	#_wr8
	mov	arg01, ##3153932
	call	#_rd32
	mov	local02, result1
	mov	arg02, ##@LR__0716
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, local02
	mov	arg03, #0
	mov	arg04, #10
	call	#__system___basic_print_integer
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	ptra, fp
	call	#popregs_
_FT81x_Init_ret
	ret

_HostCommand
	drvl	#30
	call	#_SPI_Write
	mov	arg01, #0
	call	#_SPI_Write
	mov	arg01, #0
	call	#_SPI_Write
	call	#_SPI_Disable
_HostCommand_ret
	ret

_HostCommand3
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	drvl	#30
	mov	arg01, local01
	and	arg01, #255
	call	#_SPI_Write
	getbyte	arg01, local01, #1
	call	#_SPI_Write
	shr	local01, #16
	and	local01, #255
	mov	arg01, local01
	call	#_SPI_Write
	call	#_SPI_Disable
	mov	ptra, fp
	call	#popregs_
_HostCommand3_ret
	ret

_wr32
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	drvl	#30
	mov	arg01, local01
	shr	arg01, #16
	or	arg01, #128
	call	#_SPI_Write
	mov	arg01, local01
	shr	arg01, #8
	call	#_SPI_Write
	mov	arg01, local01
	call	#_SPI_Write
	mov	arg01, local02
	and	arg01, #255
	call	#_SPI_Write
	getbyte	arg01, local02, #1
	call	#_SPI_Write
	getbyte	arg01, local02, #2
	call	#_SPI_Write
	shr	local02, #24
	and	local02, #255
	mov	arg01, local02
	call	#_SPI_Write
	call	#_SPI_Disable
	mov	ptra, fp
	call	#popregs_
_wr32_ret
	ret

_wr16
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	drvl	#30
	mov	arg01, local01
	shr	arg01, #16
	or	arg01, #128
	call	#_SPI_Write
	mov	arg01, local01
	shr	arg01, #8
	call	#_SPI_Write
	mov	arg01, local01
	call	#_SPI_Write
	mov	arg01, local02
	zerox	arg01, #15
	and	arg01, #255
	call	#_SPI_Write
	zerox	local02, #15
	shr	local02, #8
	zerox	local02, #7
	and	local02, #255
	mov	arg01, local02
	call	#_SPI_Write
	call	#_SPI_Disable
	mov	ptra, fp
	call	#popregs_
_wr16_ret
	ret

_wr8
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	drvl	#30
	mov	arg01, local01
	shr	arg01, #16
	or	arg01, #128
	call	#_SPI_Write
	mov	arg01, local01
	shr	arg01, #8
	call	#_SPI_Write
	mov	arg01, local01
	call	#_SPI_Write
	mov	arg01, local02
	call	#_SPI_Write
	call	#_SPI_Disable
	mov	ptra, fp
	call	#popregs_
_wr8_ret
	ret

_rd32
	mov	COUNT_, #3
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	drvl	#30
	sub	fp, #4
	shr	arg01, #16
	and	arg01, #63
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	shr	arg01, #8
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #8
	mov	arg01, fp
	sub	fp, #8
	mov	arg02, #4
	call	#_SPI_ReadBuffer
	call	#_SPI_Disable
	add	fp, #8
	rdbyte	result1, fp
	add	fp, #1
	rdbyte	local01, fp
	shl	local01, #8
	add	result1, local01
	add	fp, #1
	rdbyte	local02, fp
	shl	local02, #16
	add	result1, local02
	add	fp, #1
	rdbyte	local03, fp
	shl	local03, #24
	add	result1, local03
	add	fp, #1
	wrlong	result1, fp
	sub	fp, #12
	mov	ptra, fp
	call	#popregs_
_rd32_ret
	ret

_rd16
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #12
	add	fp, #4
	wrlong	arg01, fp
	drvl	#30
	sub	fp, #4
	shr	arg01, #16
	and	arg01, #63
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	shr	arg01, #8
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #8
	mov	arg01, fp
	sub	fp, #8
	mov	arg02, #2
	call	#_SPI_ReadBuffer
	call	#_SPI_Disable
	add	fp, #8
	rdbyte	result1, fp
	sub	fp, #8
	zerox	result1, #7
	mov	ptra, fp
	call	#popregs_
_rd16_ret
	ret

_rd8
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #12
	add	fp, #4
	wrlong	arg01, fp
	drvl	#30
	sub	fp, #4
	shr	arg01, #16
	and	arg01, #63
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	shr	arg01, #8
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #4
	rdlong	arg01, fp
	sub	fp, #4
	and	arg01, #255
	call	#_SPI_Write
	add	fp, #8
	mov	arg01, fp
	sub	fp, #8
	mov	arg02, #1
	call	#_SPI_ReadBuffer
	call	#_SPI_Disable
	add	fp, #8
	rdbyte	result1, fp
	sub	fp, #8
	mov	ptra, fp
	call	#popregs_
_rd8_ret
	ret

_rd_n
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	drvl	#30
	mov	arg01, local02
	shr	arg01, #16
	and	arg01, #63
	call	#_SPI_Write
	getbyte	arg01, local02, #1
	call	#_SPI_Write
	and	local02, #255
	mov	arg01, local02
	call	#_SPI_Write
	mov	arg01, local01
	mov	arg02, local03
	call	#_SPI_ReadBuffer
	call	#_SPI_Disable
	mov	ptra, fp
	call	#popregs_
_rd_n_ret
	ret

_Send_CMD
	mov	COUNT_, #2
	call	#pushregs_
	rdword	local01, ptr__dat__
	add	local01, ##3178496
	mov	arg02, arg01
	mov	arg01, local01
	call	#_wr32
	rdword	local02, ptr__dat__
	add	local02, #4
	wrword	local02, ptr__dat__
	rdword	local02, ptr__dat__
	abs	local01, local02 wc
	and	local01, ##4095
 if_b	neg	local01, local01
	wrword	local01, ptr__dat__
	mov	ptra, fp
	call	#popregs_
_Send_CMD_ret
	ret

_Cmd_READ_REG_ID
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #8
	drvl	#30
	mov	arg01, #48
	call	#_SPI_Write
	mov	arg01, #32
	call	#_SPI_Write
	mov	arg01, #0
	call	#_SPI_Write
	add	fp, #4
	mov	arg01, fp
	sub	fp, #4
	mov	arg02, #1
	call	#_SPI_ReadBuffer
	call	#_SPI_Disable
	add	fp, #4
	rdbyte	local01, fp
	sub	fp, #4
	zerox	local01, #7
	cmp	local01, #124 wz
 if_ne	jmp	#LR__0056
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg02, ##@LR__0717
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	fp, #4
	rdbyte	arg02, fp
	sub	fp, #4
	zerox	arg02, #7
	mov	arg01, #0
	mov	arg03, ##196608
	mov	arg04, #16
	call	#__system___basic_print_unsigned
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	jmp	#LR__0057
LR__0056
	mov	arg02, ##@LR__0718
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #124
	mov	arg03, #0
	mov	arg04, #10
	call	#__system___basic_print_integer
	mov	arg02, ##@LR__0719
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	fp, #4
	rdbyte	arg02, fp
	sub	fp, #4
	zerox	arg02, #7
	mov	arg01, #0
	mov	arg03, #0
	mov	arg04, #10
	call	#__system___basic_print_integer
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #0
LR__0057
	mov	ptra, fp
	call	#popregs_
_Cmd_READ_REG_ID_ret
	ret

_Cmd_Number
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, arg05
	neg	arg01, #210
	call	#_Send_CMD
	zerox	local02, #15
	shl	local02, #16
	zerox	local01, #15
	or	local02, local01
	mov	arg01, local02
	call	#_Send_CMD
	zerox	local04, #15
	shl	local04, #16
	zerox	local03, #15
	or	local04, local03
	mov	arg01, local04
	call	#_Send_CMD
	mov	arg01, local05
	call	#_Send_CMD
	mov	ptra, fp
	call	#popregs_
_Cmd_Number_ret
	ret

_Cmd_Text
	mov	COUNT_, #27
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, arg05
	mov	arg01, local05
	mov	local06, #0
	loc	pa,	#(@LR__0059-@LR__0058)
	call	#FCACHE_LOAD_
LR__0058
	rdbyte	local07, arg01 wz
 if_ne	add	local06, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0058
LR__0059
	mov	result1, local06
	mov	local08, result1 wz
 if_e	jmp	#LR__0068
	mov	local09, local08
	zerox	local09, #15
	abs	local10, local09 wc
	shr	local10, #2
 if_b	neg	local10, local10
	add	local10, #1
	qmul	local10, #4
	getqx	arg01
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local11, result1
	mov	local12, #0
	mov	local13, #0
	loc	pa,	#(@LR__0061-@LR__0060)
	call	#FCACHE_LOAD_
LR__0060
	mov	local10, local13
	zerox	local10, #15
	mov	local09, local08
	zerox	local09, #15
	abs	local14, local09 wc
	shr	local14, #2
 if_b	neg	local14, local14
	cmps	local10, local14 wcz
 if_ae	jmp	#LR__0062
	mov	local15, local13
	shl	local15, #2
	add	local15, local11
	mov	local16, local12
	zerox	local16, #15
	add	local16, #3
	add	local16, local05
	rdbyte	local17, local16
	shl	local17, #24
	mov	local18, local12
	zerox	local18, #15
	add	local18, #2
	add	local18, local05
	rdbyte	local19, local18
	shl	local19, #16
	or	local17, local19
	mov	local20, local12
	zerox	local20, #15
	add	local20, #1
	add	local20, local05
	rdbyte	local21, local20
	shl	local21, #8
	or	local17, local21
	mov	local22, local12
	add	local22, local05
	rdbyte	local23, local22
	or	local17, local23
	wrlong	local17, local15
	add	local13, #1
	zerox	local12, #15
	add	local12, #4
	jmp	#LR__0060
LR__0061
LR__0062
	mov	local24, #0
	loc	pa,	#(@LR__0064-@LR__0063)
	call	#FCACHE_LOAD_
LR__0063
	mov	local10, local24
	zerox	local10, #15
	mov	local09, local08
	zerox	local09, #15
	abs	local14, local09 wc
	and	local14, #3
 if_b	neg	local14, local14
	cmps	local10, local14 wcz
 if_ae	jmp	#LR__0065
	mov	local15, local13
	shl	local15, #2
	add	local15, local11
	mov	local25, local13
	shl	local25, #2
	add	local25, local11
	mov	local19, local12
	add	local19, local05
	rdbyte	local26, local19
	mov	local27, local24
	zerox	local27, #15
	shl	local27, #3
	shl	local26, local27
	rdlong	local17, local25
	or	local17, local26
	wrlong	local17, local15
	add	local24, #1
	add	local12, #1
	jmp	#LR__0063
LR__0064
LR__0065
	neg	arg01, #244
	call	#_Send_CMD
	zerox	local02, #15
	shl	local02, #16
	zerox	local01, #15
	or	local02, local01
	mov	arg01, local02
	call	#_Send_CMD
	mov	arg01, local04
	zerox	arg01, #15
	shl	arg01, #16
	mov	local09, local03
	zerox	local09, #15
	or	arg01, local09
	call	#_Send_CMD
	mov	local24, #0
LR__0066
	mov	local10, local24
	zerox	local10, #15
	mov	local09, local08
	zerox	local09, #15
	abs	local14, local09 wc
	shr	local14, #2
 if_b	neg	local14, local14
	cmps	local10, local14 wcz
 if_a	jmp	#LR__0067
	mov	local15, local24
	shl	local15, #2
	add	local15, local11
	rdlong	arg01, local15
	call	#_Send_CMD
	add	local24, #1
	jmp	#LR__0066
LR__0067
	mov	arg01, local11
	call	#__system___gc_free
LR__0068
	mov	ptra, fp
	call	#popregs_
_Cmd_Text_ret
	ret

_Cmd_Translate
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	neg	arg01, #217
	call	#_Send_CMD
	mov	arg01, local01
	call	#_Send_CMD
	mov	arg01, local02
	call	#_Send_CMD
	mov	ptra, fp
	call	#popregs_
_Cmd_Translate_ret
	ret

_CoProFIFO_FreeSpace
	mov	COUNT_, #2
	call	#pushregs_
	mov	arg01, ##3154168
	call	#_rd16
	mov	local01, result1
	mov	arg01, ##3154172
	call	#_rd16
	zerox	result1, #15
	zerox	local01, #15
	sub	result1, local01
	abs	local02, result1 wc
	and	local02, ##4095
 if_b	neg	local02, local02
	zerox	local02, #15
	mov	result1, ##4092
	sub	result1, local02
	mov	ptra, fp
	call	#popregs_
_CoProFIFO_FreeSpace_ret
	ret

_Wait4CoProFIFOEmpty
	mov	COUNT_, #5
	call	#pushregs_
	add	ptra, #32
	add	fp, #20
	wrbyte	#0, fp
	sub	fp, #20
	mov	arg01, ##3154172
	call	#_rd16
	mov	local01, result1
	add	fp, #8
	wrword	local01, fp
	sub	fp, #8
LR__0069
	mov	arg01, ##3154168
	call	#_rd16
	add	fp, #4
	wrword	result1, fp
	rdword	local02, fp
	sub	fp, #4
	zerox	local02, #15
	cmp	local02, ##4095 wz
 if_ne	jmp	#LR__0072
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg02, ##@LR__0720
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	fp, #24
	wrbyte	#0, fp
	sub	fp, #24
LR__0070
	add	fp, #24
	rdbyte	local01, fp
	sub	fp, #24
	zerox	local01, #7
	mov	arg01, ##3184640
	add	arg01, local01
	call	#_rd8
	add	fp, #12
	wrbyte	result1, fp
	add	fp, #12
	rdbyte	local03, fp
	add	local03, #1
	wrbyte	local03, fp
	sub	fp, #8
	mov	arg01, fp
	mov	arg02, ##@LR__0721
	sub	fp, #4
	rdbyte	local04, fp
	sub	fp, #12
	zerox	local04, #7
	mov	arg03, ptra
	wrlong	local04, ptra++
	call	#_sprintf
	sub	ptra, #4
	add	fp, #16
	mov	arg01, fp
	sub	fp, #16
	call	#_printf
	add	fp, #12
	rdbyte	local02, fp
	sub	fp, #12
	zerox	local02, #7 wz
 if_e	jmp	#LR__0071
	add	fp, #24
	rdbyte	local03, fp
	sub	fp, #24
	zerox	local03, #7
	cmp	local03, #128 wcz
 if_b	jmp	#LR__0070
LR__0071
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	arg01, ##3182946
	call	#_rd16
	add	fp, #28
	wrword	result1, fp
	sub	fp, #28
	mov	arg01, ##3153952
	mov	arg02, #1
	call	#_wr32
	mov	arg01, ##3154168
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154172
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154176
	mov	arg02, #0
	call	#_wr32
	mov	arg01, ##3154032
	mov	arg02, #0
	call	#_wr32
	wrword	#0, ptr__dat__
	rdword	local01, ptr__dat__
	add	fp, #8
	wrword	local01, fp
	sub	fp, #8
	mov	arg01, ##3153952
	mov	arg02, #0
	call	#_wr32
	mov	arg01, #100
	call	#__system___waitms
	add	fp, #28
	rdword	arg02, fp
	sub	fp, #28
	mov	arg01, ##3182946
	call	#_wr16
LR__0072
	add	fp, #20
	rdbyte	local02, fp
	rdbyte	local05, fp
	add	local05, #1
	wrbyte	local05, fp
	sub	fp, #20
	zerox	local02, #7
	cmp	local02, #100 wz
 if_ne	jmp	#LR__0073
	mov	arg02, ##@LR__0722
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	fp, #8
	rdword	arg02, fp
	sub	fp, #8
	zerox	arg02, #15
	mov	arg01, #0
	mov	arg03, #0
	mov	arg04, #10
	call	#__system___basic_print_unsigned
	mov	arg02, ##@LR__0723
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	fp, #4
	rdword	arg02, fp
	sub	fp, #4
	zerox	arg02, #15
	mov	arg01, #0
	mov	arg03, #0
	mov	arg04, #10
	call	#__system___basic_print_unsigned
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #0
	jmp	#LR__0074
LR__0073
	mov	arg01, #2
	call	#__system___waitms
	add	fp, #4
	rdword	local02, fp
	add	fp, #4
	rdword	local03, fp
	sub	fp, #8
	zerox	local03, #15
	cmp	local02, local03 wz
 if_ne	jmp	#LR__0069
	mov	result1, #1
LR__0074
	mov	ptra, fp
	call	#popregs_
_Wait4CoProFIFOEmpty_ret
	ret

_StartCoProTransfer
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	drvl	#30
	cmp	arg02, #0 wz
 if_e	jmp	#LR__0075
	mov	arg01, local01
	shr	arg01, #16
	call	#_SPI_Write
	mov	arg01, local01
	shr	arg01, #8
	call	#_SPI_Write
	mov	arg01, local01
	call	#_SPI_Write
	mov	arg01, #0
	call	#_SPI_Write
	jmp	#LR__0076
LR__0075
	mov	arg01, local01
	shr	arg01, #16
	or	arg01, #128
	call	#_SPI_Write
	mov	arg01, local01
	shr	arg01, #8
	call	#_SPI_Write
	mov	arg01, local01
	call	#_SPI_Write
LR__0076
	mov	ptra, fp
	call	#popregs_
_StartCoProTransfer_ret
	ret

_CoProWrCmdBuf
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
LR__0077
	mov	arg01, #16
LR__0078
	call	#_CoProFIFO_FreeSpace
	mov	local03, result1
	zerox	local03, #15
	cmp	local03, #16 wcz
 if_b	jmp	#LR__0078
	cmps	local02, #16 wcz
 if_a	mov	local04, #16
 if_be	mov	local04, local02
 if_be	add	local04, #3
 if_be	and	local04, ##4092
	rdword	arg01, ptr__dat__
	add	arg01, ##3178496
	mov	arg02, #0
	call	#_StartCoProTransfer
	mov	arg01, local01
	mov	arg02, local04
	call	#_SPI_WriteBuffer
	add	local01, local04
	rdword	local05, ptr__dat__
	add	local05, local04
	abs	local06, local05 wc
	and	local06, ##4095
 if_b	neg	local06, local06
	wrword	local06, ptr__dat__
	call	#_SPI_Disable
	rdword	arg02, ptr__dat__
	mov	arg01, ##3154172
	call	#_wr16
	sub	local02, local04
	cmps	local02, #0 wcz
 if_a	jmp	#LR__0077
	mov	ptra, fp
	call	#popregs_
_CoProWrCmdBuf_ret
	ret

_begin
	mov	COUNT_, #1
	call	#pushregs_
	mov	arg01, ##2000000
	call	#__system___setbaud
	mov	arg02, ##@LR__0724
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	call	#_FT81x_Init
	mov	local01, ##@LR__0725
	call	#__vfs_open_host
	mov	arg02, result1
	mov	arg01, local01
	call	#__mount
	mov	arg01, ##@LR__0726
	call	#_chdir
	call	#_CalibrateResistiveTouch
	neg	arg01, #256
	call	#_Send_CMD
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#_ClearColorRGB
	mov	arg01, ##637534215
	call	#_Send_CMD
	call	#_swap
	add	ptr__dat__, ##1092
	wrbyte	#4, ptr__dat__
	sub	ptr__dat__, ##1092
	mov	ptra, fp
	call	#popregs_
_begin_ret
	ret

_CalibrateResistiveTouch
	mov	COUNT_, #3
	call	#pushregs_
	add	ptra, #52
	decod	arg01, #25
	call	#_Send_CMD
	mov	arg01, ##637534215
	call	#_Send_CMD
	mov	arg05, ##@LR__0727
	mov	arg01, #240
	mov	arg02, #181
	mov	arg03, #27
	mov	arg04, ##1536
	call	#_Cmd_Text
	neg	arg01, #235
	call	#_Send_CMD
	mov	arg01, #0
	call	#_Send_CMD
	mov	arg01, #0
	call	#_Send_CMD
	neg	arg01, #255
	call	#_Send_CMD
	rdword	arg02, ptr__dat__
	mov	arg01, ##3154172
	call	#_wr16
	mov	arg01, ##3154172
	call	#_rd16
	mov	local01, result1
	add	fp, #4
	wrword	local01, fp
	sub	fp, #4
LR__0079
	mov	arg01, #100
	call	#__system___waitms
	mov	arg01, ##3154168
	call	#_rd16
	wrword	result1, fp
	rdword	local02, fp
	add	fp, #4
	rdword	local01, fp
	sub	fp, #4
	zerox	local01, #15
	cmp	local02, local01 wz
 if_ne	jmp	#LR__0079
	mov	arg01, #500
	call	#__system___waitms
	add	fp, #8
	mov	arg01, fp
	sub	fp, #8
	mov	arg02, ##@LR__0728
	call	#__system____builtin_strcpy
	add	fp, #8
	mov	arg01, fp
	sub	fp, #8
	mov	arg02, ##@LR__0729
	call	#_fopen
	add	fp, #20
	wrlong	result1, fp
	rdlong	local02, fp wz
	sub	fp, #20
 if_ne	jmp	#LR__0080
	add	fp, #8
	mov	arg02, fp
	sub	fp, #8
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg02, ##@LR__0730
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
LR__0080
	add	fp, #24
	mov	arg01, fp
	sub	fp, #24
	mov	arg02, ##3154256
	mov	arg03, #24
	call	#_rd_n
	add	fp, #24
	mov	arg01, fp
	sub	fp, #4
	rdlong	arg04, fp
	sub	fp, #20
	mov	arg02, #1
	mov	arg03, #24
	call	#_fwrite
	mov	local03, result1
	add	fp, #48
	wrlong	local03, fp
	sub	fp, #28
	rdlong	arg01, fp
	sub	fp, #20
	call	#__closeraw
	mov	arg02, ##@LR__0731
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	add	fp, #8
	mov	arg02, fp
	sub	fp, #8
	mov	arg01, #0
	mov	arg03, #0
	call	#__system___basic_print_string
	mov	arg01, #0
	mov	arg02, #10
	mov	arg03, #0
	call	#__system___basic_print_char
	mov	result1, #1
	mov	ptra, fp
	call	#popregs_
_CalibrateResistiveTouch_ret
	ret

_ClearColorRGB
	mov	COUNT_, #3
	call	#pushregs_
	and	arg01, #255
	shl	arg01, #16
	decod	local01, #25
	or	local01, arg01
	mov	local02, arg02
	and	local02, #255
	shl	local02, #8
	or	local01, local02
	mov	local03, arg03
	and	local03, #255
	or	local01, local03
	mov	arg01, local01
	call	#_Send_CMD
	mov	ptra, fp
	call	#popregs_
_ClearColorRGB_ret
	ret

_swap
	mov	arg01, #0
	call	#_Send_CMD
	neg	arg01, #255
	call	#_Send_CMD
	rdword	arg02, ptr__dat__
	mov	arg01, ##3154172
	call	#_wr16
	call	#_Wait4CoProFIFOEmpty
	neg	arg01, #256
	call	#_Send_CMD
_swap_ret
	ret

_ColorRGB
	mov	COUNT_, #3
	call	#pushregs_
	zerox	arg01, #7
	and	arg01, #255
	shl	arg01, #16
	decod	local01, #26
	or	local01, arg01
	mov	local02, arg02
	zerox	local02, #7
	and	local02, #255
	shl	local02, #8
	or	local01, local02
	mov	local03, arg03
	zerox	local03, #7
	and	local03, #255
	or	local01, local03
	mov	arg01, local01
	call	#_Send_CMD
	mov	ptra, fp
	call	#popregs_
_ColorRGB_ret
	ret

_Vertex2ii
	mov	COUNT_, #4
	call	#pushregs_
	zerox	arg01, #15
	and	arg01, #511
	shl	arg01, #21
	decod	local01, #31
	or	local01, arg01
	mov	local02, arg02
	zerox	local02, #15
	and	local02, #511
	shl	local02, #12
	or	local01, local02
	mov	local03, arg03
	zerox	local03, #7
	and	local03, #31
	shl	local03, #7
	or	local01, local03
	mov	local04, arg04
	zerox	local04, #7
	and	local04, #127
	or	local01, local04
	mov	arg01, local01
	call	#_Send_CMD
	mov	ptra, fp
	call	#popregs_
_Vertex2ii_ret
	ret

_get_inputs
	mov	COUNT_, #3
	call	#pushregs_
	add	ptr__dat__, ##1100
	mov	local01, ptr__dat__
	mov	arg01, local01
	mov	arg02, ##3182592
	mov	arg03, #4
	sub	ptr__dat__, ##1100
	call	#_rd_n
	mov	arg01, local01
	add	arg01, #4
	mov	arg02, ##3154208
	mov	arg03, #13
	call	#_rd_n
	add	local01, #17
	mov	arg01, local01
	mov	arg02, ##3154044
	mov	arg03, #1
	call	#_rd_n
	mov	local02, #0
	add	ptr__dat__, ##1110
	rdword	local03, ptr__dat__
	signx	local03, #15
	cmp	local03, ##-32768 wz
 if_ne	mov	local02, #1
	add	ptr__dat__, #8
	wrbyte	local02, ptr__dat__
	add	ptr__dat__, #2
	mov	local02, ptr__dat__
	sub	ptr__dat__, #10
	rdword	arg01, ptr__dat__
	signx	arg01, #15
	shl	arg01, #4
	sub	ptr__dat__, #2
	rdword	arg02, ptr__dat__
	sub	ptr__dat__, ##1108
	signx	arg02, #15
	shl	arg02, #4
	wrlong	arg01, local02
	add	local02, #4
	wrlong	arg02, local02
	mov	ptra, fp
	call	#popregs_
_get_inputs_ret
	ret

_random
	add	ptr__dat__, ##1132
	rdlong	result1, ptr__dat__
	mov	_var01, result1
	shl	_var01, #2
	xor	result1, _var01
	wrlong	result1, ptr__dat__
	mov	_var01, result1
	shr	_var01, #5
	xor	result1, _var01
	wrlong	result1, ptr__dat__
	mov	_var01, result1
	shl	_var01, #1
	xor	result1, _var01
	wrlong	result1, ptr__dat__
	sub	ptr__dat__, ##1132
_random_ret
	ret

_Vertex2f
	mov	COUNT_, #2
	call	#pushregs_
	signx	arg01, #15
	and	arg01, ##32767
	shl	arg01, #15
	decod	local01, #30
	or	local01, arg01
	mov	local02, arg02
	signx	local02, #15
	and	local02, ##32767
	or	local01, local02
	mov	arg01, local01
	call	#_Send_CMD
	mov	ptra, fp
	call	#popregs_
_Vertex2f_ret
	ret

_ScissorSize
	mov	COUNT_, #2
	call	#pushregs_
	zerox	arg01, #15
	and	arg01, ##4095
	shl	arg01, #12
	mov	local01, ##469762048
	or	local01, arg01
	mov	local02, arg02
	zerox	local02, #15
	and	local02, ##4095
	or	local01, local02
	mov	arg01, local01
	call	#_Send_CMD
	mov	ptra, fp
	call	#popregs_
_ScissorSize_ret
	ret

_ScissorXY
	mov	COUNT_, #2
	call	#pushregs_
	zerox	arg01, #15
	and	arg01, ##2047
	shl	arg01, #11
	mov	local01, ##452984832
	or	local01, arg01
	mov	local02, arg02
	zerox	local02, #15
	and	local02, ##2047
	or	local01, local02
	mov	arg01, local01
	call	#_Send_CMD
	mov	ptra, fp
	call	#popregs_
_ScissorXY_ret
	ret

_AlphaFunc
	mov	COUNT_, #2
	call	#pushregs_
	zerox	arg01, #7
	and	arg01, #7
	shl	arg01, #8
	mov	local01, ##150994944
	or	local01, arg01
	mov	local02, arg02
	zerox	local02, #7
	and	local02, #255
	or	local01, local02
	mov	arg01, local01
	call	#_Send_CMD
	mov	ptra, fp
	call	#popregs_
_AlphaFunc_ret
	ret

___wstart
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	drvl	#30
	mov	local02, local01
	shr	local02, #16
	and	local02, #63
	mov	arg01, #128
	or	arg01, local02
	call	#_SPI_Write
	getbyte	arg01, local01, #1
	call	#_SPI_Write
	and	local01, #255
	mov	arg01, local01
	call	#_SPI_Write
	mov	ptra, fp
	call	#popregs_
___wstart_ret
	ret

_finish
	mov	COUNT_, #3
	call	#pushregs_
_finish_enter
	rdword	local01, ptr__dat__
	and	local01, ##4092
	wrword	local01, ptr__dat__
	call	#_SPI_Disable
	rdword	arg02, ptr__dat__
	mov	arg01, ##3154172
	call	#_wr16
LR__0081
	call	#_rp
	mov	local01, result1
	zerox	local01, #15
	rdword	local02, ptr__dat__
	cmp	local01, local02 wz
 if_ne	jmp	#LR__0081
	call	#_SPI_Disable
	rdword	local03, ptr__dat__
	and	local03, ##4095
	mov	arg01, ##3178496
	add	arg01, local03
	call	#___wstart
	mov	ptra, fp
	call	#popregs_
_finish_ret
	ret

_rp
	mov	COUNT_, #2
	call	#pushregs_
_rp_enter
	mov	arg01, ##3154168
	call	#_rd16
	mov	local01, result1
	mov	local02, local01
	zerox	local02, #15
	cmp	local02, ##4095 wz
 if_ne	jmp	#LR__0082
	call	#_alert
LR__0082
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
_rp_ret
	ret

_alert
	mov	COUNT_, #0
	call	#pushregs_
_alert_enter
	add	ptr__dat__, ##1184
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##1184
	mov	arg02, #56
	call	#_CoProWrCmdBuf
	call	#_swap
	call	#_finish
LR__0083
	jmp	#LR__0083
	mov	ptra, fp
	call	#popregs_
_alert_ret
	ret

_getfree
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	rdword	local02, ptr__dat__
	and	local02, ##4095
	wrword	local02, ptr__dat__
	call	#_SPI_Disable
	rdword	arg02, ptr__dat__
	and	arg02, ##4092
	mov	arg01, ##3154172
	call	#_wr16
LR__0084
	rdword	local02, ptr__dat__
	call	#_rp
	mov	local03, result1
	zerox	local03, #15
	sub	local02, local03
	and	local02, ##4095
	mov	local03, local02
	zerox	local03, #15
	mov	local02, ##4092
	sub	local02, local03
	add	ptr__dat__, ##1800
	wrword	local02, ptr__dat__
	rdword	local02, ptr__dat__
	sub	ptr__dat__, ##1800
	zerox	local02, #15
	mov	local04, local01
	zerox	local04, #15
	cmp	local02, local04 wcz
 if_b	jmp	#LR__0084
	call	#_SPI_Disable
	rdword	local05, ptr__dat__
	and	local05, ##4095
	mov	arg01, ##3178496
	add	arg01, local05
	call	#___wstart
	mov	ptra, fp
	call	#popregs_
_getfree_ret
	ret

_draw_score_0150
	zerox	arg01, #7
	shl	arg01, #3
	zerox	arg02, #7
	shl	arg02, #3
	mov	arg05, arg03
	mov	arg03, #4
	mov	arg04, #5
	call	#_Cmd_Number
_draw_score_0150_ret
	ret

_frog_start
	add	ptr__dat__, ##5752
	wrlong	#120, ptr__dat__
	add	ptr__dat__, #4
	wrlong	#232, ptr__dat__
	add	ptr__dat__, #4
	wrlong	#0, ptr__dat__
	add	ptr__dat__, #4
	wrlong	#0, ptr__dat__
	add	ptr__dat__, #4
	wrlong	#0, ptr__dat__
	add	ptr__dat__, #4
	wrlong	#0, ptr__dat__
	add	ptr__dat__, #24
	wrlong	##15360, ptr__dat__
	sub	ptr__dat__, ##5796
_frog_start_ret
	ret

_level_start
	mov	_var01, #0
LR__0085
	mov	_var02, _var01
	zerox	_var02, #7
	cmp	_var02, #5 wcz
 if_ae	jmp	#LR__0086
	mov	_var03, _var01
	add	ptr__dat__, ##5785
	add	_var03, ptr__dat__
	wrbyte	#0, _var03
	add	_var01, #1
	sub	ptr__dat__, ##5785
	jmp	#LR__0085
LR__0086
_level_start_ret
	ret

_game_setup
	add	ptr__dat__, ##5744
	wrbyte	#0, ptr__dat__
	add	ptr__dat__, #40
	wrbyte	#4, ptr__dat__
	sub	ptr__dat__, #8
	wrlong	#0, ptr__dat__
	sub	ptr__dat__, ##5776
	call	#_level_start
	call	#_frog_start
_game_setup_ret
	ret

_sprite_0165
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg03
	mov	local02, arg04
	mov	local03, arg01
	zerox	local03, #7
	sub	local03, #16
	mov	local04, arg02
	zerox	local04, #7
	sub	local04, #8
	mov	local05, local02
	zerox	local05, #15
	cmp	local05, ##65535 wz
 if_e	jmp	#LR__0087
	neg	arg01, #218
	call	#_Send_CMD
	decod	arg01, #19
	decod	arg02, #19
	call	#_Cmd_Translate
	zerox	local02, #15
	neg	arg01, #215
	call	#_Send_CMD
	mov	arg01, local02
	call	#_Send_CMD
	mov	arg01, ##-524288
	mov	arg02, ##-524288
	call	#_Cmd_Translate
	neg	arg01, #214
	call	#_Send_CMD
LR__0087
	mov	local05, local03
	zerox	local05, #7
	cmp	local05, #224 wcz
 if_be	jmp	#LR__0088
	zerox	local01, #7
	mov	arg01, local01
	and	arg01, #127
	bith	arg01, #57
	call	#_Send_CMD
	zerox	local03, #7
	sub	local03, #256
	shl	local03, #4
	zerox	local04, #7
	shl	local04, #4
	mov	arg01, local03
	mov	arg02, local04
	call	#_Vertex2f
	jmp	#LR__0089
LR__0088
	zerox	local03, #7
	zerox	local04, #7
	mov	arg01, local03
	mov	arg02, local04
	mov	arg03, #1
	mov	arg04, local01
	call	#_Vertex2ii
LR__0089
	mov	ptra, fp
	call	#popregs_
_sprite_0165_ret
	ret

_turtle3_0167
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	ptr__dat__, ##5748
	rdlong	muldiva_, ptr__dat__
	sub	ptr__dat__, ##5748
	shr	muldiva_, #5
	mov	muldivb_, #3
	call	#unsdivide_
	mov	local03, #50
	add	local03, muldiva_
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local03
	bmask	arg04, #15
	call	#_sprite_0165
	mov	arg01, local01
	zerox	arg01, #7
	add	arg01, #16
	mov	arg02, local02
	mov	arg03, local03
	bmask	arg04, #15
	call	#_sprite_0165
	zerox	local01, #7
	add	local01, #32
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local03
	bmask	arg04, #15
	call	#_sprite_0165
	mov	ptra, fp
	call	#popregs_
_turtle3_0167_ret
	ret

_turtle2_0169
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	ptr__dat__, ##5748
	rdlong	muldiva_, ptr__dat__
	sub	ptr__dat__, ##5748
	shr	muldiva_, #5
	mov	muldivb_, #3
	call	#unsdivide_
	mov	local03, #50
	add	local03, muldiva_
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local03
	bmask	arg04, #15
	call	#_sprite_0165
	zerox	local01, #7
	add	local01, #16
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local03
	bmask	arg04, #15
	call	#_sprite_0165
	mov	ptra, fp
	call	#popregs_
_turtle2_0169_ret
	ret

_log
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	arg01, local02
	mov	arg02, local03
	mov	arg03, #86
	bmask	arg04, #15
	call	#_sprite_0165
LR__0090
	mov	local04, local01 wz
	sub	local01, #1
 if_e	jmp	#LR__0091
	zerox	local02, #7
	add	local02, #16
	mov	arg01, local02
	mov	arg02, local03
	mov	arg03, #87
	bmask	arg04, #15
	call	#_sprite_0165
	jmp	#LR__0090
LR__0091
	zerox	local02, #7
	add	local02, #16
	mov	arg01, local02
	mov	arg02, local03
	mov	arg03, #88
	bmask	arg04, #15
	call	#_sprite_0165
	mov	ptra, fp
	call	#popregs_
_log_ret
	ret

_riverat_0170
	mov	_var01, arg01
	zerox	_var01, #7
	cmp	_var01, #120 wz
 if_e	jmp	#LR__0092
	mov	_var01, arg01
	zerox	_var01, #7
	cmp	_var01, #104 wz
 if_e	jmp	#LR__0093
	mov	_var01, arg01
	zerox	_var01, #7
	cmp	_var01, #88 wz
 if_e	jmp	#LR__0094
	mov	_var01, arg01
	zerox	_var01, #7
	cmp	_var01, #72 wz
 if_e	jmp	#LR__0095
	zerox	arg01, #7
	cmp	arg01, #56 wz
 if_e	jmp	#LR__0096
	jmp	#LR__0097
LR__0092
	mov	_var01, arg02
	zerox	_var01, #15
	neg	result1, _var01
	jmp	#_riverat_0170_ret
LR__0093
	mov	result1, arg02
	zerox	result1, #15
	jmp	#_riverat_0170_ret
LR__0094
	mov	_var01, arg02
	zerox	_var01, #15
	mov	_var02, _var01
	shl	_var02, #2
	add	_var02, _var01
	abs	_var03, _var02 wc
	shr	_var03, #2
 if_b	neg	_var03, _var03
	mov	result1, _var03
	jmp	#_riverat_0170_ret
LR__0095
	mov	_var01, arg02
	zerox	_var01, #15
	neg	_var01, _var01
	abs	_var02, _var01 wc
	shr	_var02, #1
 if_b	neg	_var02, _var02
	mov	result1, _var02
	jmp	#_riverat_0170_ret
LR__0096
	mov	_var01, arg02
	zerox	_var01, #15
	abs	_var02, _var01 wc
	shr	_var02, #1
 if_b	neg	_var02, _var02
	mov	result1, _var02
	jmp	#_riverat_0170_ret
LR__0097
_riverat_0170_ret
	ret

_squarewave_0171
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	mov	arg01, ##3154052
	call	#_wr8
	zerox	local01, #15
	shl	local01, #8
	or	local01, #1
	mov	arg01, ##3154056
	mov	arg02, local01
	call	#_wr16
	mov	arg01, ##3154060
	mov	arg02, #1
	call	#_wr8
	mov	ptra, fp
	call	#popregs_
_squarewave_0171_ret
	ret

_sound_0173
	mov	COUNT_, #4
	call	#pushregs_
	add	ptr__dat__, ##5772
	rdlong	local01, ptr__dat__ wz
	sub	ptr__dat__, ##5772
 if_e	jmp	#LR__0098
	add	ptr__dat__, ##5772
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5772
	abs	local03, local02 wc
	shr	local03, #1
 if_b	neg	local03, local03
	mov	arg01, #84
	sub	arg01, local03
	zerox	arg01, #7
	mov	arg02, #100
	call	#_squarewave_0171
	jmp	#LR__0103
LR__0098
	add	ptr__dat__, ##5760
	rdlong	local01, ptr__dat__ wz
	sub	ptr__dat__, ##5760
 if_e	jmp	#LR__0101
	add	ptr__dat__, ##5760
	rdlong	local01, ptr__dat__
	sub	ptr__dat__, ##5760
	test	local01, #1 wz
 if_e	jmp	#LR__0099
	mov	local04, #60
	add	ptr__dat__, ##5760
	rdlong	local03, ptr__dat__
	sub	ptr__dat__, ##5760
	add	local04, local03
	jmp	#LR__0100
LR__0099
	mov	local04, #72
	add	ptr__dat__, ##5760
	rdlong	local03, ptr__dat__
	sub	ptr__dat__, ##5760
	add	local04, local03
LR__0100
	zerox	local04, #7
	mov	arg01, local04
	mov	arg02, #100
	call	#_squarewave_0171
	jmp	#LR__0102
LR__0101
	mov	arg01, #0
	mov	arg02, #0
	call	#_squarewave_0171
LR__0102
LR__0103
	mov	ptra, fp
	call	#popregs_
_sound_0173_ret
	ret

_rotate_around_0174
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	neg	arg01, #218
	call	#_Send_CMD
	mov	arg01, local01
	shl	arg01, #16
	mov	arg02, local02
	shl	arg02, #16
	call	#_Cmd_Translate
	neg	arg01, #215
	call	#_Send_CMD
	mov	arg01, local03
	call	#_Send_CMD
	neg	arg01, local01
	shl	arg01, #16
	neg	arg02, local02
	shl	arg02, #16
	call	#_Cmd_Translate
	neg	arg01, #214
	call	#_Send_CMD
	mov	ptra, fp
	call	#popregs_
_rotate_around_0174_ret
	ret

_game_over
	mov	COUNT_, #10
	call	#pushregs_
	mov	arg01, ##3154052
	mov	arg02, #0
	call	#_wr8
	mov	local01, #0
LR__0104
	mov	local02, local01
	zerox	local02, #7
	cmp	local02, #60 wcz
 if_ae	jmp	#LR__0106
	mov	arg01, ##637534215
	call	#_Send_CMD
	mov	local03, #160
	mov	local04, #50
	mov	local05, #24
	mov	arg01, #1
	zerox	arg01, #7
	and	arg01, #15
	bith	arg01, #152
	call	#_Send_CMD
	mov	arg01, local03
	mov	arg02, #50
	mov	arg03, #1
	mov	arg04, #90
	call	#_Vertex2ii
	add	local03, #24
	mov	arg01, local03
	mov	arg02, #50
	mov	arg03, #1
	mov	arg04, #91
	call	#_Vertex2ii
	add	local03, #24
	mov	arg01, local03
	mov	arg02, #50
	mov	arg03, #1
	mov	arg04, #92
	call	#_Vertex2ii
	add	local03, #24
	mov	arg01, local03
	mov	arg02, #50
	mov	arg03, #1
	mov	arg04, #93
	call	#_Vertex2ii
	add	local03, #24
	mov	arg01, local03
	mov	arg02, #50
	mov	arg03, #1
	mov	arg04, #93
	call	#_Vertex2ii
	add	local03, #24
	mov	arg01, local03
	mov	arg02, #50
	mov	arg03, #1
	mov	arg04, #94
	call	#_Vertex2ii
	add	local03, #24
	mov	arg01, local03
	mov	arg02, #50
	mov	arg03, #1
	mov	arg04, #91
	call	#_Vertex2ii
	add	local03, #24
	mov	local06, #136
	mov	local07, #4
	mov	local08, ##1536
	mov	local09, ##@LR__0732
	mov	arg01, #240
	mov	arg02, #136
	mov	arg03, #4
	mov	arg04, ##1536
	mov	arg05, local09
	call	#_Cmd_Text
	mov	local10, local01
	zerox	local10, #7
	cmp	local10, #59 wz
 if_ne	jmp	#LR__0105
	mov	arg05, ##@LR__0733
	mov	arg01, #240
	mov	arg02, #200
	mov	arg03, #4
	mov	arg04, ##1536
	call	#_Cmd_Text
LR__0105
	call	#_swap
	add	local01, #1
	jmp	#LR__0104
LR__0106
LR__0107
	add	ptr__dat__, ##1110
	rdword	local02, ptr__dat__
	sub	ptr__dat__, ##1110
	signx	local02, #15
	cmp	local02, ##-32768 wz
 if_ne	jmp	#LR__0108
	call	#_get_inputs
	jmp	#LR__0107
LR__0108
LR__0109
	add	ptr__dat__, ##1110
	rdword	local02, ptr__dat__
	sub	ptr__dat__, ##1110
	signx	local02, #15
	cmp	local02, ##-32768 wz
 if_e	jmp	#LR__0110
	call	#_get_inputs
	jmp	#LR__0109
LR__0110
	mov	ptra, fp
	call	#popregs_
_game_over_ret
	ret

_loop
	mov	COUNT_, #30
	call	#pushregs_
	mov	local01, #0
	mov	arg01, ##637534215
	call	#_Send_CMD
	mov	arg01, #1
	zerox	arg01, #7
	and	arg01, #255
	bith	arg01, #56
	call	#_Send_CMD
	mov	arg01, #1
	zerox	arg01, #7
	and	arg01, #31
	or	arg01, ##83886080
	call	#_Send_CMD
	mov	arg01, ##570425344
	call	#_Send_CMD
	mov	arg01, #0
	mov	arg02, #0
	call	#_ScissorXY
	add	ptr__dat__, ##5741
	rdbyte	local02, ptr__dat__
	mov	arg01, local02
	shl	arg01, #3
	sub	arg01, local02
	shl	arg01, #5
	rdbyte	local03, ptr__dat__
	sub	ptr__dat__, ##5741
	zerox	local03, #7
	shl	local03, #8
	mov	arg02, local03
	call	#_ScissorSize
	mov	arg01, #1
	zerox	arg01, #7
	and	arg01, #15
	bith	arg01, #152
	call	#_Send_CMD
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	mov	arg04, #0
	call	#_Vertex2ii
	add	ptr__dat__, ##5752
	rdlong	arg02, ptr__dat__
	sub	ptr__dat__, ##5752
	sub	arg02, #8
	mov	arg01, ##3154036
	call	#_wr32
	add	ptr__dat__, ##5756
	rdlong	arg02, ptr__dat__
	sub	ptr__dat__, ##5756
	mov	arg01, ##3154040
	call	#_wr32
	mov	arg01, #2
	zerox	arg01, #7
	and	arg01, #255
	bith	arg01, #56
	call	#_Send_CMD
	mov	arg01, #3
	mov	arg02, #0
	call	#_AlphaFunc
	mov	local04, #0
LR__0111
	mov	local02, local04
	zerox	local02, #7
	cmp	local02, #5 wcz
 if_ae	jmp	#LR__0113
	mov	local05, local04
	add	ptr__dat__, ##5785
	add	local05, ptr__dat__
	rdbyte	local06, local05 wz
	sub	ptr__dat__, ##5785
 if_e	jmp	#LR__0112
	mov	local05, local04
	add	ptr__dat__, ##5790
	add	local05, ptr__dat__
	rdbyte	arg01, local05
	mov	arg02, #40
	mov	arg03, #63
	bmask	arg04, #15
	sub	ptr__dat__, ##5790
	call	#_sprite_0165
LR__0112
	add	local04, #1
	jmp	#LR__0111
LR__0113
	add	ptr__dat__, ##5748
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5748
	neg	arg01, local02
	mov	arg02, #216
	mov	arg03, #3
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5748
	neg	arg01, local02
	add	arg01, #128
	mov	arg02, #216
	mov	arg03, #3
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	arg01, ptr__dat__
	sub	ptr__dat__, ##5748
	mov	arg02, #200
	mov	arg03, #4
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	arg01, ptr__dat__
	sub	ptr__dat__, ##5748
	add	arg01, #50
	mov	arg02, #200
	mov	arg03, #4
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	arg01, ptr__dat__
	sub	ptr__dat__, ##5748
	add	arg01, #150
	mov	arg02, #200
	mov	arg03, #4
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5748
	neg	arg01, local02
	mov	arg02, #184
	mov	arg03, #7
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5748
	neg	arg01, local02
	add	arg01, #75
	mov	arg02, #184
	mov	arg03, #7
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5748
	neg	arg01, local02
	add	arg01, #150
	mov	arg02, #184
	mov	arg03, #7
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	arg01, ptr__dat__
	sub	ptr__dat__, ##5748
	shl	arg01, #1
	mov	arg02, #168
	mov	arg03, #8
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5748
	neg	local02, local02
	abs	local07, local02 wc
	shr	local07, #1
 if_b	neg	local07, local07
	mov	arg01, local07
	mov	arg02, #152
	mov	arg03, #5
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	local05, ptr__dat__
	sub	ptr__dat__, ##5748
	neg	local05, local05
	abs	local02, local05 wc
	shr	local02, #1
 if_b	neg	local02, local02
	add	local02, #16
	mov	arg01, local02
	mov	arg02, #152
	mov	arg03, #6
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	local05, ptr__dat__
	sub	ptr__dat__, ##5748
	neg	local05, local05
	abs	local02, local05 wc
	shr	local02, #1
 if_b	neg	local02, local02
	add	local02, #100
	mov	arg01, local02
	mov	arg02, #152
	mov	arg03, #5
	bmask	arg04, #15
	call	#_sprite_0165
	add	ptr__dat__, ##5748
	rdlong	local05, ptr__dat__
	sub	ptr__dat__, ##5748
	neg	local05, local05
	abs	local02, local05 wc
	shr	local02, #1
 if_b	neg	local02, local02
	add	local02, #116
	mov	arg01, local02
	mov	arg02, #152
	mov	arg03, #6
	bmask	arg04, #15
	call	#_sprite_0165
	mov	arg01, #3
	mov	arg02, #0
	call	#_AlphaFunc
	mov	local08, #0
LR__0114
	cmps	local08, #256 wcz
 if_ae	jmp	#LR__0115
	add	ptr__dat__, ##5748
	rdlong	local06, ptr__dat__
	sub	ptr__dat__, ##5748
	mov	local07, local06
	mov	arg01, #120
	mov	arg02, local07
	call	#_riverat_0170
	mov	local09, result1
	mov	local10, local09
	add	local10, local08
	mov	local11, #120
	mov	arg01, local10
	mov	arg02, #120
	call	#_turtle3_0167
	add	local08, #64
	jmp	#LR__0114
LR__0115
	mov	local12, #0
LR__0116
	cmps	local12, #240 wcz
 if_ae	jmp	#LR__0117
	mov	local02, #1
	add	ptr__dat__, ##5748
	rdlong	arg02, ptr__dat__
	sub	ptr__dat__, ##5748
	mov	arg01, #104
	call	#_riverat_0170
	mov	arg02, result1
	add	arg02, local12
	mov	local03, #104
	mov	arg01, local02
	mov	arg03, #104
	call	#_log
	add	local12, #80
	jmp	#LR__0116
LR__0117
	mov	local13, #0
LR__0118
	cmps	local13, #256 wcz
 if_ae	jmp	#LR__0119
	mov	local02, #5
	add	ptr__dat__, ##5748
	rdlong	arg02, ptr__dat__
	sub	ptr__dat__, ##5748
	mov	arg01, #88
	call	#_riverat_0170
	mov	arg02, result1
	add	arg02, local13
	mov	arg01, local02
	mov	arg03, #88
	call	#_log
	add	local13, #128
	jmp	#LR__0118
LR__0119
	mov	local14, #0
LR__0120
	cmps	local14, #250 wcz
 if_ae	jmp	#LR__0121
	add	ptr__dat__, ##5748
	rdlong	arg02, ptr__dat__
	sub	ptr__dat__, ##5748
	mov	arg01, #72
	call	#_riverat_0170
	mov	arg01, result1
	add	arg01, local14
	mov	arg02, #72
	call	#_turtle2_0169
	add	local14, #50
	jmp	#LR__0120
LR__0121
	mov	local15, #0
LR__0122
	cmps	local15, #210 wcz
 if_ae	jmp	#LR__0123
	mov	local02, #2
	add	ptr__dat__, ##5748
	rdlong	arg02, ptr__dat__
	sub	ptr__dat__, ##5748
	mov	arg01, #56
	call	#_riverat_0170
	mov	arg02, result1
	add	arg02, local15
	mov	arg01, local02
	mov	arg03, #56
	call	#_log
	add	local15, #70
	jmp	#LR__0122
LR__0123
	mov	arg01, #0
	zerox	arg01, #7
	and	arg01, #1
	or	arg01, ##335544320
	call	#_Send_CMD
	add	ptr__dat__, ##5772
	rdlong	local02, ptr__dat__ wz
	sub	ptr__dat__, ##5772
 if_ne	jmp	#LR__0124
	add	ptr__dat__, ##5752
	rdlong	arg01, ptr__dat__
	add	ptr__dat__, #4
	rdlong	arg02, ptr__dat__
	add	ptr__dat__, #4
	rdlong	local11, ptr__dat__
	mov	local10, local11
	abs	local09, local10 wc
	shr	local09, #1
 if_b	neg	local09, local09
	mov	local03, local09
	add	ptr__dat__, #48
	mov	local16, ptr__dat__
	add	local03, ptr__dat__
	rdbyte	local17, local03
	sub	ptr__dat__, #40
	rdlong	local18, ptr__dat__
	sub	ptr__dat__, ##5768
	mov	local19, local18
	mov	arg03, local17
	mov	arg04, local19
	call	#_sprite_0165
	jmp	#LR__0125
LR__0124
	add	ptr__dat__, ##5752
	rdlong	arg01, ptr__dat__
	add	ptr__dat__, #4
	rdlong	arg02, ptr__dat__
	add	ptr__dat__, #16
	rdlong	local11, ptr__dat__
	mov	local10, local11
	abs	local09, local10 wc
	shr	local09, #4
 if_b	neg	local09, local09
	mov	local03, local09
	add	ptr__dat__, #41
	mov	local16, ptr__dat__
	add	local03, ptr__dat__
	rdbyte	local17, local03
	sub	ptr__dat__, #45
	rdlong	local18, ptr__dat__
	sub	ptr__dat__, ##5768
	mov	local19, local18
	mov	arg03, local17
	mov	arg04, local19
	call	#_sprite_0165
LR__0125
	add	ptr__dat__, ##5748
	rdlong	local02, ptr__dat__
	add	ptr__dat__, #56
	wrlong	local02, ptr__dat__
	sub	ptr__dat__, #56
	rdlong	local07, ptr__dat__
	add	local07, #1
	wrlong	local07, ptr__dat__
	add	ptr__dat__, #48
	rdlong	local05, ptr__dat__
	sub	ptr__dat__, ##5796
	sub	local05, #1
	cmps	local05, #0 wcz
 if_b	mov	local02, #0
 if_b	jmp	#LR__0126
	add	ptr__dat__, ##5796
	rdlong	local09, ptr__dat__
	sub	ptr__dat__, ##5796
	mov	local02, local09
	sub	local02, #1
LR__0126
	add	ptr__dat__, ##5796
	wrlong	local02, ptr__dat__
	rdlong	local05, ptr__dat__ wz
	sub	ptr__dat__, ##5796
 if_ne	jmp	#LR__0127
	add	ptr__dat__, ##5772
	rdlong	local06, ptr__dat__
	sub	ptr__dat__, ##5772
	mov	local07, local06 wz
 if_ne	jmp	#LR__0127
	mov	local02, #1
	add	ptr__dat__, ##5772
	wrlong	#1, ptr__dat__
	sub	ptr__dat__, ##5772
LR__0127
	add	ptr__dat__, ##5796
	rdlong	local05, ptr__dat__
	sub	ptr__dat__, ##5796
	sar	local05, #7
	mov	local20, #120
	sub	local20, local05
	mov	local21, #72
	mov	arg01, ##570425344
	call	#_Send_CMD
	mov	arg01, #72
	zerox	arg01, #7
	mov	arg02, #248
	call	#_ScissorXY
	mov	arg01, local20
	zerox	arg01, #7
	mov	arg02, #8
	call	#_ScissorSize
	mov	arg01, ##637534215
	call	#_Send_CMD
	mov	arg01, ##587202560
	call	#_Send_CMD
	mov	arg01, #1
	zerox	arg01, #7
	and	arg01, #1
	or	arg01, ##335544320
	call	#_Send_CMD
	mov	local22, #1
	add	ptr__dat__, ##5744
	mov	local02, ptr__dat__
	sub	ptr__dat__, ##4628
	rdbyte	arg01, ptr__dat__
	sub	ptr__dat__, ##1116
	mov	local06, objptr
	mov	objptr, local02
	call	#___struct_ControllerClass_read
	mov	objptr, local06
	mov	local09, result1
	mov	local23, local09
	add	ptr__dat__, ##5772
	rdlong	local02, ptr__dat__ wz
	sub	ptr__dat__, ##5772
 if_ne	jmp	#LR__0128
	add	ptr__dat__, ##5760
	rdlong	local07, ptr__dat__ wz
	sub	ptr__dat__, ##5760
 if_ne	jmp	#LR__0128
	cmp	local23, #0 wz
 if_e	jmp	#LR__0128
	mov	local02, local23
	zerox	local02, #7
	add	ptr__dat__, ##5764
	wrlong	local02, ptr__dat__
	sub	ptr__dat__, #4
	wrlong	#1, ptr__dat__
	add	ptr__dat__, #16
	rdlong	local02, ptr__dat__
	add	local02, #10
	wrlong	local02, ptr__dat__
	sub	ptr__dat__, ##5776
	jmp	#LR__0136
LR__0128
	add	ptr__dat__, ##5760
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5760
	cmps	local02, #0 wcz
 if_be	jmp	#LR__0135
	add	ptr__dat__, ##5760
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5760
	cmps	local02, #8 wcz
 if_a	jmp	#LR__0133
	add	ptr__dat__, ##5764
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5764
	cmp	local02, #1 wz
 if_ne	jmp	#LR__0129
	add	ptr__dat__, ##5752
	rdlong	local02, ptr__dat__
	sub	local02, #2
	wrlong	local02, ptr__dat__
	add	ptr__dat__, #16
	wrlong	##49152, ptr__dat__
	sub	ptr__dat__, ##5768
LR__0129
	add	ptr__dat__, ##5764
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5764
	cmp	local02, #2 wz
 if_ne	jmp	#LR__0130
	add	ptr__dat__, ##5752
	rdlong	local02, ptr__dat__
	add	local02, #2
	wrlong	local02, ptr__dat__
	add	ptr__dat__, #16
	wrlong	##16384, ptr__dat__
	sub	ptr__dat__, ##5768
LR__0130
	add	ptr__dat__, ##5764
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5764
	cmp	local02, #4 wz
 if_ne	jmp	#LR__0131
	add	ptr__dat__, ##5756
	rdlong	local02, ptr__dat__
	sub	local02, #2
	wrlong	local02, ptr__dat__
	add	ptr__dat__, #12
	wrlong	#0, ptr__dat__
	sub	ptr__dat__, ##5768
LR__0131
	add	ptr__dat__, ##5764
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5764
	cmp	local02, #8 wz
 if_ne	jmp	#LR__0132
	add	ptr__dat__, ##5756
	rdlong	local02, ptr__dat__
	add	local02, #2
	wrlong	local02, ptr__dat__
	add	ptr__dat__, #12
	wrlong	##32768, ptr__dat__
	sub	ptr__dat__, ##5768
LR__0132
	add	ptr__dat__, ##5760
	rdlong	local07, ptr__dat__
	add	local07, #1
	wrlong	local07, ptr__dat__
	sub	ptr__dat__, ##5760
	jmp	#LR__0134
LR__0133
	add	ptr__dat__, ##5760
	wrlong	#0, ptr__dat__
	sub	ptr__dat__, ##5760
LR__0134
LR__0135
LR__0136
	mov	arg01, ##587202560
	call	#_Send_CMD
	mov	arg01, ##570425344
	call	#_Send_CMD
	mov	arg01, #1
	zerox	arg01, #7
	and	arg01, #15
	bith	arg01, #152
	call	#_Send_CMD
	mov	arg01, #2
	zerox	arg01, #7
	and	arg01, #255
	bith	arg01, #56
	call	#_Send_CMD
	mov	arg01, #432
	mov	arg02, #176
	mov	arg03, #3
	mov	arg04, #0
	call	#_Vertex2ii
	mov	arg01, #24
	mov	arg02, #24
	mov	arg03, ##49152
	call	#_rotate_around_0174
	mov	arg01, #4
	zerox	arg01, #7
	and	arg01, #255
	bith	arg01, #56
	call	#_Send_CMD
	mov	arg01, #384
	mov	arg02, #128
	mov	arg03, #3
	mov	arg04, #0
	call	#_Vertex2ii
	mov	arg01, #24
	mov	arg02, #24
	decod	arg03, #15
	call	#_rotate_around_0174
	mov	arg01, #1
	zerox	arg01, #7
	and	arg01, #255
	bith	arg01, #56
	call	#_Send_CMD
	mov	arg01, #336
	mov	arg02, #176
	mov	arg03, #3
	mov	arg04, #0
	call	#_Vertex2ii
	mov	arg01, #24
	mov	arg02, #24
	decod	arg03, #14
	call	#_rotate_around_0174
	mov	arg01, #8
	zerox	arg01, #7
	and	arg01, #255
	bith	arg01, #56
	call	#_Send_CMD
	mov	arg01, #384
	mov	arg02, #224
	mov	arg03, #3
	mov	arg04, #0
	call	#_Vertex2ii
	mov	arg01, ##587202560
	call	#_Send_CMD
	mov	arg01, #255
	mov	arg02, #85
	mov	arg03, #0
	call	#_ColorRGB
	add	ptr__dat__, ##5776
	rdlong	arg03, ptr__dat__
	sub	ptr__dat__, ##5776
	mov	arg01, #3
	mov	arg02, #1
	call	#_draw_score_0150
	add	ptr__dat__, ##5780
	rdlong	arg03, ptr__dat__
	sub	ptr__dat__, ##5780
	mov	arg01, #11
	mov	arg02, #1
	call	#_draw_score_0150
	mov	arg01, #255
	mov	arg02, #255
	mov	arg03, #255
	call	#_ColorRGB
	mov	local24, #0
LR__0137
	mov	local02, local24
	zerox	local02, #7
	add	ptr__dat__, ##5784
	rdbyte	local05, ptr__dat__
	sub	ptr__dat__, ##5784
	zerox	local05, #7
	cmp	local02, local05 wcz
 if_ae	jmp	#LR__0138
	mov	local10, local24
	zerox	local10, #7
	shl	local10, #3
	mov	local11, #240
	mov	local03, #2
	mov	local16, #0
	mov	arg01, local10
	mov	arg02, #240
	mov	arg03, #2
	mov	arg04, #0
	call	#_Vertex2ii
	mov	local09, local24
	add	local09, #1
	mov	local24, local09
	jmp	#LR__0137
LR__0138
	mov	arg01, ##587202560
	call	#_Send_CMD
	call	#_swap
	call	#_get_inputs
	mov	arg01, ##3154044
	call	#_rd32
	mov	local25, result1
	mov	local02, #0
	mov	local05, local25
	zerox	local05, #7
	cmp	local05, #2 wz
 if_e	mov	local02, #1
	mov	local26, local02
	add	ptr__dat__, ##5772
	rdlong	local02, ptr__dat__ wz
	sub	ptr__dat__, ##5772
 if_e	jmp	#LR__0141
	add	ptr__dat__, ##5772
	rdlong	local07, ptr__dat__
	add	local07, #1
	wrlong	local07, ptr__dat__
	sub	ptr__dat__, ##5772
	cmp	local07, #64 wz
 if_ne	jmp	#LR__0158
	add	ptr__dat__, ##5784
	rdbyte	local05, ptr__dat__
	sub	local05, #1
	wrbyte	local05, ptr__dat__
	rdbyte	local02, ptr__dat__
	sub	ptr__dat__, ##5784
	zerox	local02, #7 wz
 if_e	jmp	#LR__0139
	add	ptr__dat__, ##5796
	rdlong	local10, ptr__dat__
	sub	ptr__dat__, ##5796
	mov	local09, local10 wz
 if_ne	jmp	#LR__0140
LR__0139
	call	#_game_over
	add	ptr__dat__, ##5784
	wrbyte	#4, ptr__dat__
	sub	ptr__dat__, #8
	wrlong	#0, ptr__dat__
	sub	ptr__dat__, ##5776
	call	#_level_start
LR__0140
	call	#_frog_start
	jmp	#LR__0158
LR__0141
	add	ptr__dat__, ##5752
	rdlong	local05, ptr__dat__
	sub	ptr__dat__, ##5752
	mov	local02, local05
	cmps	local02, #8 wcz
 if_b	jmp	#LR__0142
	add	ptr__dat__, ##5752
	rdlong	local06, ptr__dat__
	sub	ptr__dat__, ##5752
	mov	local07, local06
	cmps	local07, #224 wcz
 if_be	jmp	#LR__0143
LR__0142
	add	ptr__dat__, ##5772
	wrlong	#1, ptr__dat__
	sub	ptr__dat__, ##5772
	jmp	#LR__0157
LR__0143
	add	ptr__dat__, ##5756
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5756
	cmps	local02, #136 wcz
 if_b	jmp	#LR__0144
	zerox	local25, #7
	cmp	local25, #2 wz
 if_e	add	ptr__dat__, ##5772
 if_e	wrlong	#1, ptr__dat__
 if_e	sub	ptr__dat__, ##5772
	jmp	#LR__0156
LR__0144
	add	ptr__dat__, ##5756
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5756
	cmps	local02, #40 wcz
 if_be	jmp	#LR__0146
	add	ptr__dat__, ##5760
	rdlong	local02, ptr__dat__ wz
	sub	ptr__dat__, ##5760
 if_ne	jmp	#LR__0155
	zerox	local25, #7
	cmp	local25, #1 wz
 if_e	jmp	#LR__0145
	add	ptr__dat__, ##5756
	rdlong	arg01, ptr__dat__
	add	ptr__dat__, #48
	rdlong	arg02, ptr__dat__
	sub	ptr__dat__, ##5804
	call	#_riverat_0170
	mov	local27, result1
	add	ptr__dat__, ##5756
	rdlong	arg01, ptr__dat__
	sub	ptr__dat__, #8
	rdlong	arg02, ptr__dat__
	sub	ptr__dat__, ##5748
	call	#_riverat_0170
	mov	local28, result1
	sub	local28, local27
	add	ptr__dat__, ##5752
	rdlong	local02, ptr__dat__
	add	local02, local28
	wrlong	local02, ptr__dat__
	sub	ptr__dat__, ##5752
	jmp	#LR__0155
LR__0145
	add	ptr__dat__, ##5772
	wrlong	#1, ptr__dat__
	sub	ptr__dat__, ##5772
	jmp	#LR__0155
LR__0146
	add	ptr__dat__, ##5760
	rdlong	local02, ptr__dat__ wz
	sub	ptr__dat__, ##5760
 if_ne	jmp	#LR__0154
	mov	local29, #0
	mov	local30, #0
	loc	pa,	#(@LR__0149-@LR__0147)
	call	#FCACHE_LOAD_
LR__0147
	mov	local02, local30
	zerox	local02, #7
	cmp	local02, #5 wcz
 if_ae	jmp	#LR__0150
	mov	local05, local30
	add	ptr__dat__, ##5785
	mov	local07, ptr__dat__
	add	local05, ptr__dat__
	rdbyte	local06, local05 wz
	sub	ptr__dat__, ##5785
 if_ne	jmp	#LR__0148
	mov	local10, local30
	add	ptr__dat__, ##5790
	mov	local11, ptr__dat__
	add	local10, ptr__dat__
	rdbyte	local09, local10
	sub	ptr__dat__, #38
	rdlong	local16, ptr__dat__
	sub	ptr__dat__, ##5752
	mov	local03, local16
	sub	local09, local03
	abs	local09, local09
	cmps	local09, #4 wcz
 if_ae	jmp	#LR__0148
	mov	local05, local30
	add	ptr__dat__, ##5785
	add	local05, ptr__dat__
	mov	local06, #1
	wrbyte	#1, local05
	mov	local29, #1
	sub	ptr__dat__, #9
	rdlong	local07, ptr__dat__
	mov	local05, local07
	add	local05, #10
	wrlong	local05, ptr__dat__
	sub	ptr__dat__, ##5776
LR__0148
	add	local30, #1
	jmp	#LR__0147
LR__0149
LR__0150
	cmp	local29, #0 wz
 if_e	jmp	#LR__0152
	add	ptr__dat__, ##5785
	rdbyte	local05, ptr__dat__
	sub	ptr__dat__, ##5785
	mov	local02, local05 wz
 if_e	jmp	#LR__0151
	add	ptr__dat__, ##5786
	rdbyte	local06, ptr__dat__
	sub	ptr__dat__, ##5786
	mov	local07, local06 wz
 if_e	jmp	#LR__0151
	add	ptr__dat__, ##5787
	rdbyte	local10, ptr__dat__
	sub	ptr__dat__, ##5787
	mov	local09, local10 wz
 if_e	jmp	#LR__0151
	add	ptr__dat__, ##5788
	rdbyte	local03, ptr__dat__
	sub	ptr__dat__, ##5788
	mov	local11, local03 wz
 if_e	jmp	#LR__0151
	add	ptr__dat__, ##5789
	rdbyte	local17, ptr__dat__
	sub	ptr__dat__, ##5789
	mov	local16, local17 wz
 if_e	jmp	#LR__0151
	call	#_level_start
LR__0151
	call	#_frog_start
	jmp	#LR__0153
LR__0152
	add	ptr__dat__, ##5772
	wrlong	#1, ptr__dat__
	sub	ptr__dat__, ##5772
LR__0153
LR__0154
LR__0155
LR__0156
LR__0157
LR__0158
	call	#_sound_0173
	add	ptr__dat__, ##5776
	rdlong	local05, ptr__dat__
	add	ptr__dat__, #4
	rdlong	local06, ptr__dat__
	sub	ptr__dat__, ##5780
	cmps	local05, local06 wcz
 if_be	jmp	#LR__0159
	add	ptr__dat__, ##5776
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5776
	jmp	#LR__0160
LR__0159
	add	ptr__dat__, ##5780
	rdlong	local02, ptr__dat__
	sub	ptr__dat__, ##5780
LR__0160
	add	ptr__dat__, ##5780
	wrlong	local02, ptr__dat__
	sub	ptr__dat__, ##5780
	mov	ptra, fp
	call	#popregs_
_loop_ret
	ret

_setup
	call	#_begin
	add	ptr__dat__, ##1802
	mov	arg01, ptr__dat__
	sub	ptr__dat__, ##1802
	mov	arg02, ##3895
	call	#_CoProWrCmdBuf
	call	#_game_setup
_setup_ret
	ret

_main
	call	#_setup
LR__0161
	call	#_loop
	jmp	#LR__0161
_main_ret
	ret

__openraw
	mov	COUNT_, #15
	call	#pushregs_
	add	ptra, #52
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #12
	wrlong	#4, fp
	sub	fp, #24
	rdlong	local01, fp
	add	fp, #28
	wrlong	local01, fp
	add	ptr__dat__, ##6108
	mov	result1, ptr__dat__
	sub	ptr__dat__, ##6108
	add	fp, #4
	wrlong	result1, fp
	mov	arg01, result1
	sub	fp, #28
	rdlong	arg02, fp
	sub	fp, #8
	mov	arg03, #0
	call	#___getvfsforfile
	mov	local02, result1
	add	fp, #24
	wrlong	local02, fp
	sub	fp, #24
	mov	local01, local02 wz
 if_e	jmp	#LR__0162
	add	fp, #24
	rdlong	local03, fp
	sub	fp, #24
	rdlong	local04, local03 wz
 if_ne	jmp	#LR__0163
LR__0162
	add	ptr___system__dat__, ##564
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0181
LR__0163
	add	fp, #32
	rdlong	arg01, fp
	sub	fp, #32
	mov	arg02, #0
	mov	arg03, #44
	call	#__system____builtin_memset
	add	fp, #24
	rdlong	local04, fp
	rdlong	local01, local04
	rdlong	local02, local01
	add	local01, #4
	rdlong	local05, local01
	mov	local06, local05
	add	fp, #8
	rdlong	local07, fp
	mov	local08, local07
	add	fp, #4
	rdlong	local09, fp
	mov	local10, local09
	sub	fp, #24
	rdlong	local11, fp
	sub	fp, #12
	mov	local12, local11
	mov	arg01, local08
	mov	arg02, local10
	mov	arg03, local12
	mov	local13, objptr
	mov	objptr, local02
	call	local06
	mov	objptr, local13
	mov	local14, result1
	add	fp, #20
	wrlong	local14, fp
	rdlong	local01, fp wz
	sub	fp, #20
 if_e	jmp	#LR__0164
	add	fp, #12
	rdlong	local06, fp
	sub	fp, #12
	test	local06, #4 wz
 if_e	jmp	#LR__0164
	add	fp, #24
	rdlong	local04, fp
	mov	local03, local04
	add	local03, #4
	rdlong	local05, local03
	sub	local03, #4
	mov	local01, local05
	rdlong	local02, local01
	add	local01, #4
	rdlong	local08, local01
	sub	local01, #4
	mov	local06, local08
	add	fp, #8
	rdlong	local10, fp
	mov	local07, local10
	add	fp, #4
	rdlong	local12, fp
	mov	local09, local12
	sub	fp, #20
	rdlong	local13, fp
	sub	fp, #16
	mov	local11, local13
	mov	arg01, local07
	mov	arg02, local09
	mov	arg03, local11
	mov	local14, objptr
	mov	objptr, local02
	call	local06
	mov	objptr, local14
	mov	local15, result1
	add	fp, #20
	wrlong	local15, fp
	sub	fp, #20
LR__0164
	add	fp, #20
	rdlong	local01, fp wz
	sub	fp, #20
 if_ne	jmp	#LR__0180
	add	fp, #12
	rdlong	local01, fp
	and	local01, #3
	add	fp, #28
	wrlong	local01, fp
	rdlong	local01, fp wz
	sub	fp, #40
 if_e	jmp	#LR__0165
	add	fp, #28
	rdlong	local01, fp
	or	local01, #2
	wrlong	local01, fp
	sub	fp, #28
LR__0165
	add	fp, #40
	rdlong	local01, fp
	sub	fp, #40
	cmp	local01, #1 wz
 if_e	jmp	#LR__0166
	add	fp, #28
	rdlong	local01, fp
	or	local01, #1
	wrlong	local01, fp
	sub	fp, #28
LR__0166
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	test	local01, #32 wz
 if_e	jmp	#LR__0167
	add	fp, #28
	rdlong	local01, fp
	or	local01, #192
	wrlong	local01, fp
	sub	fp, #28
LR__0167
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #4
	rdlong	local06, fp
	add	local01, #8
	wrlong	local06, local01
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #32
	add	local01, #12
	rdlong	local06, local01 wz
 if_ne	jmp	#LR__0168
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #8
	rdlong	local06, fp
	sub	fp, #24
	add	local06, #12
	rdlong	local04, local06
	add	local01, #12
	wrlong	local04, local01
LR__0168
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #32
	add	local01, #16
	rdlong	local06, local01 wz
 if_ne	jmp	#LR__0169
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #8
	rdlong	local06, fp
	sub	fp, #24
	add	local06, #16
	rdlong	local04, local06
	add	local01, #16
	wrlong	local04, local01
LR__0169
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #32
	add	local01, #28
	rdlong	local06, local01 wz
 if_ne	jmp	#LR__0170
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #8
	rdlong	local06, fp
	sub	fp, #24
	add	local06, #8
	rdlong	local04, local06
	add	local01, #28
	wrlong	local04, local01
LR__0170
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #32
	add	local01, #32
	rdlong	local06, local01 wz
 if_ne	jmp	#LR__0171
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #8
	rdlong	local06, fp
	sub	fp, #24
	add	local06, #24
	rdlong	local04, local06
	add	local01, #32
	wrlong	local04, local01
LR__0171
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #32
	add	local01, #40
	rdlong	local06, local01 wz
 if_ne	jmp	#LR__0172
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #8
	rdlong	local06, fp
	sub	fp, #24
	add	local06, #20
	rdlong	local04, local06
	add	local01, #40
	wrlong	local04, local01
LR__0172
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #32
	add	local01, #20
	rdlong	local06, local01 wz
 if_ne	jmp	#LR__0175
	add	fp, #32
	rdlong	local03, fp
	add	local03, #32
	rdlong	local01, local03
	rdlong	local02, local01
	add	local01, #4
	rdlong	local06, local01
	rdlong	arg01, fp
	add	fp, #16
	mov	arg03, fp
	sub	fp, #48
	mov	arg02, #256
	mov	local13, objptr
	mov	objptr, local02
	call	local06
	mov	objptr, local13
	mov	local14, result1
	add	fp, #44
	wrlong	local14, fp
	rdlong	local01, fp wz
	sub	fp, #44
 if_ne	jmp	#LR__0173
	add	fp, #48
	rdlong	local06, fp
	sub	fp, #48
	test	local06, #2 wz
 if_e	jmp	#LR__0173
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr____default_putc_terminal_
	call	#__system___make_methodptr
	mov	local04, result1
	add	local01, #20
	wrlong	local04, local01
	jmp	#LR__0174
LR__0173
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr____default_putc_
	call	#__system___make_methodptr
	add	local01, #20
	wrlong	result1, local01
LR__0174
LR__0175
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #32
	add	local01, #24
	rdlong	local06, local01 wz
 if_ne	jmp	#LR__0176
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr____default_getc_
	call	#__system___make_methodptr
	add	local01, #24
	wrlong	result1, local01
LR__0176
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #32
	add	local01, #36
	rdlong	local06, local01 wz
 if_ne	jmp	#LR__0179
	add	fp, #24
	rdlong	local01, fp
	sub	fp, #24
	add	local01, #28
	rdlong	local06, local01 wz
 if_e	jmp	#LR__0177
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #8
	rdlong	local06, fp
	sub	fp, #24
	add	local06, #28
	rdlong	local04, local06
	add	local01, #36
	wrlong	local04, local01
	jmp	#LR__0178
LR__0177
	add	fp, #32
	rdlong	local01, fp
	sub	fp, #32
	mov	arg01, objptr
	mov	arg02, ptr____default_flush_
	call	#__system___make_methodptr
	add	local01, #36
	wrlong	result1, local01
LR__0178
LR__0179
LR__0180
	add	fp, #20
	rdlong	local01, fp wz
 if_e	add	ptr___system__dat__, ##564
 if_e	wrlong	#0, ptr___system__dat__
 if_e	sub	ptr___system__dat__, ##564
	rdlong	result1, fp
	sub	fp, #20
LR__0181
	mov	ptra, fp
	call	#popregs_
__openraw_ret
	ret

__closeraw
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, #0
	add	local01, #8
	rdlong	local03, local01 wz
	sub	local01, #8
 if_ne	jmp	#LR__0182
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0185
LR__0182
	add	local01, #36
	rdlong	local03, local01 wz
	sub	local01, #36
 if_e	jmp	#LR__0183
	add	local01, #36
	rdlong	local03, local01
	sub	local01, #36
	rdlong	local04, local03
	add	local03, #4
	rdlong	local05, local03
	mov	arg01, local01
	mov	local06, objptr
	mov	objptr, local04
	call	local05
	mov	objptr, local06
LR__0183
	add	local01, #28
	rdlong	local03, local01 wz
	sub	local01, #28
 if_e	jmp	#LR__0184
	add	local01, #28
	rdlong	local03, local01
	sub	local01, #28
	rdlong	local04, local03
	add	local03, #4
	rdlong	local05, local03
	mov	arg01, local01
	mov	local06, objptr
	mov	objptr, local04
	call	local05
	mov	objptr, local06
	mov	local02, result1
LR__0184
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #44
	call	#__system____builtin_memset
	mov	result1, local02
LR__0185
	mov	ptra, fp
	call	#popregs_
__closeraw_ret
	ret

__vfs_open_host
	mov	COUNT_, #3
	call	#pushregs_
	add	ptr__dat__, ##6900
	mov	local01, ptr__dat__
	mov	arg01, objptr
	mov	arg02, ptr__plain_sendrecv_0645_
	sub	ptr__dat__, ##6900
	call	#__system___make_methodptr
	mov	arg01, result1
	mov	local02, objptr
	mov	objptr, local01
	call	#_fs9p_internal_cc_fs_init
	mov	objptr, local02
	mov	local03, result1 wz
 if_e	jmp	#LR__0186
	neg	arg01, local03 wz
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	mov	result1, #0
	jmp	#LR__0187
LR__0186
	add	ptr__fs9p_internal_cc_dat__, ##2236
	mov	result1, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##2236
LR__0187
	mov	ptra, fp
	call	#popregs_
__vfs_open_host_ret
	ret

___default_getc
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	add	local02, #8
	rdlong	local03, local02
	sub	local02, #8
	test	local03, #2 wz
 if_e	jmp	#LR__0188
	mov	arg01, local01
	call	#___default_flush
LR__0188
	add	local02, #8
	rdlong	local03, local02
	or	local03, #1
	wrlong	local03, local02
	sub	local02, #8
	rdlong	local04, local02 wz
 if_ne	jmp	#LR__0189
	mov	arg01, local01
	call	#___default_filbuf
	mov	local04, result1
LR__0189
	cmps	local04, #0 wcz
 if_be	neg	result1, #1
 if_be	jmp	#LR__0190
	sub	local04, #1
	wrlong	local04, local02
	add	local02, #4
	rdlong	local05, local02
	rdbyte	result1, local05
	add	local05, #1
	wrlong	local05, local02
LR__0190
	mov	ptra, fp
	call	#popregs_
___default_getc_ret
	ret

___default_putc
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local02
	add	local03, #8
	rdlong	local04, local03
	sub	local03, #8
	test	local04, #1 wz
 if_e	jmp	#LR__0191
	mov	arg01, local02
	call	#___default_flush
LR__0191
	add	local03, #8
	rdlong	local04, local03
	or	local04, #2
	wrlong	local04, local03
	sub	local03, #8
	rdlong	local05, local03
	mov	local06, local05
	add	local03, #12
	add	local06, local03
	wrbyte	local01, local06
	and	local01, #255
	add	local05, #1
	sub	local03, #12
	wrlong	local05, local03
	cmp	local05, ##1024 wz
 if_ne	jmp	#LR__0192
	mov	arg01, local02
	call	#___default_flush
	cmp	result1, #0 wz
 if_ne	neg	local01, #1
LR__0192
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
___default_putc_ret
	ret

___default_putc_terminal
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	rdlong	local03, local02
	add	local03, #8
	rdlong	local04, local03
	sub	local03, #8
	test	local04, #1 wz
 if_e	jmp	#LR__0193
	mov	arg01, local02
	call	#___default_flush
LR__0193
	add	local03, #8
	rdlong	local04, local03
	or	local04, #2
	wrlong	local04, local03
	sub	local03, #8
	rdlong	local05, local03
	mov	local06, local05
	add	local03, #12
	add	local06, local03
	wrbyte	local01, local06
	and	local01, #255
	sub	local03, #12
	add	local05, #1
	wrlong	local05, local03
	cmp	local01, #10 wz
 if_e	jmp	#LR__0194
	cmp	local05, ##1024 wz
 if_ne	jmp	#LR__0195
LR__0194
	mov	arg01, local02
	call	#___default_flush
	cmp	result1, #0 wz
 if_ne	neg	local01, #1
LR__0195
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
___default_putc_terminal_ret
	ret

___default_flush
	mov	COUNT_, #15
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, local01
	rdlong	local03, local02
	add	local02, #8
	rdlong	local04, local02
	sub	local02, #8
	test	local04, #2 wz
 if_e	jmp	#LR__0198
	cmps	local03, #0 wcz
 if_be	jmp	#LR__0200
	add	local01, #8
	rdlong	local04, local01
	sub	local01, #8
	test	local04, #64 wz
 if_e	jmp	#LR__0197
	add	local01, #8
	rdlong	local04, local01
	sub	local01, #8
	test	local04, #128 wz
 if_e	jmp	#LR__0196
	add	local01, #40
	rdlong	local04, local01
	sub	local01, #40
	rdlong	local05, local04
	add	local04, #4
	rdlong	local06, local04
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #2
	mov	local07, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local07
	add	local01, #8
	rdlong	local04, local01
	andn	local04, #128
	wrlong	local04, local01
	sub	local01, #8
LR__0196
LR__0197
	add	local01, #16
	rdlong	local04, local01
	sub	local01, #16
	rdlong	local05, local04
	add	local04, #4
	rdlong	local06, local04
	add	local02, #12
	mov	arg02, local02
	sub	local02, #12
	mov	arg01, local01
	mov	arg03, local03
	mov	local08, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local08
	jmp	#LR__0200
LR__0198
	add	local02, #8
	rdlong	local04, local02
	sub	local02, #8
	test	local04, #1 wz
 if_e	jmp	#LR__0199
	cmp	local03, #0 wz
 if_e	jmp	#LR__0199
	add	local01, #40
	rdlong	local09, local01
	sub	local01, #40
	mov	local04, local09
	rdlong	local05, local04
	add	local04, #4
	rdlong	local10, local04
	sub	local04, #4
	mov	local06, local10
	mov	local11, local01
	mov	local12, local03
	neg	local12, local12
	mov	local13, local12
	mov	local07, #1
	mov	arg01, local11
	mov	arg02, local13
	mov	arg03, #1
	mov	local08, objptr
	mov	objptr, local05
	call	local06
	mov	objptr, local08
	mov	local14, result1
	mov	local15, local14
	cmps	local15, #0 wcz
 if_ae	mov	local15, local03
LR__0199
LR__0200
	wrlong	#0, local02
	add	local02, #4
	wrlong	#0, local02
	add	local02, #4
	wrlong	#0, local02
	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
___default_flush_ret
	ret

_stat
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	ptr__dat__, ##6108
	mov	result1, ptr__dat__
	sub	ptr__dat__, ##6108
	mov	local03, result1
	mov	arg01, local03
	mov	arg02, local01
	mov	arg03, #0
	call	#___getvfsforfile
	mov	local04, result1 wz
 if_e	jmp	#LR__0201
	add	local04, #44
	rdlong	local05, local04
	sub	local04, #44
	mov	local06, local05 wz
 if_ne	jmp	#LR__0202
LR__0201
	add	ptr___system__dat__, ##564
	wrlong	#16, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0203
LR__0202
	mov	arg01, local02
	mov	arg02, #0
	mov	arg03, #48
	call	#__system____builtin_memset
	add	local04, #44
	rdlong	local06, local04
	rdlong	local05, local06
	add	local06, #4
	rdlong	local07, local06
	mov	arg01, local03
	mov	arg02, local02
	mov	local08, objptr
	mov	objptr, local05
	call	local07
	mov	objptr, local08
LR__0203
	mov	ptra, fp
	call	#popregs_
_stat_ret
	ret

___getvfsforfile
	mov	COUNT_, #18
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	rdbyte	local04, local02
	cmp	local04, #47 wz
 if_ne	jmp	#LR__0204
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#_strncpy
	jmp	#LR__0205
LR__0204
	add	ptr__dat__, ##5852
	mov	arg02, ptr__dat__
	sub	ptr__dat__, ##5852
	mov	arg01, local01
	mov	arg03, #256
	call	#_strncpy
	mov	arg02, ##@LR__0734
	mov	arg01, local01
	mov	arg03, #256
	call	#_strncat
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, #256
	call	#_strncat
LR__0205
	mov	local05, #0
LR__0206
	cmps	local05, #4 wcz
 if_ae	jmp	#LR__0217
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##5820
	add	local04, ptr__dat__
	rdlong	local06, local04 wz
	sub	ptr__dat__, ##5820
 if_e	jmp	#LR__0216
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##5820
	add	local04, ptr__dat__
	rdlong	arg01, local04
	sub	ptr__dat__, ##5820
	mov	local07, #0
	loc	pa,	#(@LR__0208-@LR__0207)
	call	#FCACHE_LOAD_
LR__0207
	rdbyte	local08, arg01 wz
 if_ne	add	local07, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0207
LR__0208
	mov	result1, local07
	mov	local09, result1
	mov	local10, local09
	add	local10, local01
	rdbyte	local04, local10
	cmp	local04, #47 wz
 if_e	jmp	#LR__0209
	mov	local11, local09
	add	local11, local01
	rdbyte	local12, local11 wz
 if_ne	jmp	#LR__0215
LR__0209
	mov	arg01, local01
	mov	local13, local05
	shl	local13, #2
	add	ptr__dat__, ##5820
	add	local13, ptr__dat__
	rdlong	arg02, local13
	mov	arg03, local09
	sub	ptr__dat__, ##5820
	call	#_strncmp
	mov	local14, result1 wz
 if_ne	jmp	#LR__0215
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##5836
	add	local04, ptr__dat__
	rdlong	local15, local04
	sub	ptr__dat__, ##5836
	loc	pa,	#(@LR__0212-@LR__0210)
	call	#FCACHE_LOAD_
LR__0210
	mov	local06, local09
	add	local06, #1
	add	local06, local01
	rdbyte	local04, local06
	cmp	local04, #46 wz
 if_ne	jmp	#LR__0213
	mov	local16, local09
	add	local16, #2
	add	local16, local01
	rdbyte	local11, local16
	cmp	local11, #47 wz
 if_e	jmp	#LR__0211
	mov	local17, local09
	add	local17, #2
	add	local17, local01
	rdbyte	local18, local17 wz
 if_ne	jmp	#LR__0213
LR__0211
	add	local09, #1
	jmp	#LR__0210
LR__0212
LR__0213
	cmp	local03, #0 wz
 if_e	jmp	#LR__0214
	mov	arg01, local03
	mov	arg02, local01
	mov	arg03, #256
	call	#_strncpy
LR__0214
	mov	arg01, local01
	mov	arg02, local01
	add	arg02, local09
	add	arg02, #1
	call	#__system____builtin_strcpy
	mov	result1, local15
	jmp	#LR__0218
LR__0215
LR__0216
	add	local05, #1
	jmp	#LR__0206
LR__0217
	add	ptr___system__dat__, ##560
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##560
LR__0218
	mov	ptra, fp
	call	#popregs_
___getvfsforfile_ret
	ret

__mount
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	neg	local03, #1
	rdbyte	local04, local01
	cmp	local04, #47 wz
 if_e	jmp	#LR__0219
	add	ptr___system__dat__, ##564
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0230
LR__0219
	mov	local05, #0
LR__0220
	cmps	local05, #4 wcz
 if_ae	jmp	#LR__0226
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##5820
	add	local04, ptr__dat__
	rdlong	local06, local04 wz
	sub	ptr__dat__, ##5820
 if_ne	jmp	#LR__0221
	cmps	local03, #0 wcz
 if_b	mov	local03, local05
 if_b	jmp	#LR__0225
LR__0221
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##5820
	add	local04, ptr__dat__
	rdlong	arg01, local04
	sub	ptr__dat__, ##5820
	mov	local07, #0
	loc	pa,	#(@LR__0223-@LR__0222)
	call	#FCACHE_LOAD_
LR__0222
	rdbyte	local08, arg01 wz
 if_ne	add	local07, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0222
LR__0223
	mov	result1, local07
	mov	local09, result1
	mov	local10, local09
	add	local10, local01
	rdbyte	local04, local10
	cmp	local04, #47 wz
 if_ne	jmp	#LR__0224
	mov	arg01, local01
	mov	local11, local05
	shl	local11, #2
	add	ptr__dat__, ##5820
	add	local11, ptr__dat__
	rdlong	arg02, local11
	mov	arg03, local09
	sub	ptr__dat__, ##5820
	call	#_strncmp
	cmp	result1, #0 wz
 if_e	mov	local03, local05
 if_e	jmp	#LR__0226
LR__0224
LR__0225
	add	local05, #1
	jmp	#LR__0220
LR__0226
	cmp	local03, ##-1 wz
 if_ne	jmp	#LR__0227
	add	ptr___system__dat__, ##564
	wrlong	#11, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0230
LR__0227
	mov	local05, local03
	mov	local04, local05
	shl	local04, #2
	add	ptr__dat__, ##5836
	add	local04, ptr__dat__
	wrlong	local02, local04
	cmp	local02, #0 wz
	sub	ptr__dat__, ##5836
 if_ne	jmp	#LR__0228
	shl	local05, #2
	add	ptr__dat__, ##5820
	add	local05, ptr__dat__
	wrlong	#0, local05
	sub	ptr__dat__, ##5820
	jmp	#LR__0229
LR__0228
	shl	local05, #2
	add	ptr__dat__, ##5820
	add	local05, ptr__dat__
	wrlong	local01, local05
	sub	ptr__dat__, ##5820
LR__0229
	mov	result1, #0
LR__0230
	mov	ptra, fp
	call	#popregs_
__mount_ret
	ret

__dofmt
	mov	COUNT_, #11
	call	#pushregs_
	add	ptra, #60
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	mov	local01, #0
	add	fp, #16
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	sub	fp, #48
LR__0231
	add	fp, #8
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	rdbyte	local01, local02
	add	fp, #8
	wrlong	local01, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0257
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #37 wz
 if_e	jmp	#LR__0233
	add	fp, #4
	rdlong	local01, fp
	rdlong	local02, local01
	add	local01, #4
	rdlong	local04, local01
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #16
	mov	local05, objptr
	mov	objptr, local02
	call	local04
	mov	objptr, local05
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	cmps	result1, #0 wcz
 if_ae	jmp	#LR__0232
	add	fp, #20
	rdlong	result1, fp
	sub	fp, #20
	jmp	#LR__0258
LR__0232
	add	fp, #28
	rdlong	local04, fp
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #28
	jmp	#LR__0231
LR__0233
	add	fp, #8
	rdlong	arg01, fp
	add	fp, #24
	mov	arg02, fp
	sub	fp, #32
	call	#_parseflags_0675
	mov	local06, result1
	add	fp, #8
	wrlong	local06, fp
	add	fp, #24
	rdlong	local01, fp
	shr	local01, #24
	and	local01, #3
	add	fp, #16
	wrlong	local01, fp
	sub	fp, #40
	mov	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #12
	call	#_parseint_0668
	mov	local06, result1
	add	fp, #36
	wrlong	local06, fp
	sub	fp, #28
	rdlong	local02, fp
	rdbyte	local01, local02
	add	fp, #8
	wrlong	local01, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0257
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #46 wz
 if_ne	jmp	#LR__0234
	add	fp, #8
	rdlong	local04, fp
	add	local04, #1
	wrlong	local04, fp
	mov	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #12
	call	#_parseint_0668
	mov	local01, result1
	add	local01, #1
	add	fp, #40
	wrlong	local01, fp
	sub	fp, #32
	rdlong	local02, fp
	rdbyte	local01, local02
	add	fp, #8
	wrlong	local01, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0257
LR__0234
	add	fp, #8
	rdlong	arg01, fp
	add	fp, #36
	mov	arg02, fp
	sub	fp, #44
	call	#_parsesize_0679
	add	fp, #8
	wrlong	result1, fp
	mov	local02, result1
	mov	local03, result1
	add	local03, #1
	wrlong	local03, fp
	rdbyte	local01, local02
	add	fp, #8
	wrlong	local01, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_e	jmp	#LR__0257
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #37 wz
 if_ne	jmp	#LR__0235
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	sub	fp, #32
	mov	arg03, #37
	call	#__system___fmtchar
	mov	local07, result1
	add	fp, #20
	wrlong	local07, fp
	sub	fp, #20
	jmp	#LR__0231
LR__0235
	add	fp, #20
	wrlong	#0, fp
	sub	fp, #8
	rdlong	local02, fp
	rdlong	local03, local02
	rdlong	local01, local03
	mov	local07, local02
	mov	local06, local07
	mov	local08, local02
	mov	local05, local08
	rdlong	local09, local05
	add	local09, #4
	wrlong	local09, local06
	add	fp, #40
	wrlong	local01, fp
	sub	fp, #36
	rdlong	local01, fp
	sub	fp, #16
	cmps	local01, #65 wcz
 if_b	jmp	#LR__0236
	add	fp, #16
	rdlong	local03, fp
	sub	fp, #16
	mov	local04, local03
	cmps	local04, #90 wcz
 if_a	jmp	#LR__0236
	add	fp, #32
	rdlong	local01, fp
	bith	local01, #29
	wrlong	local01, fp
	sub	fp, #16
	rdlong	local02, fp
	sub	local02, #65
	wrlong	local02, fp
	mov	local01, local02
	add	local01, #97
	wrlong	local01, fp
	sub	fp, #16
LR__0236
	add	fp, #40
	rdlong	local01, fp
	sub	fp, #40
	cmps	local01, #0 wcz
 if_b	add	fp, #40
 if_b	wrlong	#0, fp
 if_b	sub	fp, #40
	add	fp, #40
	rdlong	local01, fp
	sub	fp, #40
	cmps	local01, #63 wcz
 if_a	add	fp, #40
 if_a	wrlong	#63, fp
 if_a	sub	fp, #40
	add	fp, #36
	rdlong	local01, fp
	sub	fp, #36
	cmps	local01, #0 wcz
 if_ae	jmp	#LR__0237
	add	fp, #36
	rdlong	local01, fp
	neg	local01, local01
	wrlong	local01, fp
	sub	fp, #4
	rdlong	local01, fp
	bitl	local01, #54
	wrlong	local01, fp
	bith	local01, #22
	wrlong	local01, fp
	add	fp, #16
	wrlong	#1, fp
	sub	fp, #48
LR__0237
	add	fp, #32
	rdlong	local01, fp
	add	fp, #4
	rdlong	local04, fp
	shl	local04, #8
	or	local01, local04
	sub	fp, #4
	wrlong	local01, fp
	add	fp, #8
	rdlong	local04, fp
	shl	local04, #16
	or	local01, local04
	sub	fp, #8
	wrlong	local01, fp
	sub	fp, #16
	rdlong	local10, fp
	sub	fp, #16
	cmp	local10, #99 wz
 if_e	jmp	#LR__0238
	cmp	local10, #115 wz
 if_e	jmp	#LR__0239
	cmp	local10, #100 wz
 if_e	jmp	#LR__0241
	cmp	local10, #105 wz
 if_e	jmp	#LR__0242
	cmp	local10, #117 wz
 if_e	jmp	#LR__0243
	cmp	local10, #111 wz
 if_e	jmp	#LR__0246
	cmp	local10, #120 wz
 if_e	jmp	#LR__0248
	cmp	local10, #97 wz
 if_e	jmp	#LR__0250
	cmp	local10, #101 wz
 if_e	jmp	#LR__0251
	cmp	local10, #102 wz
 if_e	jmp	#LR__0252
	cmp	local10, #103 wz
 if_e	jmp	#LR__0253
	jmp	#LR__0254
LR__0238
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local07, fp
	sub	fp, #52
	mov	arg03, local07
	call	#__system___fmtchar
	mov	local09, result1
	add	fp, #20
	wrlong	local09, fp
	sub	fp, #20
	jmp	#LR__0255
LR__0239
	add	fp, #40
	rdlong	local01, fp wz
	sub	fp, #40
 if_e	jmp	#LR__0240
	add	fp, #32
	rdlong	local01, fp
	add	fp, #8
	rdlong	local04, fp
	sub	local04, #1
	or	local01, local04
	sub	fp, #8
	wrlong	local01, fp
	sub	fp, #32
LR__0240
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local07, fp
	sub	fp, #52
	mov	arg03, local07
	call	#__system___fmtstr
	mov	local09, result1
	add	fp, #20
	wrlong	local09, fp
	sub	fp, #20
	jmp	#LR__0255
LR__0241
LR__0242
LR__0243
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #117 wz
 if_ne	jmp	#LR__0244
	add	fp, #32
	rdlong	local01, fp
	bith	local01, #58
	wrlong	local01, fp
	sub	fp, #32
LR__0244
	add	fp, #40
	rdlong	local01, fp wz
	sub	fp, #40
 if_ne	jmp	#LR__0245
	add	fp, #48
	rdlong	local04, fp
	sub	fp, #48
	cmp	local04, #2 wz
 if_ne	jmp	#LR__0245
	add	fp, #32
	rdlong	local02, fp
	mov	local01, local02
	add	fp, #4
	rdlong	local03, fp
	mov	local04, local03
	add	local04, #1
	shl	local04, #16
	or	local01, local04
	sub	fp, #4
	wrlong	local01, fp
	sub	fp, #32
LR__0245
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local07, fp
	sub	fp, #52
	mov	arg03, local07
	mov	local09, #10
	mov	arg04, #10
	call	#__system___fmtnum
	mov	local05, result1
	add	fp, #20
	wrlong	local05, fp
	sub	fp, #20
	jmp	#LR__0255
LR__0246
	add	fp, #32
	rdlong	local01, fp
	bith	local01, #58
	wrlong	local01, fp
	add	fp, #8
	rdlong	local01, fp wz
	sub	fp, #40
 if_ne	jmp	#LR__0247
	add	fp, #48
	rdlong	local04, fp
	sub	fp, #48
	cmp	local04, #2 wz
 if_ne	jmp	#LR__0247
	add	fp, #32
	rdlong	local02, fp
	mov	local01, local02
	add	fp, #4
	rdlong	local03, fp
	mov	local04, local03
	add	local04, #1
	shl	local04, #16
	or	local01, local04
	sub	fp, #4
	wrlong	local01, fp
	sub	fp, #32
LR__0247
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local07, fp
	sub	fp, #52
	mov	arg03, local07
	mov	local09, #8
	mov	arg04, #8
	call	#__system___fmtnum
	mov	local05, result1
	add	fp, #20
	wrlong	local05, fp
	sub	fp, #20
	jmp	#LR__0255
LR__0248
	add	fp, #40
	rdlong	local01, fp wz
	sub	fp, #40
 if_ne	jmp	#LR__0249
	add	fp, #48
	rdlong	local04, fp
	sub	fp, #48
	cmp	local04, #2 wz
 if_ne	jmp	#LR__0249
	add	fp, #32
	rdlong	local02, fp
	mov	local01, local02
	add	fp, #4
	rdlong	local03, fp
	mov	local04, local03
	add	local04, #1
	shl	local04, #16
	or	local01, local04
	sub	fp, #4
	wrlong	local01, fp
	sub	fp, #32
LR__0249
	add	fp, #32
	rdlong	local01, fp
	bith	local01, #58
	wrlong	local01, fp
	sub	fp, #28
	rdlong	arg01, fp
	add	fp, #28
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local07, fp
	sub	fp, #52
	mov	local09, #16
	mov	arg03, local07
	mov	arg04, #16
	call	#__system___fmtnum
	add	fp, #20
	wrlong	result1, fp
	sub	fp, #20
	jmp	#LR__0255
LR__0250
LR__0251
LR__0252
LR__0253
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #28
	rdlong	local04, fp
	add	fp, #20
	rdlong	local07, fp
	mov	result1, local07
	mov	local09, result1
	sub	fp, #36
	rdlong	local08, fp
	sub	fp, #16
	mov	local05, local08
	mov	arg02, local04
	mov	arg03, local09
	mov	arg04, local05
	call	#__system___fmtfloat
	mov	local11, result1
	add	fp, #20
	wrlong	local11, fp
	sub	fp, #20
	jmp	#LR__0255
LR__0254
	add	fp, #4
	rdlong	local02, fp
	mov	local01, local02
	add	fp, #28
	rdlong	local03, fp
	sub	fp, #32
	mov	local04, local03
	mov	local06, ##@LR__0735
	mov	local07, local06
	mov	arg01, local01
	mov	arg02, local04
	mov	arg03, local07
	call	#__system___fmtstr
	mov	local09, result1
	add	fp, #20
	wrlong	local09, fp
	sub	fp, #20
LR__0255
	add	fp, #20
	rdlong	local01, fp
	sub	fp, #20
	cmps	local01, #0 wcz
 if_ae	jmp	#LR__0256
	add	fp, #20
	rdlong	result1, fp
	sub	fp, #20
	jmp	#LR__0258
LR__0256
	add	fp, #28
	rdlong	local01, fp
	sub	fp, #8
	rdlong	local03, fp
	add	local01, local03
	add	fp, #8
	wrlong	local01, fp
	sub	fp, #28
	jmp	#LR__0231
LR__0257
	add	fp, #28
	rdlong	result1, fp
	sub	fp, #28
LR__0258
	mov	ptra, fp
	call	#popregs_
__dofmt_ret
	ret

__rxtxioctl_0419
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	cmp	local01, #256 wz
 if_e	jmp	#LR__0259
	cmp	local01, #257 wz
 if_e	jmp	#LR__0260
	jmp	#LR__0261
LR__0259
	add	ptr___system__dat__, #8
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, #8
	wrlong	result1, local02
	mov	result1, #0
	jmp	#LR__0262
LR__0260
	rdlong	arg01, local02
	add	ptr___system__dat__, #8
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #8
	mov	result1, #0
	jmp	#LR__0262
LR__0261
	add	ptr___system__dat__, ##564
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
LR__0262
	mov	ptra, fp
	call	#popregs_
__rxtxioctl_0419_ret
	ret

___dummy_flush_0420
	mov	result1, #0
___dummy_flush_0420_ret
	ret

__vfswrite
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, local02
	add	local01, #8
	rdlong	local05, local01
	sub	local01, #8
	test	local05, #2 wz
 if_ne	jmp	#LR__0263
	add	ptr___system__dat__, ##564
	wrlong	#6, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0271
LR__0263
	add	local01, #8
	rdlong	local05, local01
	sub	local01, #8
	test	local05, #64 wz
 if_e	jmp	#LR__0265
	add	local01, #8
	rdlong	local05, local01
	sub	local01, #8
	test	local05, #128 wz
 if_e	jmp	#LR__0264
	add	local01, #40
	rdlong	local05, local01
	sub	local01, #40
	rdlong	local06, local05
	add	local05, #4
	rdlong	local07, local05
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #2
	mov	local08, objptr
	mov	objptr, local06
	call	local07
	mov	objptr, local08
	add	local01, #8
	rdlong	local05, local01
	andn	local05, #128
	wrlong	local05, local01
	sub	local01, #8
LR__0264
LR__0265
	add	local01, #16
	rdlong	local05, local01 wz
	sub	local01, #16
 if_e	jmp	#LR__0267
	add	local01, #16
	rdlong	local05, local01
	sub	local01, #16
	rdlong	local06, local05
	add	local05, #4
	rdlong	local07, local05
	mov	arg02, local02
	mov	arg03, local03
	mov	arg01, local01
	mov	local08, objptr
	mov	objptr, local06
	call	local07
	mov	objptr, local08
	mov	local09, result1
	cmps	local09, #0 wcz
 if_ae	jmp	#LR__0266
	add	local01, #8
	rdlong	local05, local01
	or	local05, #32
	wrlong	local05, local01
	add	ptr___system__dat__, ##564
	wrlong	local09, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	cmp	local09, #0 wz
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0271
LR__0266
	mov	result1, local09
	jmp	#LR__0271
LR__0267
	add	local01, #20
	rdlong	local10, local01 wz
	sub	local01, #20
 if_ne	jmp	#LR__0268
	add	ptr___system__dat__, ##564
	wrlong	#6, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0271
LR__0268
	mov	local09, #0
LR__0269
	cmp	local03, #0 wcz
 if_be	jmp	#LR__0270
	mov	local05, local10
	rdlong	local06, local05
	add	local05, #4
	rdlong	local07, local05
	rdbyte	arg01, local04
	mov	arg02, local01
	mov	local11, objptr
	mov	objptr, local06
	add	local04, #1
	call	local07
	mov	objptr, local11
	add	local09, result1
	sub	local03, #1
	jmp	#LR__0269
LR__0270
	mov	result1, local09
LR__0271
	mov	ptra, fp
	call	#popregs_
__vfswrite_ret
	ret

__vfsread
	mov	COUNT_, #14
	call	#pushregs_
	add	ptra, #40
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #4
	rdlong	local01, fp
	add	fp, #20
	wrlong	local01, fp
	add	fp, #4
	wrlong	#0, fp
	sub	fp, #28
	rdlong	local02, fp
	sub	fp, #4
	add	local02, #8
	rdlong	local01, local02
	test	local01, #1 wz
 if_ne	jmp	#LR__0272
	add	ptr___system__dat__, ##564
	wrlong	#6, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0280
LR__0272
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	add	local01, #12
	rdlong	local03, local01 wz
 if_e	jmp	#LR__0274
	add	fp, #4
	rdlong	local04, fp
	add	local04, #12
	rdlong	local01, local04
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	sub	fp, #12
	mov	local05, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local05
	add	fp, #16
	wrlong	result1, fp
	sub	fp, #16
	cmps	result1, #0 wcz
 if_ae	jmp	#LR__0273
	add	fp, #4
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #8
	rdlong	local03, local04
	or	local03, #32
	add	local01, #8
	wrlong	local03, local01
	add	fp, #12
	rdlong	arg01, fp wz
	sub	fp, #16
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0280
LR__0273
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
	jmp	#LR__0280
LR__0274
	add	fp, #4
	rdlong	local01, fp
	add	local01, #24
	rdlong	local03, local01
	add	fp, #20
	wrlong	local03, fp
	rdlong	local01, fp wz
	sub	fp, #24
 if_ne	jmp	#LR__0275
	add	ptr___system__dat__, ##564
	wrlong	#6, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0280
LR__0275
	add	fp, #4
	rdlong	local01, fp
	sub	fp, #4
	add	local01, #32
	rdlong	local03, local01 wz
 if_e	jmp	#LR__0277
	add	fp, #4
	rdlong	local06, fp
	mov	local04, local06
	add	local04, #32
	rdlong	local07, local04
	mov	local01, local07
	rdlong	local02, local01
	add	local01, #4
	rdlong	local08, local01
	mov	local03, local08
	mov	local09, local06
	mov	local10, local09
	mov	local11, #256
	add	fp, #32
	mov	local12, fp
	mov	local13, local12
	mov	arg01, local10
	mov	arg02, #256
	mov	arg03, local13
	mov	local14, objptr
	mov	objptr, local02
	sub	fp, #36
	call	local03
	mov	objptr, local14
	mov	local05, result1
	add	fp, #16
	wrlong	local05, fp
	rdlong	local02, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0276
	add	fp, #36
	rdlong	local04, fp
	sub	fp, #36
	mov	local03, local04
	and	local03, #2 wz
 if_e	jmp	#LR__0276
	mov	local01, #1
	add	fp, #32
	wrlong	#1, fp
	sub	fp, #32
LR__0276
LR__0277
	add	fp, #16
	wrlong	#0, fp
	sub	fp, #16
LR__0278
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #0 wcz
 if_be	jmp	#LR__0279
	add	fp, #24
	rdlong	local01, fp
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	sub	fp, #20
	rdlong	arg01, fp
	sub	fp, #4
	mov	local10, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local10
	mov	local09, result1
	add	fp, #20
	wrlong	local09, fp
	sub	fp, #20
	cmps	local09, #0 wcz
 if_b	jmp	#LR__0279
	add	fp, #28
	rdlong	local01, fp
	mov	local03, local01
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #8
	rdlong	local06, fp
	wrbyte	local06, local01
	sub	fp, #4
	rdlong	local01, fp
	add	local01, #1
	wrlong	local01, fp
	sub	fp, #4
	rdlong	local01, fp
	sub	local01, #1
	wrlong	local01, fp
	add	fp, #20
	rdlong	local01, fp wz
	sub	fp, #32
 if_e	jmp	#LR__0278
	add	fp, #20
	rdlong	local03, fp
	sub	fp, #20
	cmp	local03, #10 wz
 if_ne	jmp	#LR__0278
LR__0279
	add	fp, #16
	rdlong	result1, fp
	sub	fp, #16
LR__0280
	mov	ptra, fp
	call	#popregs_
__vfsread_ret
	ret

_zdoGet4_0639
	mov	COUNT_, #3
	call	#pushregs_
LR__0281
	mov	arg01, #0
	call	#__system___rxraw
	mov	local01, result1
	cmps	local01, #0 wcz
 if_b	jmp	#LR__0281
	mov	result1, local01
	mov	local02, result1
LR__0282
	mov	arg01, #0
	call	#__system___rxraw
	mov	local01, result1
	cmps	local01, #0 wcz
 if_b	jmp	#LR__0282
	mov	result1, local01
	mov	local03, result1
	shl	local03, #8
	or	local02, local03
LR__0283
	mov	arg01, #0
	call	#__system___rxraw
	mov	local01, result1
	cmps	local01, #0 wcz
 if_b	jmp	#LR__0283
	mov	result1, local01
	mov	local03, result1
	shl	local03, #16
	or	local02, local03
LR__0284
	mov	arg01, #0
	call	#__system___rxraw
	mov	local01, result1
	cmps	local01, #0 wcz
 if_b	jmp	#LR__0284
	mov	result1, local01
	shl	result1, #24
	or	result1, local02
	mov	ptra, fp
	call	#popregs_
_zdoGet4_0639_ret
	ret

_plain_sendrecv_0645
	mov	COUNT_, #10
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg03
	mov	local03, arg02
	sub	local03, local01
	mov	local04, local01
	mov	local05, #0
	add	ptr___system__dat__, #8
	rdlong	result1, ptr___system__dat__
	mov	local06, result1
	wrlong	#0, ptr___system__dat__
	sub	ptr___system__dat__, #8
	mov	local07, local03
	and	local07, #255
	wrbyte	local07, local01
	getbyte	local07, local03, #1
	add	local01, #1
	wrbyte	local07, local01
	getbyte	local07, local03, #2
	add	local01, #1
	wrbyte	local07, local01
	getbyte	local07, local03, #3
	add	local01, #1
	wrbyte	local07, local01
	sub	local01, #3
	cmps	local03, #4 wcz
 if_be	neg	result1, #1
 if_be	jmp	#LR__0290
	mov	arg01, #255
	call	#__system___txraw
	mov	arg01, #1
	call	#__system___txraw
LR__0285
	cmps	local03, #0 wcz
 if_be	jmp	#LR__0286
	rdbyte	arg01, local04
	add	local04, #1
	call	#__system___txraw
	sub	local03, #1
	jmp	#LR__0285
LR__0286
	call	#_zdoGet4_0639
	mov	local03, result1
	mov	local07, local03
	and	local07, #255
	wrbyte	local07, local01
	getbyte	local07, local03, #1
	add	local01, #1
	wrbyte	local07, local01
	getbyte	local07, local03, #2
	add	local01, #1
	wrbyte	local07, local01
	getbyte	local07, local03, #3
	add	local01, #1
	wrbyte	local07, local01
	add	local01, #1
	mov	local04, local01
	mov	local08, local03
	sub	local08, #4
LR__0287
	cmps	local08, #0 wcz
 if_be	jmp	#LR__0289
	cmps	local05, local02 wcz
 if_ae	jmp	#LR__0289
	mov	local09, local05
	add	local09, local04
	add	local05, #1
LR__0288
	mov	arg01, #0
	call	#__system___rxraw
	mov	local10, result1
	cmps	local10, #0 wcz
 if_b	jmp	#LR__0288
	mov	result1, local10
	wrbyte	result1, local09
	sub	local08, #1
	jmp	#LR__0287
LR__0289
	add	ptr___system__dat__, #8
	wrlong	local06, ptr___system__dat__
	sub	ptr___system__dat__, #8
	mov	result1, local03
LR__0290
	mov	ptra, fp
	call	#popregs_
_plain_sendrecv_0645_ret
	ret

___default_filbuf
	mov	COUNT_, #6
	call	#pushregs_
	rdlong	local01, arg01
	add	arg01, #12
	rdlong	local02, arg01
	sub	arg01, #12
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	add	local01, #12
	mov	arg02, local01
	sub	local01, #12
	decod	arg03, #10
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	local06, result1
	cmps	local06, #0 wcz
 if_b	neg	result1, #1
 if_b	jmp	#LR__0291
	wrlong	local06, local01
	add	local01, #12
	mov	local02, local01
	sub	local01, #8
	wrlong	local02, local01
	add	local01, #4
	rdlong	local02, local01
	or	local02, #1
	wrlong	local02, local01
	mov	result1, local06
LR__0291
	mov	ptra, fp
	call	#popregs_
___default_filbuf_ret
	ret

_parseint_0668
	mov	_var01, arg01
	mov	_var02, arg02
	rdlong	_var03, _var01
	mov	_var04, #0
	rdbyte	_var05, _var03
	cmp	_var05, #42 wz
 if_ne	jmp	#LR__0292
	rdlong	_var06, _var02
	rdlong	_var04, _var06
	add	_var06, #4
	wrlong	_var06, _var02
	add	_var03, #1
	jmp	#LR__0295
LR__0292
LR__0293
	cmps	_var05, #48 wcz
 if_b	jmp	#LR__0294
	cmps	_var05, #57 wcz
 if_a	jmp	#LR__0294
	mov	_var07, _var04
	shl	_var07, #2
	add	_var07, _var04
	shl	_var07, #1
	sub	_var05, #48
	add	_var07, _var05
	mov	_var04, _var07
	add	_var03, #1
	rdbyte	_var05, _var03
	jmp	#LR__0293
LR__0294
LR__0295
	wrlong	_var03, _var01
	mov	result1, _var04
_parseint_0668_ret
	ret

_parseflags_0675
	mov	_var01, arg01
	mov	_var02, arg02
	mov	_var03, #0
	mov	_var04, #1
	mov	_var05, #0
	mov	_var06, #2
	mov	_var07, #0
LR__0296
	cmp	_var07, #0 wz
 if_ne	jmp	#LR__0303
	rdbyte	_var08, _var01
	cmp	_var08, #45 wz
	add	_var01, #1
 if_e	jmp	#LR__0297
	cmp	_var08, #35 wz
 if_e	jmp	#LR__0298
	cmp	_var08, #43 wz
 if_e	jmp	#LR__0299
	cmp	_var08, #48 wz
 if_e	jmp	#LR__0300
	cmp	_var08, #32 wz
 if_e	jmp	#LR__0301
	jmp	#LR__0302
LR__0297
	mov	_var06, #1
	jmp	#LR__0296
LR__0298
	or	_var03, #28
	jmp	#LR__0296
LR__0299
	mov	_var05, #1
	jmp	#LR__0296
LR__0300
	mov	_var04, #2
	jmp	#LR__0296
LR__0301
	mov	_var04, #1
	jmp	#LR__0296
LR__0302
	mov	_var07, #1
	jmp	#LR__0296
LR__0303
	shl	_var04, #24
	or	_var03, _var04
	shl	_var05, #26
	or	_var03, _var05
	shl	_var06, #22
	or	_var03, _var06
	wrlong	_var03, _var02
	sub	_var01, #1
	mov	result1, _var01
_parseflags_0675_ret
	ret

_parsesize_0679
	mov	_var01, arg02
	mov	_var02, #4
	mov	_var03, #0
	mov	_var04, arg01
	mov	_var05, arg01
	add	_var05, #1
	mov	_var06, _var05
	rdbyte	_var07, _var04
	mov	_var08, _var07
	cmp	_var08, #108 wz
 if_e	jmp	#LR__0304
	cmp	_var08, #104 wz
 if_e	jmp	#LR__0305
	cmp	_var08, #106 wz
 if_e	jmp	#LR__0306
	cmp	_var08, #122 wz
 if_e	jmp	#LR__0307
	cmp	_var08, #116 wz
 if_e	jmp	#LR__0308
	cmp	_var08, #76 wz
 if_e	jmp	#LR__0309
	jmp	#LR__0310
LR__0304
	mov	_var02, #4
	rdbyte	_var09, _var06
	cmp	_var09, #108 wz
 if_e	mov	_var02, #8
 if_e	add	_var06, #1
	jmp	#LR__0311
LR__0305
	mov	_var02, #2
	rdbyte	_var09, _var06
	cmp	_var09, #104 wz
 if_e	mov	_var02, #1
 if_e	add	_var06, #1
	jmp	#LR__0311
LR__0306
	mov	_var02, #8
	jmp	#LR__0311
LR__0307
LR__0308
	mov	_var02, #4
	jmp	#LR__0311
LR__0309
	mov	_var02, #8
	jmp	#LR__0311
LR__0310
	mov	_var09, _var06
	sub	_var09, #1
	mov	_var06, _var09
LR__0311
	wrlong	_var02, _var01
	mov	result1, _var06
_parsesize_0679_ret
	ret

_SPI_spin2_start
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #8
	wrlong	#0, fp
	add	fp, #12
	wrlong	#16, fp
	add	objptr, #4
	wrlong	#0, objptr
	rdlong	arg01, fp
	sub	fp, #12
	mov	arg03, objptr
	sub	objptr, #4
	setq	arg03
	coginit	arg01, ptr__SPI_spin2_dat__ wc
 if_b	neg	arg01, #1
	mov	result1, arg01
	mov	local01, result1
	add	local01, #1
	wrlong	local01, objptr
	wrlong	local01, fp
	add	fp, #4
	mov	arg02, fp
	sub	fp, #4
	mov	arg01, #1
	call	#_SPI_spin2_SendCommand
	rdlong	result1, fp
	mov	ptra, fp
	call	#popregs_
_SPI_spin2_start_ret
	ret

_SPI_spin2_Write8
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #12
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	mov	arg02, fp
	mov	arg01, #3
	call	#_SPI_spin2_SendCommand
	mov	ptra, fp
	call	#popregs_
_SPI_spin2_Write8_ret
	ret

_SPI_spin2_Read8
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, #16
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #8
	wrlong	#0, fp
	mov	local01, fp
	add	fp, #12
	wrlong	local01, fp
	sub	fp, #8
	mov	arg02, fp
	sub	fp, #4
	mov	arg01, #2
	call	#_SPI_spin2_SendCommand
	loc	pa,	#(@LR__0313-@LR__0312)
	call	#FCACHE_LOAD_
LR__0312
	add	objptr, #4
	rdlong	local01, objptr wz
	sub	objptr, #4
 if_ne	jmp	#LR__0312
LR__0313
	rdlong	result1, fp
	mov	ptra, fp
	call	#popregs_
_SPI_spin2_Read8_ret
	ret

_SPI_spin2_WriteN
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #16
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	sub	fp, #12
	mov	arg02, fp
	mov	arg01, #4
	call	#_SPI_spin2_SendCommand
	mov	ptra, fp
	call	#popregs_
_SPI_spin2_WriteN_ret
	ret

_SPI_spin2_SendCommand
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	loc	pa,	#(@LR__0315-@LR__0314)
	call	#FCACHE_LOAD_
LR__0314
	add	objptr, #4
	rdlong	local03, objptr wz
	sub	objptr, #4
 if_ne	jmp	#LR__0314
LR__0315
	add	objptr, #8
	mov	arg01, objptr
	sub	objptr, #8
	mov	arg02, local02
	mov	arg03, #4
	call	#__system__longmove
	add	objptr, #4
	wrlong	local01, objptr
	sub	objptr, #4
	mov	ptra, fp
	call	#popregs_
_SPI_spin2_SendCommand_ret
	ret

_fs9p_internal_cc_strncmp
	mov	_var01, arg01 wz
	mov	_var02, arg02
	mov	_var03, arg03
 if_ne	jmp	#LR__0316
	cmp	_var02, #0 wz
 if_ne	neg	_var04, #1
 if_e	mov	_var04, #0
	mov	result1, _var04
	jmp	#_fs9p_internal_cc_strncmp_ret
LR__0316
	cmp	_var02, #0 wz
 if_e	mov	result1, #1
 if_e	jmp	#_fs9p_internal_cc_strncmp_ret
	mov	_var05, _var03
	loc	pa,	#(@LR__0318-@LR__0317)
	call	#FCACHE_LOAD_
LR__0317
	rdbyte	_var06, _var01
	mov	_var07, _var02
	mov	_var08, _var02
	add	_var08, #1
	mov	_var02, _var08
	rdbyte	_var09, _var07
	mov	_var04, _var05
	sub	_var04, #1
	mov	_var05, _var04
	cmps	_var05, #0 wcz
	add	_var01, #1
 if_b	jmp	#LR__0319
	cmp	_var06, #0 wz
 if_e	jmp	#LR__0319
	cmp	_var06, _var09 wz
 if_e	jmp	#LR__0317
LR__0318
LR__0319
	cmps	_var05, #0 wcz
 if_b	mov	result1, #0
 if_b	jmp	#_fs9p_internal_cc_strncmp_ret
	cmp	_var06, _var09 wz
 if_e	mov	result1, #0
 if_e	jmp	#_fs9p_internal_cc_strncmp_ret
	cmp	_var06, #0 wz
 if_e	neg	result1, #1
 if_e	jmp	#_fs9p_internal_cc_strncmp_ret
	cmp	_var09, #0 wz
 if_e	mov	result1, #1
 if_ne	mov	result1, _var06
 if_ne	sub	result1, _var09
_fs9p_internal_cc_strncmp_ret
	ret

_fs9p_internal_cc_strrchr
	mov	_var01, #0
	loc	pa,	#(@LR__0321-@LR__0320)
	call	#FCACHE_LOAD_
LR__0320
	rdbyte	_var02, arg01 wz
	add	arg01, #1
 if_e	jmp	#LR__0322
	cmp	_var02, arg02 wz
 if_e	mov	_var01, arg01
 if_e	sub	_var01, #1
	jmp	#LR__0320
LR__0321
LR__0322
	cmp	arg02, #0 wz
 if_e	sub	arg01, #1
 if_e	mov	_var01, arg01
	mov	result1, _var01
_fs9p_internal_cc_strrchr_ret
	ret

_fs9p_internal_cc_fs_init
	mov	COUNT_, #10
	call	#pushregs_
	mov	local01, arg01
	add	ptr__fs9p_internal_cc_dat__, ##2096
	wrlong	local01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##2092
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, #100
	wrbyte	#100, result1
	add	result1, #1
	mov	arg01, result1
	bmask	arg02, #15
	call	#_fs9p_internal_cc_doPut2_0495
	mov	arg01, result1
	mov	arg02, ##1048
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg01, result1
	mov	arg02, ##@LR__0736
	call	#_fs9p_internal_cc_doPutStr_0499
	mov	arg02, result1
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	mov	arg03, ##1048
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	local05, ptr__fs9p_internal_cc_dat__
	add	local05, #4
	rdbyte	local06, local05
	cmp	local06, #101 wz
	sub	ptr__fs9p_internal_cc_dat__, #4
 if_ne	neg	result1, #12
 if_ne	jmp	#LR__0327
	mov	arg01, local05
	add	arg01, #1
	rdbyte	result1, arg01
	add	arg01, #1
	rdbyte	local07, arg01
	shl	local07, #8
	or	result1, local07
	mov	arg01, local05
	add	arg01, #3
	call	#_fs9p_internal_cc_FETCH4_0503
	mov	local08, result1
	mov	arg01, local05
	add	arg01, #7
	rdbyte	result1, arg01
	add	arg01, #1
	rdbyte	local07, arg01
	shl	local07, #8
	or	result1, local07
	cmp	result1, #6 wz
 if_ne	jmp	#LR__0323
	add	local05, #9
	mov	arg02, ##@LR__0737
	mov	arg01, local05
	mov	arg03, #6
	call	#_fs9p_internal_cc_strncmp
	mov	local09, result1 wz
 if_e	jmp	#LR__0324
LR__0323
	neg	result1, #12
	jmp	#LR__0327
LR__0324
	cmp	local08, #64 wcz
 if_b	jmp	#LR__0325
	cmp	local08, ##1048 wcz
 if_be	jmp	#LR__0326
LR__0325
	neg	result1, #1
	jmp	#LR__0327
LR__0326
	wrlong	local08, ptr__fs9p_internal_cc_dat__
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, #104
	wrbyte	#104, result1
	add	result1, #1
	mov	arg01, result1
	bmask	arg02, #15
	call	#_fs9p_internal_cc_doPut2_0495
	mov	arg01, result1
	add	ptr__fs9p_internal_cc_dat__, ##1052
	mov	arg02, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##1052
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg01, result1
	neg	arg02, #1
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg01, result1
	mov	arg02, ##@LR__0738
	call	#_fs9p_internal_cc_doPutStr_0499
	mov	arg01, result1
	mov	arg02, ##@LR__0739
	call	#_fs9p_internal_cc_doPutStr_0499
	mov	arg02, result1
	add	ptr__fs9p_internal_cc_dat__, ##2096
	rdlong	local06, ptr__fs9p_internal_cc_dat__
	rdlong	local02, local06
	add	local06, #4
	rdlong	local03, local06
	sub	ptr__fs9p_internal_cc_dat__, ##2092
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	rdlong	arg03, ptr__fs9p_internal_cc_dat__
	mov	local10, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local10
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	local05, ptr__fs9p_internal_cc_dat__
	add	local05, #4
	rdbyte	local06, local05
	cmp	local06, #105 wz
	sub	ptr__fs9p_internal_cc_dat__, #4
 if_ne	neg	result1, #10
 if_e	mov	result1, #0
LR__0327
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_fs_init_ret
	ret

_fs9p_internal_cc_doPut2_0495
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg02
	and	arg02, #255
	wrbyte	arg02, arg01
	add	arg01, #1
	shr	local01, #8
	and	local01, #255
	wrbyte	local01, arg01
	add	arg01, #1
	mov	result1, arg01
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_doPut2_0495_ret
	ret

_fs9p_internal_cc_doPut4_0496
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg02
	and	arg02, #255
	wrbyte	arg02, arg01
	add	arg01, #1
	getbyte	arg02, local01, #1
	wrbyte	arg02, arg01
	add	arg01, #1
	getbyte	arg02, local01, #2
	wrbyte	arg02, arg01
	add	arg01, #1
	shr	local01, #24
	and	local01, #255
	wrbyte	local01, arg01
	add	arg01, #1
	mov	result1, arg01
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_doPut4_0496_ret
	ret

_fs9p_internal_cc_doPutStr_0499
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, local02
	mov	local03, #0
	loc	pa,	#(@LR__0329-@LR__0328)
	call	#FCACHE_LOAD_
LR__0328
	rdbyte	local04, arg01 wz
 if_ne	add	local03, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0328
LR__0329
	mov	result1, local03
	mov	local05, result1
	mov	arg01, local01
	mov	arg02, local05
	call	#_fs9p_internal_cc_doPut2_0495
	mov	local01, result1
	mov	local06, #0
	loc	pa,	#(@LR__0331-@LR__0330)
	call	#FCACHE_LOAD_
LR__0330
	cmp	local06, local05 wcz
 if_ae	jmp	#LR__0332
	mov	local07, local02
	add	local07, #1
	rdbyte	local08, local02
	mov	local02, local07
	wrbyte	local08, local01
	add	local06, #1
	add	local01, #1
	jmp	#LR__0330
LR__0331
LR__0332
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_doPutStr_0499_ret
	ret

_fs9p_internal_cc_FETCH4_0503
	rdbyte	result1, arg01
	add	arg01, #1
	rdbyte	_var01, arg01
	shl	_var01, #8
	or	result1, _var01
	add	arg01, #1
	rdbyte	_var01, arg01
	shl	_var01, #16
	or	result1, _var01
	add	arg01, #1
	rdbyte	_var01, arg01
	shl	_var01, #24
	or	result1, _var01
_fs9p_internal_cc_FETCH4_0503_ret
	ret

_fs9p_internal_cc_do_fs_walk_0519
	mov	COUNT_, #21
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, local01
	mov	local06, #0
LR__0333
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, #110
	wrbyte	#110, result1
	add	result1, #1
	mov	arg01, result1
	bmask	arg02, #15
	call	#_fs9p_internal_cc_doPut2_0495
	mov	arg01, result1
	mov	arg02, local05
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg01, result1
	mov	local05, local02
	mov	arg02, local05
	call	#_fs9p_internal_cc_doPut4_0496
	mov	local07, result1
	loc	pa,	#(@LR__0335-@LR__0334)
	call	#FCACHE_LOAD_
LR__0334
	rdbyte	local08, local03
	cmp	local08, #47 wz
 if_e	add	local03, #1
 if_e	jmp	#LR__0334
LR__0335
	mov	local09, local07
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	local10, ptr__fs9p_internal_cc_dat__
	sub	local09, local10
	rdbyte	local08, local03 wz
	sub	ptr__fs9p_internal_cc_dat__, #4
 if_e	jmp	#LR__0340
	mov	arg01, local07
	mov	arg02, #1
	call	#_fs9p_internal_cc_doPut2_0495
	mov	arg01, result1
	mov	local11, arg01
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut2_0495
	mov	local07, result1
	loc	pa,	#(@LR__0337-@LR__0336)
	call	#FCACHE_LOAD_
LR__0336
	rdbyte	local08, local03 wz
 if_e	jmp	#LR__0338
	rdbyte	local10, local03
	cmp	local10, #47 wz
 if_e	jmp	#LR__0338
	rdlong	local12, ptr__fs9p_internal_cc_dat__
	cmps	local09, local12 wcz
 if_ae	jmp	#LR__0338
	mov	local13, local03
	add	local13, #1
	rdbyte	local14, local03
	mov	local03, local13
	wrbyte	local14, local07
	add	local09, #1
	add	local07, #1
	jmp	#LR__0336
LR__0337
LR__0338
	cmp	local04, #0 wz
 if_e	jmp	#LR__0339
	rdbyte	local08, local03 wz
 if_ne	jmp	#LR__0339
	cmp	local06, #0 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#LR__0343
	mov	arg01, local11
	mov	arg02, #1
	call	#_fs9p_internal_cc_doPut2_0495
	mov	result1, local11
	add	result1, #2
	wrbyte	#46, result1
	add	result1, #1
	mov	local07, result1
	jmp	#LR__0341
LR__0339
	mov	arg02, local07
	mov	local12, local11
	add	local12, #2
	sub	arg02, local12
	mov	arg01, local11
	call	#_fs9p_internal_cc_doPut2_0495
	jmp	#LR__0341
LR__0340
	mov	arg01, local07
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut2_0495
	mov	local07, result1
LR__0341
	add	ptr__fs9p_internal_cc_dat__, ##2096
	rdlong	local13, ptr__fs9p_internal_cc_dat__
	mov	local08, local13
	rdlong	local10, local08
	add	local08, #4
	rdlong	local14, local08
	mov	local12, local14
	sub	ptr__fs9p_internal_cc_dat__, ##2092
	mov	local15, ptr__fs9p_internal_cc_dat__
	mov	local16, local15
	mov	local17, local07
	sub	ptr__fs9p_internal_cc_dat__, #4
	rdlong	local18, ptr__fs9p_internal_cc_dat__
	mov	arg01, local16
	mov	arg02, local17
	mov	arg03, local18
	mov	local19, objptr
	mov	objptr, local10
	call	local12
	mov	objptr, local19
	mov	local20, result1
	mov	local21, local20
	add	ptr__fs9p_internal_cc_dat__, #8
	rdbyte	local08, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #8
	zerox	local08, #7
	cmp	local08, #111 wz
 if_e	jmp	#LR__0342
	cmp	local06, #0 wz
 if_ne	neg	result1, #4
 if_ne	jmp	#LR__0343
LR__0342
	mov	local06, #1
	rdbyte	local08, local03 wz
 if_ne	jmp	#LR__0333
	mov	result1, #0
LR__0343
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_do_fs_walk_0519_ret
	ret

_fs9p_internal_cc_fs_open_relative
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg04
	mov	arg02, local01
	mov	arg04, #0
	call	#_fs9p_internal_cc_do_fs_walk_0519
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0344
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, #112
	wrbyte	#112, result1
	add	result1, #1
	mov	arg01, result1
	bmask	arg02, #15
	call	#_fs9p_internal_cc_doPut2_0495
	mov	arg01, result1
	mov	arg02, local01
	call	#_fs9p_internal_cc_doPut4_0496
	zerox	local02, #7
	wrbyte	local02, result1
	add	result1, #1
	mov	arg02, result1
	add	ptr__fs9p_internal_cc_dat__, ##2096
	rdlong	local03, ptr__fs9p_internal_cc_dat__
	rdlong	local04, local03
	add	local03, #4
	rdlong	local05, local03
	sub	ptr__fs9p_internal_cc_dat__, ##2092
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	rdlong	arg03, ptr__fs9p_internal_cc_dat__
	mov	local06, objptr
	mov	objptr, local04
	call	local05
	mov	objptr, local06
	add	ptr__fs9p_internal_cc_dat__, #8
	rdbyte	local03, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #8
	zerox	local03, #7
	cmp	local03, #113 wz
 if_ne	neg	result1, #6
 if_ne	jmp	#LR__0344
	add	local01, ##1040
	wrlong	#0, local01
	sub	local01, #4
	wrlong	#0, local01
	mov	result1, #0
LR__0344
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_fs_open_relative_ret
	ret

_fs9p_internal_cc_fs_open
	mov	COUNT_, #2
	call	#pushregs_
	add	ptr__fs9p_internal_cc_dat__, ##1052
	mov	local01, arg01
	mov	local02, arg02
	mov	arg04, arg03
	mov	arg01, ptr__fs9p_internal_cc_dat__
	mov	arg02, local01
	mov	arg03, local02
	sub	ptr__fs9p_internal_cc_dat__, ##1052
	call	#_fs9p_internal_cc_fs_open_relative
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_fs_open_ret
	ret

_fs9p_internal_cc_fs_create
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	add	ptr__fs9p_internal_cc_dat__, ##1052
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##1052
	mov	arg02, local01
	mov	arg03, local02
	mov	arg04, #1
	call	#_fs9p_internal_cc_do_fs_walk_0519
	cmps	result1, #0 wcz
 if_b	neg	result1, #13
 if_b	jmp	#LR__0346
	mov	arg01, local02
	mov	arg02, #47
	call	#_fs9p_internal_cc_strrchr
	mov	local04, result1 wz
 if_e	mov	local04, local02
 if_ne	add	local04, #1
	testbn	local03, #31 wz
 if_ne	decod	local05, #31
 if_e	mov	local05, #17
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, #114
	wrbyte	#114, result1
	add	result1, #1
	mov	arg01, result1
	bmask	arg02, #15
	call	#_fs9p_internal_cc_doPut2_0495
	mov	arg01, result1
	mov	arg02, local01
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg01, result1
	mov	arg02, local04
	call	#_fs9p_internal_cc_doPutStr_0499
	mov	arg01, result1
	mov	arg02, local03
	call	#_fs9p_internal_cc_doPut4_0496
	wrbyte	local05, result1
	add	result1, #1
	mov	arg02, result1
	add	ptr__fs9p_internal_cc_dat__, ##2096
	rdlong	local06, ptr__fs9p_internal_cc_dat__
	rdlong	local07, local06
	add	local06, #4
	rdlong	local08, local06
	sub	ptr__fs9p_internal_cc_dat__, ##2092
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	rdlong	arg03, ptr__fs9p_internal_cc_dat__
	mov	local09, objptr
	mov	objptr, local07
	call	local08
	mov	objptr, local09
	cmps	result1, #0 wcz
 if_b	jmp	#LR__0345
	add	ptr__fs9p_internal_cc_dat__, #8
	rdbyte	local06, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #8
	zerox	local06, #7
	cmp	local06, #115 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0346
LR__0345
	mov	arg01, local01
	mov	arg02, local01
	mov	arg03, local04
	mov	arg04, #17
	call	#_fs9p_internal_cc_fs_open_relative
	cmps	result1, #0 wcz
 if_ae	mov	result1, #0
LR__0346
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_fs_create_ret
	ret

_fs9p_internal_cc_fs_close
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, #120
	wrbyte	#120, result1
	add	result1, #1
	mov	arg01, result1
	bmask	arg02, #15
	call	#_fs9p_internal_cc_doPut2_0495
	mov	arg01, result1
	mov	arg02, local01
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, result1
	add	ptr__fs9p_internal_cc_dat__, ##2096
	rdlong	local02, ptr__fs9p_internal_cc_dat__
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	sub	ptr__fs9p_internal_cc_dat__, ##2092
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	rdlong	arg03, ptr__fs9p_internal_cc_dat__
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	cmps	result1, #0 wcz
 if_b	jmp	#LR__0347
	add	ptr__fs9p_internal_cc_dat__, #8
	rdbyte	local02, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #8
	zerox	local02, #7
	cmp	local02, #121 wz
 if_e	jmp	#LR__0348
LR__0347
	neg	result1, #10
	jmp	#LR__0349
LR__0348
	mov	result1, #0
LR__0349
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_fs_close_ret
	ret

_fs9p_internal_cc_fs_fdelete
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, #122
	wrbyte	#122, result1
	add	result1, #1
	mov	arg01, result1
	bmask	arg02, #15
	call	#_fs9p_internal_cc_doPut2_0495
	mov	arg01, result1
	mov	arg02, local01
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, result1
	add	ptr__fs9p_internal_cc_dat__, ##2096
	rdlong	local02, ptr__fs9p_internal_cc_dat__
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	sub	ptr__fs9p_internal_cc_dat__, ##2092
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	rdlong	arg03, ptr__fs9p_internal_cc_dat__
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	cmps	result1, #0 wcz
 if_b	jmp	#LR__0350
	add	ptr__fs9p_internal_cc_dat__, #8
	rdbyte	local02, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #8
	zerox	local02, #7
	cmp	local02, #123 wz
 if_e	jmp	#LR__0351
LR__0350
	neg	result1, #10
	jmp	#LR__0352
LR__0351
	mov	result1, #0
LR__0352
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_fs_fdelete_ret
	ret

_fs9p_internal_cc_fs_delete
	mov	COUNT_, #1
	call	#pushregs_
	add	ptra, ##1060
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	sub	fp, #4
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #4
	rdlong	arg03, fp
	sub	fp, #8
	mov	arg04, #0
	call	#_fs9p_internal_cc_fs_open_relative
	add	fp, ##1056
	wrlong	result1, fp
	rdlong	local01, fp wz
	sub	fp, ##1056
 if_e	jmp	#LR__0353
	add	fp, ##1056
	rdlong	result1, fp
	sub	fp, ##1056
	jmp	#LR__0354
LR__0353
	add	fp, #12
	mov	arg01, fp
	sub	fp, #12
	call	#_fs9p_internal_cc_fs_fdelete
	add	fp, ##1056
	wrlong	result1, fp
	sub	fp, ##1056
LR__0354
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_fs_delete_ret
	ret

_fs9p_internal_cc_fs_read
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, #0
LR__0355
	cmps	local03, #0 wcz
 if_be	jmp	#LR__0358
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, #116
	wrbyte	#116, result1
	add	result1, #1
	mov	arg01, result1
	bmask	arg02, #15
	call	#_fs9p_internal_cc_doPut2_0495
	mov	arg01, result1
	mov	arg02, local01
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg01, result1
	add	local01, ##1036
	rdlong	arg02, local01
	sub	local01, ##1036
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg01, result1
	add	local01, ##1040
	rdlong	arg02, local01
	sub	local01, ##1040
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg01, result1
	rdlong	local05, ptr__fs9p_internal_cc_dat__
	mov	local06, arg01
	add	local06, #4
	add	ptr__fs9p_internal_cc_dat__, #4
	sub	local06, ptr__fs9p_internal_cc_dat__
	sub	local05, local06
	sub	local05, #1
	cmps	local03, local05 wcz
	sub	ptr__fs9p_internal_cc_dat__, #4
 if_b	mov	local07, local03
 if_ae	mov	local07, local05
	mov	arg02, local07
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, result1
	add	ptr__fs9p_internal_cc_dat__, ##2096
	rdlong	local08, ptr__fs9p_internal_cc_dat__
	rdlong	local09, local08
	add	local08, #4
	rdlong	local10, local08
	sub	ptr__fs9p_internal_cc_dat__, ##2092
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	rdlong	arg03, ptr__fs9p_internal_cc_dat__
	mov	local11, objptr
	mov	objptr, local09
	call	local10
	mov	objptr, local11
	cmps	result1, #0 wcz
 if_b	neg	result1, #12
 if_b	jmp	#LR__0359
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	local12, ptr__fs9p_internal_cc_dat__
	add	local12, #4
	rdbyte	local08, local12
	cmp	local08, #117 wz
	sub	ptr__fs9p_internal_cc_dat__, #4
	add	local12, #1
 if_ne	neg	result1, #12
 if_ne	jmp	#LR__0359
	add	local12, #2
	mov	arg01, local12
	call	#_fs9p_internal_cc_FETCH4_0503
	mov	local13, result1
	add	local12, #4
	cmps	local13, #0 wcz
 if_b	jmp	#LR__0356
	cmps	local13, local07 wcz
 if_be	jmp	#LR__0357
LR__0356
	neg	result1, #12
	jmp	#LR__0359
LR__0357
	cmp	local13, #0 wz
 if_e	jmp	#LR__0358
	mov	arg01, local02
	mov	arg02, local12
	mov	arg03, local13
	call	#__system____builtin_memmove
	add	local02, local13
	add	local04, local13
	sub	local03, local13
	add	local01, ##1036
	rdlong	local14, local01
	mov	local08, local14
	add	local08, local13
	wrlong	local08, local01
	sub	local01, ##1036
	cmp	local08, local14 wcz
 if_ae	jmp	#LR__0355
	add	local01, ##1040
	rdlong	local10, local01
	add	local10, #1
	wrlong	local10, local01
	sub	local01, ##1040
	jmp	#LR__0355
LR__0358
	mov	result1, local04
LR__0359
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_fs_read_ret
	ret

_fs9p_internal_cc_fs_write
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, #0
LR__0360
	cmps	local03, #0 wcz
 if_be	jmp	#LR__0363
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, #118
	wrbyte	#118, result1
	add	result1, #1
	mov	arg01, result1
	bmask	arg02, #15
	call	#_fs9p_internal_cc_doPut2_0495
	mov	arg01, result1
	mov	arg02, local01
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg01, result1
	add	local01, ##1036
	rdlong	arg02, local01
	sub	local01, ##1036
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg01, result1
	add	local01, ##1040
	rdlong	arg02, local01
	sub	local01, ##1040
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg01, result1
	rdlong	local05, ptr__fs9p_internal_cc_dat__
	mov	local06, arg01
	add	local06, #4
	add	ptr__fs9p_internal_cc_dat__, #4
	sub	local06, ptr__fs9p_internal_cc_dat__
	sub	local05, local06
	sub	local05, #1
	cmps	local03, local05 wcz
	sub	ptr__fs9p_internal_cc_dat__, #4
 if_b	mov	local07, local03
 if_ae	mov	local07, local05
	mov	arg02, local07
	call	#_fs9p_internal_cc_doPut4_0496
	mov	local08, result1
	mov	arg01, local08
	mov	arg02, local02
	mov	arg03, local07
	call	#__system____builtin_memmove
	add	ptr__fs9p_internal_cc_dat__, ##2096
	rdlong	local09, ptr__fs9p_internal_cc_dat__
	rdlong	local10, local09
	add	local09, #4
	rdlong	local11, local09
	sub	ptr__fs9p_internal_cc_dat__, ##2092
	mov	arg01, ptr__fs9p_internal_cc_dat__
	add	local08, local07
	sub	ptr__fs9p_internal_cc_dat__, #4
	rdlong	arg03, ptr__fs9p_internal_cc_dat__
	mov	arg02, local08
	mov	local12, objptr
	mov	objptr, local10
	call	local11
	mov	objptr, local12
	mov	local13, result1
	cmps	local13, #0 wcz
 if_b	mov	result1, local13
 if_b	jmp	#LR__0364
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	local08, ptr__fs9p_internal_cc_dat__
	add	local08, #4
	rdbyte	local09, local08
	cmp	local09, #119 wz
	sub	ptr__fs9p_internal_cc_dat__, #4
	add	local08, #1
 if_ne	neg	result1, #12
 if_ne	jmp	#LR__0364
	add	local08, #2
	mov	arg01, local08
	call	#_fs9p_internal_cc_FETCH4_0503
	mov	local13, result1
	cmps	local13, #0 wcz
 if_b	jmp	#LR__0361
	cmps	local13, local07 wcz
 if_be	jmp	#LR__0362
LR__0361
	neg	result1, #12
	jmp	#LR__0364
LR__0362
	cmp	local13, #0 wz
 if_e	jmp	#LR__0363
	add	local02, local13
	add	local04, local13
	sub	local03, local13
	add	local01, ##1036
	rdlong	local14, local01
	mov	local09, local14
	add	local09, local13
	wrlong	local09, local01
	sub	local01, ##1036
	cmp	local09, local14 wcz
 if_ae	jmp	#LR__0360
	add	local01, ##1040
	rdlong	local11, local01
	add	local11, #1
	wrlong	local11, local01
	sub	local01, ##1040
	jmp	#LR__0360
LR__0363
	mov	result1, local04
LR__0364
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_fs_write_ret
	ret

_fs9p_internal_cc_fs_fstat
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	mov	arg02, #0
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, #124
	wrbyte	#124, result1
	add	result1, #1
	mov	arg01, result1
	bmask	arg02, #15
	call	#_fs9p_internal_cc_doPut2_0495
	mov	arg01, result1
	mov	arg02, local01
	call	#_fs9p_internal_cc_doPut4_0496
	mov	arg02, result1
	add	ptr__fs9p_internal_cc_dat__, ##2096
	rdlong	local03, ptr__fs9p_internal_cc_dat__
	rdlong	local04, local03
	add	local03, #4
	rdlong	local05, local03
	sub	ptr__fs9p_internal_cc_dat__, ##2092
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #4
	rdlong	arg03, ptr__fs9p_internal_cc_dat__
	mov	local06, objptr
	mov	objptr, local04
	call	local05
	mov	objptr, local06
	cmps	result1, #0 wcz
 if_b	jmp	#LR__0365
	add	ptr__fs9p_internal_cc_dat__, #8
	rdbyte	local03, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #8
	zerox	local03, #7
	cmp	local03, #125 wz
 if_e	jmp	#LR__0366
LR__0365
	neg	result1, #10
	jmp	#LR__0367
LR__0366
	add	ptr__fs9p_internal_cc_dat__, #4
	mov	local07, ptr__fs9p_internal_cc_dat__
	add	local07, #17
	rdbyte	local08, local07
	add	local07, #5
	mov	arg01, local07
	sub	ptr__fs9p_internal_cc_dat__, #4
	call	#_fs9p_internal_cc_FETCH4_0503
	mov	local09, result1
	add	local07, #8
	mov	arg01, local07
	call	#_fs9p_internal_cc_FETCH4_0503
	mov	local10, result1
	add	local07, #4
	mov	arg01, local07
	call	#_fs9p_internal_cc_FETCH4_0503
	mov	local11, result1
	add	local07, #4
	mov	arg01, local07
	call	#_fs9p_internal_cc_FETCH4_0503
	mov	local12, result1
	add	local07, #4
	mov	arg01, local07
	call	#_fs9p_internal_cc_FETCH4_0503
	mov	local13, result1
	add	local07, #4
	mov	arg01, local07
	call	#_fs9p_internal_cc_FETCH4_0503
	add	local07, #4
	rdbyte	result1, local07
	add	local07, #1
	rdbyte	local14, local07
	shl	local14, #8
	or	result1, local14
	mov	arg01, local02
	mov	arg02, #0
	mov	arg03, #48
	call	#__system____builtin_memset
	add	local02, #12
	wrlong	#1, local02
	add	local02, #12
	wrlong	local13, local02
	add	local02, #12
	wrlong	local11, local02
	add	local02, #4
	wrlong	local12, local02
	sub	local02, #36
	wrlong	local09, local02
	and	local10, ##4095
	zerox	local08, #15
	test	local08, #128 wz
 if_ne	bith	local10, #12
	add	local02, #4
	wrlong	local10, local02
	mov	result1, #0
LR__0367
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_fs_fstat_ret
	ret

_fs9p_internal_cc_fs_stat
	mov	COUNT_, #2
	call	#pushregs_
	add	ptra, ##1064
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdlong	arg01, fp
	add	fp, #12
	mov	arg02, fp
	sub	fp, #8
	rdlong	arg03, fp
	sub	fp, #8
	mov	arg04, #0
	call	#_fs9p_internal_cc_fs_open_relative
	add	fp, ##1060
	wrlong	result1, fp
	rdlong	local01, fp wz
	sub	fp, ##1060
 if_e	jmp	#LR__0368
	add	fp, ##1060
	rdlong	result1, fp
	sub	fp, ##1060
	jmp	#LR__0369
LR__0368
	add	fp, #16
	mov	arg01, fp
	sub	fp, #4
	rdlong	arg02, fp
	sub	fp, #12
	call	#_fs9p_internal_cc_fs_fstat
	mov	local02, result1
	add	fp, ##1060
	wrlong	local02, fp
	sub	fp, ##1044
	mov	arg01, fp
	sub	fp, #16
	call	#_fs9p_internal_cc_fs_close
	add	fp, ##1060
	rdlong	result1, fp
	sub	fp, ##1060
LR__0369
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_fs_stat_ret
	ret

_fs9p_internal_cc_v_creat_0560
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	arg01, ##1044
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local04, result1 wz
 if_ne	jmp	#LR__0370
	add	ptr___system__dat__, ##564
	wrlong	#7, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0372
LR__0370
	mov	arg01, local04
	mov	arg02, #0
	mov	arg03, ##1044
	call	#__system____builtin_memset
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, local03
	call	#_fs9p_internal_cc_fs_create
	mov	local05, result1 wz
 if_e	jmp	#LR__0371
	mov	arg01, local04
	call	#__system___gc_free
	neg	arg01, local05 wz
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0372
LR__0371
	wrlong	local04, local01
	mov	result1, #0
LR__0372
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_v_creat_0560_ret
	ret

_fs9p_internal_cc_v_close_0562
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	rdlong	arg01, local01
	call	#_fs9p_internal_cc_fs_close
	mov	local02, result1
	rdlong	arg01, local01
	call	#__system___gc_free
	neg	arg01, local02 wz
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_v_close_0562_ret
	ret

_fs9p_internal_cc_v_opendir_0565
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, ##1044
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local03, result1 wz
 if_ne	jmp	#LR__0373
	add	ptr___system__dat__, ##564
	wrlong	#7, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0375
LR__0373
	add	ptr__fs9p_internal_cc_dat__, ##1052
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##1052
	mov	arg03, local02
	mov	arg02, local03
	mov	arg04, #0
	call	#_fs9p_internal_cc_fs_open_relative
	mov	local04, result1 wz
 if_e	jmp	#LR__0374
	mov	arg01, local03
	call	#__system___gc_free
	neg	arg01, local04 wz
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0375
LR__0374
	add	local01, #4
	wrlong	local03, local01
	mov	result1, #0
LR__0375
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_v_opendir_0565_ret
	ret

_fs9p_internal_cc_v_closedir_0568
	mov	COUNT_, #2
	call	#pushregs_
	add	arg01, #4
	rdlong	local01, arg01
	mov	arg01, local01
	call	#_fs9p_internal_cc_fs_close
	mov	local02, result1
	mov	arg01, local01
	call	#__system___gc_free
	mov	result1, local02
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_v_closedir_0568_ret
	ret

_fs9p_internal_cc_v_readdir_0576
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
LR__0376
	add	ptr__fs9p_internal_cc_dat__, ##2228
	rdbyte	local03, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##2228
	zerox	local03, #7
	cmp	local03, #0 wcz
 if_be	jmp	#LR__0378
	add	ptr__fs9p_internal_cc_dat__, ##2232
	rdlong	local04, ptr__fs9p_internal_cc_dat__ wz
	sub	ptr__fs9p_internal_cc_dat__, ##2232
 if_e	jmp	#LR__0378
	add	ptr__fs9p_internal_cc_dat__, ##2232
	rdlong	local05, ptr__fs9p_internal_cc_dat__
	rdbyte	local06, local05
	add	local05, #1
	rdbyte	local07, local05
	shl	local07, #8
	add	local06, local07
	zerox	local06, #15
	add	local06, #2
	sub	ptr__fs9p_internal_cc_dat__, #4
	rdbyte	local03, ptr__fs9p_internal_cc_dat__
	mov	local04, local06
	zerox	local04, #15
	sub	local03, local04
	wrbyte	local03, ptr__fs9p_internal_cc_dat__
	add	ptr__fs9p_internal_cc_dat__, #4
	rdlong	local08, ptr__fs9p_internal_cc_dat__
	zerox	local06, #15
	add	local08, local06
	rdlong	local05, ptr__fs9p_internal_cc_dat__
	add	local05, #8
	wrlong	local05, ptr__fs9p_internal_cc_dat__
	add	local05, #17
	wrlong	local05, ptr__fs9p_internal_cc_dat__
	add	local05, #8
	wrlong	local05, ptr__fs9p_internal_cc_dat__
	add	local05, #8
	wrlong	local05, ptr__fs9p_internal_cc_dat__
	rdbyte	local06, local05
	add	local05, #1
	rdbyte	local07, local05
	shl	local07, #8
	add	local06, local07
	rdlong	local03, ptr__fs9p_internal_cc_dat__
	add	local03, #2
	wrlong	local03, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##2232
	mov	local03, local06
	zerox	local03, #15
	cmp	local03, #64 wcz
 if_b	jmp	#LR__0377
	add	ptr___system__dat__, ##564
	wrlong	#18, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0379
LR__0377
	add	ptr__fs9p_internal_cc_dat__, ##2232
	rdlong	arg02, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##2232
	mov	arg03, local06
	zerox	arg03, #15
	mov	arg01, local02
	call	#__system____builtin_memmove
	mov	local03, local06
	add	local03, local02
	wrbyte	#0, local03
	add	ptr__fs9p_internal_cc_dat__, ##2232
	wrlong	local08, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##2232
	mov	result1, #0
	jmp	#LR__0379
LR__0378
	add	local01, #4
	rdlong	arg01, local01
	sub	local01, #4
	add	ptr__fs9p_internal_cc_dat__, ##2100
	mov	arg02, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##2100
	mov	arg03, #128
	call	#_fs9p_internal_cc_fs_read
	mov	local09, result1 wz
 if_e	neg	result1, #1
 if_e	jmp	#LR__0379
	cmps	local09, #0 wcz
 if_b	neg	result1, local09
 if_b	jmp	#LR__0379
	add	ptr__fs9p_internal_cc_dat__, ##2228
	wrbyte	local09, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, #128
	mov	local03, ptr__fs9p_internal_cc_dat__
	add	ptr__fs9p_internal_cc_dat__, #132
	wrlong	local03, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##2232
	jmp	#LR__0376
LR__0379
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_v_readdir_0576_ret
	ret

_fs9p_internal_cc_v_stat_0578
	mov	COUNT_, #1
	call	#pushregs_
	add	ptr__fs9p_internal_cc_dat__, ##1052
	mov	local01, arg01
	mov	arg03, arg02
	mov	arg01, ptr__fs9p_internal_cc_dat__
	mov	arg02, local01
	sub	ptr__fs9p_internal_cc_dat__, ##1052
	call	#_fs9p_internal_cc_fs_stat
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_v_stat_0578_ret
	ret

_fs9p_internal_cc_v_read_0581
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	rdlong	local04, local01 wz
 if_ne	jmp	#LR__0380
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0383
LR__0380
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, local03
	call	#_fs9p_internal_cc_fs_read
	mov	local05, result1
	cmps	local05, #0 wcz
 if_ae	jmp	#LR__0381
	add	local01, #8
	rdlong	local06, local01
	or	local06, #32
	wrlong	local06, local01
	neg	arg01, local05 wz
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0383
LR__0381
	cmp	local05, #0 wz
 if_ne	jmp	#LR__0382
	add	local01, #8
	rdlong	local06, local01
	or	local06, #16
	wrlong	local06, local01
LR__0382
	mov	result1, local05
LR__0383
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_v_read_0581_ret
	ret

_fs9p_internal_cc_v_write_0584
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	rdlong	local04, local01 wz
 if_ne	jmp	#LR__0384
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0386
LR__0384
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, local03
	call	#_fs9p_internal_cc_fs_write
	mov	local05, result1
	cmps	local05, #0 wcz
 if_ae	jmp	#LR__0385
	add	local01, #8
	rdlong	local06, local01
	or	local06, #32
	wrlong	local06, local01
	neg	arg01, local05 wz
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0386
LR__0385
	mov	result1, local05
LR__0386
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_v_write_0584_ret
	ret

_fs9p_internal_cc_v_lseek_0589
	mov	COUNT_, #10
	call	#pushregs_
	add	ptra, #76
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	sub	fp, #8
	rdlong	local01, fp
	rdlong	local02, local01
	add	fp, #12
	wrlong	local02, fp
	rdlong	local01, fp wz
	sub	fp, #16
 if_ne	jmp	#LR__0387
	add	ptr___system__dat__, ##564
	wrlong	#5, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0396
LR__0387
	add	fp, #12
	rdlong	local01, fp wz
	sub	fp, #12
 if_ne	jmp	#LR__0388
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #8
	rdlong	local02, fp
	sub	fp, #8
	add	local01, ##1036
	wrlong	local02, local01
	jmp	#LR__0395
LR__0388
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmp	local01, #1 wz
 if_ne	jmp	#LR__0392
	add	fp, #16
	rdlong	local03, fp
	add	local03, ##1036
	rdlong	local01, local03
	sub	fp, #8
	rdlong	local04, fp
	add	local01, local04
	add	fp, #12
	wrlong	local01, fp
	sub	fp, #12
	rdlong	local01, fp
	sub	fp, #8
	cmps	local01, #0 wcz
 if_be	jmp	#LR__0389
	add	fp, #16
	rdlong	local02, fp
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #20
	add	local02, ##1036
	rdlong	local05, local02
	cmp	local04, local05 wcz
 if_ae	jmp	#LR__0389
	add	fp, #16
	rdlong	local04, fp
	mov	local06, local04
	sub	fp, #16
	add	local06, ##1040
	rdlong	local05, local06
	add	local05, #1
	add	local04, ##1040
	wrlong	local05, local04
	jmp	#LR__0391
LR__0389
	add	fp, #8
	rdlong	local01, fp
	sub	fp, #8
	cmps	local01, #0 wcz
 if_ae	jmp	#LR__0390
	add	fp, #16
	rdlong	local02, fp
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #20
	add	local02, ##1036
	rdlong	local05, local02
	cmp	local04, local05 wcz
 if_be	jmp	#LR__0390
	add	fp, #16
	rdlong	local02, fp
	mov	local03, local02
	add	local03, ##1040
	rdlong	local07, local03
	sub	local03, ##1040
	mov	local01, local07
	mov	local08, local02
	mov	local04, local08
	mov	local09, local02
	sub	fp, #16
	mov	local06, local09
	add	local06, ##1040
	rdlong	local10, local06
	sub	local06, ##1040
	mov	local05, local10
	sub	local05, #1
	add	local04, ##1040
	wrlong	local05, local04
	sub	local04, ##1040
LR__0390
LR__0391
	add	fp, #16
	rdlong	local01, fp
	add	fp, #4
	rdlong	local02, fp
	sub	fp, #20
	add	local01, ##1036
	wrlong	local02, local01
	jmp	#LR__0394
LR__0392
	add	fp, #16
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	sub	fp, #24
	call	#_fs9p_internal_cc_fs_fstat
	add	fp, #72
	wrlong	result1, fp
	sub	fp, #72
	cmps	result1, #0 wcz
 if_ae	jmp	#LR__0393
	add	ptr___system__dat__, ##564
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0396
LR__0393
	add	fp, #16
	rdlong	local01, fp
	add	fp, #32
	rdlong	local02, fp
	sub	fp, #40
	rdlong	local04, fp
	sub	local02, local04
	add	local01, ##1036
	wrlong	local02, local01
	add	fp, #8
	rdlong	local01, fp
	sub	fp, #16
	add	local01, ##1040
	wrlong	#0, local01
LR__0394
LR__0395
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	add	local01, ##1036
	rdlong	result1, local01
LR__0396
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_v_lseek_0589_ret
	ret

_fs9p_internal_cc_v_ioctl_0590
	neg	result1, #10
_fs9p_internal_cc_v_ioctl_0590_ret
	ret

_fs9p_internal_cc_v_mkdir_0593
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, ##1044
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local03, result1 wz
 if_ne	jmp	#LR__0397
	add	ptr___system__dat__, ##564
	wrlong	#7, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
	jmp	#LR__0399
LR__0397
	mov	arg01, local03
	mov	arg02, #0
	mov	arg03, ##1044
	call	#__system____builtin_memset
	bith	local02, #31
	mov	arg03, local02
	mov	arg01, local03
	mov	arg02, local01
	call	#_fs9p_internal_cc_fs_create
	mov	local04, result1
	mov	arg01, local03
	call	#__system___gc_free
	cmp	local04, #0 wz
 if_e	jmp	#LR__0398
	neg	arg01, local04 wz
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0399
LR__0398
	mov	result1, #0
LR__0399
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_v_mkdir_0593_ret
	ret

_fs9p_internal_cc_v_remove_0595
	add	ptr__fs9p_internal_cc_dat__, ##1052
	mov	arg02, arg01
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##1052
	call	#_fs9p_internal_cc_fs_delete
_fs9p_internal_cc_v_remove_0595_ret
	ret

_fs9p_internal_cc_v_rmdir_0596
	add	ptr__fs9p_internal_cc_dat__, ##1052
	mov	arg02, arg01
	mov	arg01, ptr__fs9p_internal_cc_dat__
	sub	ptr__fs9p_internal_cc_dat__, ##1052
	call	#_fs9p_internal_cc_fs_delete
_fs9p_internal_cc_v_rmdir_0596_ret
	ret

_fs9p_internal_cc_v_rename_0597
	neg	result1, #16
_fs9p_internal_cc_v_rename_0597_ret
	ret

_fs9p_internal_cc_v_open_0601
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	arg01, ##1044
	mov	arg02, #16
	call	#__system___gc_doalloc
	mov	local04, result1 wz
 if_e	neg	result1, #7
 if_e	jmp	#LR__0401
	mov	arg01, local04
	mov	arg02, #0
	mov	arg03, ##1044
	call	#__system____builtin_memset
	mov	arg03, local03
	and	arg03, #3
	test	local03, #8 wz
 if_ne	or	arg03, #16
	mov	arg01, local04
	mov	arg02, local02
	call	#_fs9p_internal_cc_fs_open
	mov	local05, result1 wz
 if_e	jmp	#LR__0400
	mov	arg01, local04
	call	#__system___gc_free
	neg	arg01, local05 wz
	add	ptr___system__dat__, ##564
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, ##564
 if_ne	neg	result1, #1
 if_e	mov	result1, #0
	jmp	#LR__0401
LR__0400
	wrlong	local04, local01
	mov	result1, #0
LR__0401
	mov	ptra, fp
	call	#popregs_
_fs9p_internal_cc_v_open_0601_ret
	ret

___struct_ControllerClass_readFake
	mov	result1, #0
	zerox	result1, #7
	rdbyte	_var01, objptr
	andn	result1, _var01
	wrbyte	#0, objptr
___struct_ControllerClass_readFake_ret
	ret

___struct_ControllerClass_read
	zerox	arg01, #7
	and	arg01, #15
	mov	result1, arg01
	zerox	result1, #7
	rdbyte	_var01, objptr
	andn	result1, _var01
	wrbyte	arg01, objptr
___struct_ControllerClass_read_ret
	ret

___struct__anon_9b5668f900000005_sputc
	rdlong	_var01, objptr
	add	objptr, #4
	rdlong	_var02, objptr
	sub	objptr, #4
	cmps	_var01, _var02 wcz
 if_ae	jmp	#LR__0402
	rdlong	_var01, objptr
	mov	_var02, _var01
	add	_var02, #1
	wrlong	_var02, objptr
	wrbyte	arg01, _var01
LR__0402
	mov	result1, #1
___struct__anon_9b5668f900000005_sputc_ret
	ret

___struct__fmtfile_putchar
	mov	COUNT_, #5
	call	#pushregs_
	rdlong	local01, objptr
	add	local01, #20
	rdlong	local02, local01
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	rdlong	arg02, objptr
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	ptra, fp
	call	#popregs_
___struct__fmtfile_putchar_ret
	ret
hubexit
	jmp	#cogexit

__system___setbaud
	rdlong	muldiva_, #20
	mov	muldivb_, arg01
	call	#divide_
	dirl	#62
	dirl	#63
	wrlong	muldivb_, ptr___system__dat__
	shl	muldivb_, #16
	mov	arg02, #7
	add	arg02, muldivb_
	wrpin	#124, #62
	wxpin	arg02, #62
	wrpin	#62, #63
	add	arg02, #20
	wxpin	arg02, #63
	dirh	#62
	dirh	#63
__system___setbaud_ret
	ret

__system___txraw
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, ptr___system__dat__ wz
 if_ne	jmp	#LR__0403
	mov	arg01, ##230400
	call	#__system___setbaud
LR__0403
	wypin	local01, #62
	waitx	#1
	loc	pa,	#(@LR__0405-@LR__0404)
	call	#FCACHE_LOAD_
LR__0404
	testp	#62 wc
 if_nc	jmp	#LR__0404
LR__0405
	mov	result1, #1
	mov	ptra, fp
	call	#popregs_
__system___txraw_ret
	ret

__system___rxraw
	mov	COUNT_, #11
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, ptr___system__dat__ wz
 if_ne	jmp	#LR__0406
	mov	arg01, ##230400
	call	#__system___setbaud
LR__0406
	cmp	local01, #0 wz
 if_e	jmp	#LR__0407
	getct	local03
	rdlong	local04, #20
	shr	local04, #10
	qmul	local01, local04
	getqx	local05
	add	local03, local05
LR__0407
	neg	local06, #1
	mov	local07, #0
	add	ptr___system__dat__, #4
	rdlong	local08, ptr___system__dat__
	sub	ptr___system__dat__, #4
LR__0408
	testb	local08, #8 wc
	testbn	local08, #9 andc
	shr	local08, #10
 if_b	mov	local07, #1
 if_b	jmp	#LR__0409
	testp	#63 wz
 if_e	mov	local07, #1
 if_e	rdpin	local08, #63
 if_e	shr	local08, #4
LR__0409
	mov	local02, #0
	cmp	local07, #0 wz
 if_ne	neg	local02, #1
	mov	local09, #0
	mov	local04, #0
	cmp	local01, #0 wz
 if_ne	neg	local04, #1
	mov	local05, #0
	mov	local10, #0
	getct	local11
	sub	local11, local03
	cmps	local11, #0 wcz
 if_b	neg	local10, #1
	cmp	local10, #0 wz
 if_ne	neg	local05, #1
	test	local04, local05 wz
 if_ne	neg	local09, #1
	or	local02, local09 wz
 if_e	jmp	#LR__0408
	cmp	local07, #0 wz
 if_ne	mov	local06, local08
 if_ne	and	local06, #255
	add	ptr___system__dat__, #4
	wrlong	local08, ptr___system__dat__
	sub	ptr___system__dat__, #4
	mov	result1, local06
	mov	ptra, fp
	call	#popregs_
__system___rxraw_ret
	ret

__system____builtin_memset
	mov	_var01, arg01
	mov	_var02, arg02
	shl	_var02, #8
	or	_var02, arg02
	mov	_var03, _var02
	shl	_var03, #16
	or	_var03, _var02
	loc	pa,	#(@LR__0411-@LR__0410)
	call	#FCACHE_LOAD_
LR__0410
	cmps	arg03, #3 wcz
 if_be	jmp	#LR__0412
	wrlong	_var03, arg01
	add	arg01, #4
	sub	arg03, #4
	jmp	#LR__0410
LR__0411
LR__0412
	cmp	arg03, #0 wz
 if_e	jmp	#LR__0417
	loc	pa,	#(@LR__0415-@LR__0413)
	call	#FCACHE_LOAD_
LR__0413
	rep	@LR__0416, arg03
LR__0414
	wrbyte	arg02, arg01
	add	arg01, #1
LR__0415
LR__0416
LR__0417
	mov	result1, _var01
__system____builtin_memset_ret
	ret

__system____builtin_memmove
	mov	_var01, arg01
	cmps	arg01, arg02 wcz
 if_ae	jmp	#LR__0425
	loc	pa,	#(@LR__0419-@LR__0418)
	call	#FCACHE_LOAD_
LR__0418
	cmps	arg03, #3 wcz
 if_be	jmp	#LR__0420
	rdlong	_var02, arg02
	wrlong	_var02, arg01
	add	arg01, #4
	add	arg02, #4
	sub	arg03, #4
	jmp	#LR__0418
LR__0419
LR__0420
	mov	_var03, arg03 wz
 if_e	jmp	#LR__0431
	loc	pa,	#(@LR__0423-@LR__0421)
	call	#FCACHE_LOAD_
LR__0421
	rep	@LR__0424, _var03
LR__0422
	rdbyte	_var02, arg02
	wrbyte	_var02, arg01
	add	arg01, #1
	add	arg02, #1
LR__0423
LR__0424
	jmp	#LR__0431
LR__0425
	add	arg01, arg03
	add	arg02, arg03
	mov	_var04, arg03 wz
 if_e	jmp	#LR__0430
	loc	pa,	#(@LR__0428-@LR__0426)
	call	#FCACHE_LOAD_
LR__0426
	rep	@LR__0429, _var04
LR__0427
	sub	arg01, #1
	sub	arg02, #1
	rdbyte	_var02, arg02
	wrbyte	_var02, arg01
LR__0428
LR__0429
LR__0430
LR__0431
	mov	result1, _var01
__system____builtin_memmove_ret
	ret

__system__longmove
	mov	_var01, arg01
	cmps	arg01, arg02 wcz
 if_ae	jmp	#LR__0436
	mov	_var02, arg03 wz
 if_e	jmp	#LR__0442
	loc	pa,	#(@LR__0434-@LR__0432)
	call	#FCACHE_LOAD_
LR__0432
	rep	@LR__0435, _var02
LR__0433
	rdlong	_var03, arg02
	wrlong	_var03, arg01
	add	arg01, #4
	add	arg02, #4
LR__0434
LR__0435
	jmp	#LR__0442
LR__0436
	mov	_var04, arg03
	shl	_var04, #2
	add	arg01, _var04
	mov	_var04, arg03
	shl	_var04, #2
	add	arg02, _var04
	mov	_var05, arg03 wz
 if_e	jmp	#LR__0441
	loc	pa,	#(@LR__0439-@LR__0437)
	call	#FCACHE_LOAD_
LR__0437
	rep	@LR__0440, _var05
LR__0438
	sub	arg01, #4
	sub	arg02, #4
	rdlong	_var03, arg02
	wrlong	_var03, arg01
LR__0439
LR__0440
LR__0441
LR__0442
	mov	result1, _var01
__system__longmove_ret
	ret

__system____builtin_strcpy
	mov	_var01, arg01
	loc	pa,	#(@LR__0444-@LR__0443)
	call	#FCACHE_LOAD_
LR__0443
	rdbyte	_var02, arg02 wz
	wrbyte	_var02, arg01
	add	arg02, #1
	add	arg01, #1
 if_ne	jmp	#LR__0443
LR__0444
	mov	result1, _var01
__system____builtin_strcpy_ret
	ret

__system____topofstack
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #8
	add	fp, #4
	wrlong	arg01, fp
	mov	result1, fp
	sub	fp, #4
	mov	ptra, fp
	call	#popregs_
__system____topofstack_ret
	ret

__system___make_methodptr
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	arg01, #8
	call	#__system___gc_alloc_managed
	mov	local03, result1 wz
 if_e	jmp	#LR__0445
	wrlong	local01, local03
	mov	local04, local03
	add	local04, #4
	wrlong	local02, local04
LR__0445
	mov	result1, local03
	mov	ptra, fp
	call	#popregs_
__system___make_methodptr_ret
	ret

__system___tx
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	cmp	local01, #10 wz
 if_ne	jmp	#LR__0446
	add	ptr___system__dat__, #8
	rdlong	local02, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	local02, #2 wz
 if_e	jmp	#LR__0446
	mov	local02, #13
	mov	arg01, #13
	call	#__system___txraw
LR__0446
	mov	arg01, local01
	call	#__system___txraw
	mov	ptra, fp
	call	#popregs_
__system___tx_ret
	ret

__system___rx
	mov	COUNT_, #2
	call	#pushregs_
LR__0447
	mov	arg01, #0
	call	#__system___rxraw
	mov	local01, result1
	cmp	local01, ##-1 wz
 if_e	jmp	#LR__0447
	cmp	local01, #13 wz
 if_ne	jmp	#LR__0448
	add	ptr___system__dat__, #8
	rdlong	local02, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	local02, #2 wz
 if_ne	mov	local01, #10
LR__0448
	add	ptr___system__dat__, #8
	rdlong	local02, ptr___system__dat__
	sub	ptr___system__dat__, #8
	test	local02, #1 wz
 if_e	jmp	#LR__0451
	cmp	local01, #127 wz
 if_ne	jmp	#LR__0449
	mov	arg01, #8
	call	#__system___tx
	jmp	#LR__0450
LR__0449
	mov	arg01, local01
	call	#__system___tx
LR__0450
LR__0451
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
__system___rx_ret
	ret

__system___lockmem
	mov	COUNT_, #2
	call	#pushregs_
	mov	result1, __lockreg
	mov	local01, result1
	loc	pa,	#(@LR__0454-@LR__0452)
	call	#FCACHE_LOAD_
LR__0452
LR__0453
	locktry	local01 wc
	muxnc	result1, ##-1
	cmp	result1, #0 wz
 if_ne	jmp	#LR__0453
	rdbyte	local02, arg01 wz
 if_e	wrbyte	#1, arg01
	lockrel	local01 wc
	muxc	result1, ##-1
	cmp	local02, #0 wz
 if_ne	jmp	#LR__0452
LR__0454
	mov	ptra, fp
	call	#popregs_
__system___lockmem_ret
	ret

__system___waitms
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	rdlong	local02, #20
	loc	pa,	#(@LR__0456-@LR__0455)
	call	#FCACHE_LOAD_
LR__0455
	cmps	local01, ##1000 wcz
 if_a	waitx	local02
 if_a	sub	local01, ##1000
 if_a	jmp	#LR__0455
LR__0456
	cmps	local01, #0 wcz
 if_be	jmp	#LR__0457
	mov	muldiva_, local02
	mov	muldivb_, ##1000
	call	#divide_
	qmul	local01, muldivb_
	getqx	arg01
	waitx	arg01
LR__0457
	mov	ptra, fp
	call	#popregs_
__system___waitms_ret
	ret

__system___basic_print_char
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg02
	call	#__system___gettxfunc
	mov	local02, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0458
	rdlong	local03, local02
	add	local02, #4
	rdlong	local04, local02
	mov	arg01, local01
	mov	local05, objptr
	mov	objptr, local03
	call	local04
	mov	objptr, local05
	mov	result1, #1
LR__0458
	mov	ptra, fp
	call	#popregs_
__system___basic_print_char_ret
	ret

__system___basic_print_string
	mov	COUNT_, #3
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	call	#__system___gettxfunc
	mov	local03, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0459
	cmp	local01, #0 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0459
	mov	arg01, local03
	mov	arg02, local02
	mov	arg03, local01
	call	#__system___fmtstr
LR__0459
	mov	ptra, fp
	call	#popregs_
__system___basic_print_string_ret
	ret

__system___basic_print_integer
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	mov	local03, arg04
	call	#__system___gettxfunc
	mov	local04, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0460
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, local01
	mov	arg04, local03
	call	#__system___fmtnum
LR__0460
	mov	ptra, fp
	call	#popregs_
__system___basic_print_integer_ret
	ret

__system___basic_print_unsigned
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	mov	local03, arg04
	call	#__system___gettxfunc
	mov	local04, result1 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0461
	bith	local02, #58
	mov	arg01, local04
	mov	arg02, local02
	mov	arg03, local01
	mov	arg04, local03
	call	#__system___fmtnum
LR__0461
	mov	ptra, fp
	call	#popregs_
__system___basic_print_unsigned_ret
	ret

__system___fmtchar
	mov	COUNT_, #0
	call	#pushregs_
	add	ptra, #20
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrbyte	arg03, fp
	add	fp, #1
	wrbyte	#0, fp
	sub	fp, #13
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #8
	mov	arg03, fp
	sub	fp, #16
	call	#__system___fmtstr
	mov	ptra, fp
	call	#popregs_
__system___fmtchar_ret
	ret

__system___fmtstr
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, local02
	and	local04, #255
	mov	arg01, local03
	mov	local05, #0
	loc	pa,	#(@LR__0463-@LR__0462)
	call	#FCACHE_LOAD_
LR__0462
	rdbyte	local06, arg01 wz
 if_ne	add	local05, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0462
LR__0463
	mov	result1, local05
	mov	local07, result1
	cmp	local04, #0 wz
 if_e	jmp	#LR__0464
	fles	local07, local04 wcz
LR__0464
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local07
	mov	arg04, #2
	call	#__system___fmtpad
	mov	local08, result1
	cmps	local08, #0 wcz
 if_b	mov	result1, local08
 if_b	jmp	#LR__0467
	mov	local09, #0
LR__0465
	cmps	local09, local07 wcz
 if_ae	jmp	#LR__0466
	mov	local10, local01
	rdlong	local11, local10
	add	local10, #4
	rdlong	local12, local10
	rdbyte	arg01, local03
	mov	local13, objptr
	mov	objptr, local11
	add	local03, #1
	call	local12
	mov	objptr, local13
	mov	local14, result1
	cmps	local14, #0 wcz
 if_b	mov	result1, local14
 if_b	jmp	#LR__0467
	add	local08, local14
	add	local09, #1
	jmp	#LR__0465
LR__0466
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local07
	mov	arg04, #1
	call	#__system___fmtpad
	mov	local14, result1
	cmps	local14, #0 wcz
 if_b	mov	result1, local14
 if_ae	add	local08, local14
 if_ae	mov	result1, local08
LR__0467
	mov	ptra, fp
	call	#popregs_
__system___fmtstr_ret
	ret

__system___fmtnum
	mov	COUNT_, #7
	call	#pushregs_
	add	ptra, #112
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #4
	mov	local01, fp
	add	fp, #68
	wrlong	local01, fp
	add	fp, #4
	wrlong	#0, fp
	sub	fp, #84
	rdlong	local01, fp
	shr	local01, #16
	and	local01, #63
	add	fp, #88
	wrlong	local01, fp
	sub	fp, #88
	rdlong	local01, fp
	and	local01, #255
	add	fp, #92
	wrlong	local01, fp
	sub	fp, #92
	rdlong	local01, fp
	shr	local01, #26
	and	local01, #3
	add	fp, #96
	wrlong	local01, fp
	sub	fp, #8
	rdlong	local01, fp
	sub	fp, #96
	cmps	local01, #0 wcz
 if_be	jmp	#LR__0468
	add	fp, #96
	rdlong	local01, fp
	sub	local01, #1
	wrlong	local01, fp
	sub	fp, #96
LR__0468
	add	fp, #100
	rdlong	local02, fp
	sub	fp, #100
	cmps	local02, #64 wcz
 if_a	jmp	#LR__0469
	add	fp, #100
	rdlong	local03, fp
	sub	fp, #100
	mov	local04, local03 wz
 if_ne	jmp	#LR__0470
LR__0469
	add	fp, #100
	wrlong	#64, fp
	sub	fp, #100
LR__0470
	add	fp, #104
	rdlong	local01, fp
	sub	fp, #104
	cmp	local01, #3 wz
 if_ne	jmp	#LR__0471
	add	fp, #104
	wrlong	#0, fp
	sub	fp, #104
	jmp	#LR__0473
LR__0471
	add	fp, #12
	rdlong	local01, fp
	sub	fp, #12
	cmps	local01, #0 wcz
 if_ae	jmp	#LR__0472
	add	fp, #104
	wrlong	#4, fp
	sub	fp, #92
	rdlong	local01, fp
	neg	local01, local01
	wrlong	local01, fp
	sub	fp, #12
LR__0472
LR__0473
	add	fp, #104
	rdlong	local01, fp wz
	sub	fp, #104
 if_e	jmp	#LR__0480
	add	fp, #92
	rdlong	local04, fp
	add	local04, #1
	wrlong	local04, fp
	add	fp, #4
	rdlong	local01, fp
	add	fp, #4
	rdlong	local04, fp
	sub	fp, #100
	cmp	local01, local04 wz
 if_ne	jmp	#LR__0475
	add	fp, #96
	rdlong	local04, fp
	sub	local04, #1
	wrlong	local04, fp
	rdlong	local01, fp wz
	sub	fp, #96
 if_ne	jmp	#LR__0474
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	sub	fp, #8
	mov	arg03, #35
	call	#__system___fmtchar
	jmp	#LR__0485
LR__0474
LR__0475
	add	fp, #104
	rdlong	local01, fp
	sub	fp, #104
	cmp	local01, #2 wz
 if_ne	jmp	#LR__0476
	add	fp, #88
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #88
	wrbyte	#32, local01
	jmp	#LR__0479
LR__0476
	add	fp, #104
	rdlong	local01, fp
	sub	fp, #104
	cmp	local01, #4 wz
 if_ne	jmp	#LR__0477
	add	fp, #88
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #88
	wrbyte	#45, local01
	jmp	#LR__0478
LR__0477
	add	fp, #88
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #88
	wrbyte	#43, local01
LR__0478
LR__0479
LR__0480
	add	fp, #88
	rdlong	arg01, fp
	sub	fp, #76
	rdlong	arg02, fp
	add	fp, #4
	rdlong	arg03, fp
	add	fp, #80
	rdlong	arg04, fp
	mov	local05, #0
	sub	fp, #88
	rdlong	local06, fp
	sub	fp, #8
	testbn	local06, #29 wz
 if_ne	mov	local05, #1
	mov	arg05, local05
	call	#__system___uitoa
	mov	local07, result1
	add	fp, #92
	rdlong	local01, fp
	add	local01, local07
	wrlong	local01, fp
	add	fp, #8
	rdlong	local04, fp
	sub	fp, #100
	cmps	local01, local04 wcz
 if_be	jmp	#LR__0484
	loc	pa,	#(@LR__0482-@LR__0481)
	call	#FCACHE_LOAD_
LR__0481
	add	fp, #100
	rdlong	local01, fp
	mov	local04, local01
	sub	local04, #1
	wrlong	local04, fp
	sub	fp, #100
	cmps	local01, #0 wcz
 if_be	jmp	#LR__0483
	add	fp, #88
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #88
	wrbyte	#35, local01
	jmp	#LR__0481
LR__0482
LR__0483
	add	fp, #88
	rdlong	local01, fp
	mov	local04, local01
	add	local04, #1
	wrlong	local04, fp
	sub	fp, #88
	wrbyte	#0, local01
LR__0484
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #12
	mov	arg03, fp
	sub	fp, #20
	call	#__system___fmtstr
LR__0485
	mov	ptra, fp
	call	#popregs_
__system___fmtnum_ret
	ret

__system___fmtfloat
	mov	COUNT_, #17
	call	#pushregs_
	add	ptra, #292
	add	fp, #4
	wrlong	arg01, fp
	add	fp, #4
	wrlong	arg02, fp
	add	fp, #4
	wrlong	arg03, fp
	add	fp, #4
	wrlong	arg04, fp
	add	fp, #12
	wrlong	#10, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #8
	wrlong	#0, fp
	add	fp, #4
	wrlong	#2, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #4
	wrlong	#0, fp
	add	fp, #24
	wrlong	#0, fp
	add	fp, #104
	mov	local01, fp
	sub	fp, #8
	wrlong	local01, fp
	add	fp, #4
	wrlong	local01, fp
	sub	fp, #188
	rdlong	local02, fp
	shr	local02, #16
	and	local02, #63
	add	fp, #176
	wrlong	local02, fp
	sub	fp, #176
	rdlong	local02, fp
	shr	local02, #28
	and	local02, #1
	add	fp, #264
	wrlong	local02, fp
	sub	fp, #88
	rdlong	local02, fp wz
	sub	fp, #184
 if_ne	jmp	#LR__0487
	add	fp, #16
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #97 wz
 if_ne	jmp	#LR__0486
	add	fp, #184
	wrlong	#13, fp
	sub	fp, #132
	wrlong	#1, fp
	sub	fp, #52
	jmp	#LR__0488
LR__0486
	add	fp, #184
	wrlong	#6, fp
	sub	fp, #184
	jmp	#LR__0488
LR__0487
	add	fp, #184
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #184
LR__0488
	add	fp, #8
	rdlong	local02, fp
	shr	local02, #22
	and	local02, #3
	add	fp, #260
	wrlong	local02, fp
	sub	fp, #260
	rdlong	local02, fp
	shr	local02, #29
	and	local02, #1
	add	fp, #180
	wrlong	local02, fp
	sub	fp, #180
	rdlong	local02, fp
	shr	local02, #8
	and	local02, #255
	add	fp, #96
	wrlong	local02, fp
	sub	fp, #96
	rdlong	local02, fp
	and	local02, #255
	add	fp, #100
	wrlong	local02, fp
	mov	local02, #0
	sub	fp, #92
	rdlong	local01, fp
	cmp	local01, #101 wz
 if_e	mov	local02, #1
	add	fp, #20
	wrlong	local02, fp
	add	fp, #152
	rdlong	local01, fp wz
 if_ne	mov	local02, #69
 if_e	mov	local02, #101
	sub	fp, #140
	wrlong	local02, fp
	sub	fp, #32
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #97 wz
 if_ne	jmp	#LR__0489
	add	fp, #36
	wrlong	#1, fp
	add	fp, #152
	rdlong	local01, fp wz
 if_ne	mov	local02, #80
 if_e	mov	local02, #112
	sub	fp, #140
	wrlong	local02, fp
	sub	fp, #20
	wrlong	#2, fp
	add	fp, #28
	wrlong	#1, fp
	add	fp, #132
	rdlong	local01, fp wz
 if_ne	mov	local02, #88
 if_e	mov	local02, #120
	sub	fp, #124
	wrlong	local02, fp
	sub	fp, #64
LR__0489
	add	fp, #16
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #35 wz
 if_ne	jmp	#LR__0492
	add	fp, #72
	wrlong	#1, fp
	add	fp, #200
	rdlong	local02, fp wz
	sub	fp, #272
 if_e	jmp	#LR__0490
	add	fp, #16
	wrlong	#102, fp
	add	fp, #256
	wrlong	#0, fp
	sub	fp, #272
	jmp	#LR__0491
LR__0490
	add	fp, #272
	wrlong	#1, fp
	sub	fp, #272
LR__0491
LR__0492
	add	fp, #8
	rdlong	local02, fp
	shr	local02, #26
	and	local02, #3
	add	fp, #92
	wrlong	local02, fp
	sub	fp, #88
	rdlong	result1, fp
	sub	fp, #12
	shr	result1, #31 wz
 if_e	jmp	#LR__0493
	add	fp, #44
	wrlong	#45, fp
	sub	fp, #32
	rdlong	result1, fp
	bitnot	result1, #31
	wrlong	result1, fp
	sub	fp, #12
	jmp	#LR__0496
LR__0493
	add	fp, #100
	rdlong	local02, fp
	sub	fp, #100
	cmp	local02, #1 wz
 if_ne	jmp	#LR__0494
	add	fp, #44
	wrlong	#43, fp
	sub	fp, #44
	jmp	#LR__0495
LR__0494
	add	fp, #100
	rdlong	local02, fp
	sub	fp, #100
	cmp	local02, #2 wz
 if_e	add	fp, #44
 if_e	wrlong	#32, fp
 if_e	sub	fp, #44
LR__0495
LR__0496
	add	fp, #8
	rdlong	local02, fp
	shr	local02, #24
	and	local02, #3
	add	fp, #60
	wrlong	local02, fp
	mov	local02, #0
	sub	fp, #24
	rdlong	local03, fp
	sub	fp, #44
	mov	local01, local03 wz
 if_ne	jmp	#LR__0497
	add	fp, #28
	rdlong	local04, fp
	sub	fp, #28
	mov	local05, local04
	cmp	local05, #10 wz
 if_e	jmp	#LR__0498
LR__0497
	xor	local02, #1
LR__0498
	add	fp, #60
	wrlong	local02, fp
	rdlong	local02, fp wz
	sub	fp, #60
 if_e	jmp	#LR__0501
	add	fp, #68
	rdlong	local03, fp
	sub	fp, #68
	cmp	local03, #2 wz
 if_ne	jmp	#LR__0501
	add	fp, #268
	rdlong	local06, fp
	sub	fp, #268
	mov	local04, local06
	cmp	local04, #2 wz
 if_e	jmp	#LR__0501
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #148
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local06, fp
	sub	fp, #64
	mov	local04, local06
	mov	arg03, local04
	call	#__system__emitsign_0357
	mov	local07, result1
	add	fp, #276
	wrlong	local07, fp
	mov	local02, local07
	sub	fp, #276
	cmps	local02, #0 wcz
 if_ae	jmp	#LR__0499
	add	fp, #276
	rdlong	result1, fp
	sub	fp, #276
	jmp	#LR__0557
LR__0499
	add	fp, #192
	rdlong	local02, fp
	add	fp, #84
	rdlong	local05, fp
	mov	local03, local05
	add	local02, local05
	sub	fp, #84
	wrlong	local02, fp
	sub	fp, #88
	rdlong	local01, fp wz
	sub	fp, #104
 if_e	jmp	#LR__0500
	add	fp, #104
	rdlong	local02, fp
	add	fp, #172
	rdlong	local03, fp
	sub	local02, local03
	sub	fp, #172
	wrlong	local02, fp
	sub	fp, #104
	cmps	local02, #0 wcz
 if_b	add	fp, #104
 if_b	wrlong	#0, fp
 if_b	sub	fp, #104
	add	fp, #8
	rdlong	local01, fp
	bitl	local01, #232
	wrlong	local01, fp
	mov	local02, local01
	add	fp, #96
	rdlong	local05, fp
	mov	local03, local05
	shl	local03, #8
	or	local02, local03
	sub	fp, #96
	wrlong	local02, fp
	sub	fp, #8
LR__0500
	mov	local02, #0
	add	fp, #60
	wrlong	#0, fp
	sub	fp, #60
LR__0501
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	call	#__system____builtin_ilogb
	cmp	result1, ##2147483647 wz
 if_ne	jmp	#LR__0503
	add	fp, #44
	rdlong	local02, fp wz
	sub	fp, #44
 if_e	jmp	#LR__0502
	add	fp, #192
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #148
	rdlong	local04, fp
	sub	fp, #44
	wrbyte	local04, local02
LR__0502
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #192
	mov	arg02, ##@LR__0702
	call	#__system____builtin_strcpy
	jmp	#LR__0545
LR__0503
	add	fp, #12
	rdlong	arg01, fp
	sub	fp, #12
	call	#__system____builtin_ilogb
	cmp	result1, ##-2147483648 wz
 if_ne	jmp	#LR__0505
	add	fp, #44
	rdlong	local02, fp wz
	sub	fp, #44
 if_e	jmp	#LR__0504
	add	fp, #192
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #148
	rdlong	local04, fp
	sub	fp, #44
	wrbyte	local04, local02
LR__0504
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #192
	mov	arg02, ##@LR__0703
	call	#__system____builtin_strcpy
	jmp	#LR__0545
LR__0505
	add	fp, #16
	rdlong	local01, fp
	sub	fp, #16
	cmp	local01, #103 wz
 if_e	jmp	#LR__0506
	add	fp, #16
	rdlong	local05, fp
	sub	fp, #16
	mov	local03, local05
	cmp	local03, #35 wz
 if_ne	jmp	#LR__0512
LR__0506
	add	fp, #12
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	local04, fp
	mov	arg03, local04
	add	fp, #152
	rdlong	arg04, fp
	sub	fp, #156
	rdlong	arg05, fp
	sub	fp, #28
	call	#__system__disassemble_0355
	add	fp, #16
	rdlong	local02, fp
	sub	fp, #16
	cmp	local02, #35 wz
 if_ne	jmp	#LR__0509
	add	fp, #32
	rdlong	local02, fp
	add	fp, #152
	rdlong	local03, fp
	sub	fp, #184
	cmps	local02, local03 wcz
 if_be	jmp	#LR__0507
	add	fp, #36
	wrlong	#1, fp
	sub	fp, #36
	jmp	#LR__0515
LR__0507
	add	fp, #32
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #0 wcz
 if_ae	jmp	#LR__0508
	add	fp, #184
	rdlong	local02, fp
	neg	local02, local02
	sub	fp, #152
	rdlong	local03, fp
	sub	fp, #32
	cmps	local03, local02 wcz
 if_be	add	fp, #36
 if_be	wrlong	#1, fp
 if_be	sub	fp, #36
	jmp	#LR__0515
LR__0508
	add	fp, #32
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #0 wcz
 if_be	jmp	#LR__0515
	add	fp, #184
	rdlong	local02, fp
	sub	fp, #152
	rdlong	local03, fp
	sub	local02, local03
	add	fp, #152
	wrlong	local02, fp
	sub	fp, #184
	jmp	#LR__0515
LR__0509
	mov	local02, #0
	add	fp, #8
	rdlong	local01, fp
	shr	local01, #28
	test	local01, #1 wz
 if_e	mov	local02, #1
	add	fp, #44
	wrlong	local02, fp
	sub	fp, #20
	rdlong	local01, fp
	mov	local02, local01
	add	fp, #152
	rdlong	local05, fp
	sub	fp, #184
	cmps	local02, local05 wcz
 if_ae	jmp	#LR__0510
	add	fp, #32
	rdlong	local04, fp
	sub	fp, #32
	cmps	local04, ##-4 wcz
 if_ae	jmp	#LR__0511
LR__0510
	add	fp, #36
	wrlong	#1, fp
	sub	fp, #36
	jmp	#LR__0515
LR__0511
	add	fp, #184
	rdlong	local02, fp
	sub	fp, #152
	rdlong	local03, fp
	sub	local02, local03
	add	fp, #152
	wrlong	local02, fp
	sub	fp, #172
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	arg03, fp
	add	fp, #152
	rdlong	local07, fp
	neg	arg04, local07
	sub	fp, #156
	rdlong	local08, fp
	sub	fp, #28
	mov	arg05, local08
	call	#__system__disassemble_0355
	jmp	#LR__0515
LR__0512
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__0513
	add	fp, #12
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	arg03, fp
	add	fp, #152
	rdlong	arg04, fp
	sub	fp, #156
	rdlong	arg05, fp
	sub	fp, #28
	call	#__system__disassemble_0355
	jmp	#LR__0514
LR__0513
	add	fp, #12
	rdlong	arg01, fp
	add	fp, #8
	mov	arg02, fp
	add	fp, #12
	mov	arg03, fp
	add	fp, #152
	rdlong	local07, fp
	add	local07, #1
	neg	arg04, local07
	sub	fp, #156
	rdlong	local08, fp
	sub	fp, #28
	mov	arg05, local08
	call	#__system__disassemble_0355
LR__0514
LR__0515
	add	fp, #28
	rdlong	local02, fp
	sub	fp, #28
	cmp	local02, #2 wz
 if_ne	jmp	#LR__0518
	add	fp, #28
	wrlong	#16, fp
	sub	fp, #28
LR__0516
	add	fp, #20
	rdlong	local02, fp wz
	sub	fp, #20
 if_e	jmp	#LR__0517
	add	fp, #20
	rdlong	local03, fp
	sub	fp, #20
	cmp	local03, ##16777216 wcz
 if_ae	jmp	#LR__0517
	add	fp, #20
	rdlong	local02, fp
	shl	local02, #1
	wrlong	local02, fp
	sub	fp, #20
	jmp	#LR__0516
LR__0517
LR__0518
	add	fp, #112
	mov	arg01, fp
	sub	fp, #92
	rdlong	arg02, fp
	add	fp, #8
	rdlong	arg03, fp
	add	fp, #160
	rdlong	arg05, fp
	sub	fp, #188
	mov	arg04, #1
	call	#__system___uitoa
	add	fp, #88
	wrlong	result1, fp
	sub	fp, #56
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #0 wcz
 if_ae	jmp	#LR__0519
	add	fp, #96
	wrlong	#45, fp
	add	fp, #80
	mov	arg01, fp
	sub	fp, #144
	rdlong	local03, fp
	neg	local04, local03
	mov	local06, #10
	add	fp, #24
	rdlong	local09, fp
	mov	local07, local09
	add	fp, #132
	rdlong	local10, fp
	sub	fp, #188
	mov	local11, local10
	mov	arg02, local04
	mov	arg03, #10
	mov	arg04, local07
	mov	arg05, local11
	call	#__system___uitoa
	mov	local08, result1
	add	fp, #92
	wrlong	local08, fp
	sub	fp, #92
	jmp	#LR__0520
LR__0519
	add	fp, #96
	wrlong	#43, fp
	add	fp, #80
	mov	arg01, fp
	sub	fp, #144
	rdlong	arg02, fp
	add	fp, #24
	rdlong	local07, fp
	mov	local06, local07
	add	fp, #132
	rdlong	local11, fp
	sub	fp, #188
	mov	local09, local11
	mov	arg03, #10
	mov	arg04, local06
	mov	arg05, local09
	call	#__system___uitoa
	mov	local10, result1
	add	fp, #92
	wrlong	local10, fp
	sub	fp, #92
LR__0520
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__0521
	add	fp, #80
	wrlong	#0, fp
	sub	fp, #4
	wrlong	#0, fp
	add	fp, #108
	rdlong	local02, fp
	add	local02, #1
	sub	fp, #100
	wrlong	local02, fp
	sub	fp, #84
	jmp	#LR__0524
LR__0521
	add	fp, #32
	rdlong	local02, fp
	sub	fp, #32
	cmps	local02, #0 wcz
 if_ae	jmp	#LR__0522
	add	fp, #32
	rdlong	local01, fp
	add	fp, #48
	wrlong	local01, fp
	sub	fp, #4
	wrlong	local01, fp
	sub	fp, #44
	rdlong	local02, fp
	add	fp, #152
	rdlong	local03, fp
	add	local02, local03
	add	local02, #1
	sub	fp, #100
	wrlong	local02, fp
	sub	fp, #84
	jmp	#LR__0523
LR__0522
	add	fp, #76
	wrlong	#0, fp
	sub	fp, #44
	rdlong	local02, fp
	add	fp, #48
	wrlong	local02, fp
	add	fp, #104
	rdlong	local03, fp
	add	local02, local03
	add	local02, #1
	sub	fp, #100
	wrlong	local02, fp
	sub	fp, #84
LR__0523
LR__0524
	add	fp, #84
	rdlong	local02, fp
	sub	fp, #8
	rdlong	local03, fp
	sub	local02, local03
	add	local02, #1
	sub	fp, #36
	wrlong	local02, fp
	add	fp, #4
	rdlong	local02, fp wz
	sub	fp, #44
 if_e	jmp	#LR__0525
	add	fp, #40
	rdlong	local03, fp
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #40
LR__0525
	add	fp, #28
	rdlong	local02, fp
	sub	fp, #28
	cmp	local02, #16 wz
 if_ne	jmp	#LR__0526
	add	fp, #40
	rdlong	local02, fp
	add	local02, #2
	wrlong	local02, fp
	sub	fp, #40
LR__0526
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__0527
	add	fp, #40
	rdlong	local02, fp
	mov	local03, #2
	add	fp, #52
	rdlong	local05, fp
	add	local03, local05
	add	local02, local03
	sub	fp, #52
	wrlong	local02, fp
	sub	fp, #40
LR__0527
	add	fp, #40
	rdlong	local02, fp
	sub	fp, #40
	cmps	local02, #64 wcz
 if_a	neg	result1, #1
 if_a	jmp	#LR__0557
	add	fp, #60
	rdlong	local02, fp wz
	sub	fp, #60
 if_e	jmp	#LR__0529
	add	fp, #192
	rdlong	arg01, fp
	sub	fp, #148
	rdlong	arg02, fp
	add	fp, #20
	rdlong	local06, fp
	sub	fp, #64
	mov	arg03, local06
	call	#__system__emitsign_0357
	mov	local07, result1
	add	fp, #280
	wrlong	local07, fp
	mov	local02, local07
	sub	fp, #280
	cmps	local02, #0 wcz
 if_ae	jmp	#LR__0528
	add	fp, #280
	rdlong	result1, fp
	sub	fp, #280
	jmp	#LR__0557
LR__0528
	add	fp, #192
	rdlong	local02, fp
	add	fp, #88
	rdlong	local03, fp
	add	local02, local03
	sub	fp, #88
	wrlong	local02, fp
	sub	fp, #192
LR__0529
	add	fp, #76
	rdlong	local02, fp
	sub	fp, #52
	wrlong	local02, fp
	sub	fp, #24
	loc	pa,	#(@LR__0535-@LR__0530)
	call	#FCACHE_LOAD_
LR__0530
	add	fp, #24
	rdlong	local03, fp
	mov	local01, local03
	add	fp, #60
	rdlong	local04, fp
	sub	fp, #84
	mov	local05, local04
	cmps	local01, local05 wcz
 if_ae	jmp	#LR__0536
	add	fp, #24
	rdlong	local06, fp
	sub	fp, #24
	cmps	local06, #0 wcz
 if_b	jmp	#LR__0531
	add	fp, #24
	rdlong	local09, fp
	add	fp, #64
	rdlong	local08, fp
	sub	fp, #88
	cmps	local09, local08 wcz
 if_ae	jmp	#LR__0531
	add	fp, #192
	rdlong	local06, fp
	mov	local09, local06
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #168
	rdlong	local08, fp
	mov	local10, local08
	add	fp, #88
	mov	local12, fp
	add	local10, fp
	rdbyte	local13, local10
	wrbyte	local13, local06
	sub	fp, #112
	jmp	#LR__0532
LR__0531
	add	fp, #192
	rdlong	local06, fp
	mov	local09, local06
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #192
	mov	local10, #48
	wrbyte	#48, local06
LR__0532
	add	fp, #24
	rdlong	local06, fp
	add	fp, #56
	rdlong	local09, fp
	sub	fp, #80
	cmp	local06, local09 wz
 if_ne	jmp	#LR__0534
	add	fp, #272
	rdlong	local08, fp
	sub	fp, #272
	mov	local10, local08 wz
 if_ne	jmp	#LR__0533
	add	fp, #84
	rdlong	local13, fp
	mov	local12, local13
	sub	local12, #1
	sub	fp, #60
	rdlong	local14, fp
	sub	fp, #24
	mov	local15, local14
	cmps	local15, local12 wcz
 if_ae	jmp	#LR__0534
LR__0533
	add	fp, #192
	rdlong	local07, fp
	mov	local06, local07
	mov	local11, local07
	mov	local09, local11
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #192
	mov	local10, #46
	wrbyte	#46, local06
LR__0534
	add	fp, #24
	rdlong	local07, fp
	mov	local06, local07
	mov	local11, local07
	mov	local09, local11
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #24
	jmp	#LR__0530
LR__0535
LR__0536
	add	fp, #52
	rdlong	local02, fp wz
	sub	fp, #52
 if_e	jmp	#LR__0541
	add	fp, #192
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #192
	loc	pa,	#(@LR__0538-@LR__0537)
	call	#FCACHE_LOAD_
LR__0537
	add	fp, #192
	rdlong	local02, fp
	add	fp, #4
	rdlong	local03, fp
	sub	fp, #196
	cmps	local02, local03 wcz
 if_be	jmp	#LR__0539
	add	fp, #192
	rdlong	local07, fp
	sub	fp, #192
	mov	local06, local07
	rdbyte	local04, local06
	cmp	local04, #48 wz
 if_ne	jmp	#LR__0539
	add	fp, #192
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #192
	jmp	#LR__0537
LR__0538
LR__0539
	add	fp, #192
	rdlong	local01, fp
	sub	fp, #192
	rdbyte	local02, local01
	cmp	local02, #46 wz
 if_ne	jmp	#LR__0540
	add	fp, #192
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #192
LR__0540
	add	fp, #192
	rdlong	local05, fp
	mov	local03, local05
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #192
LR__0541
	add	fp, #36
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__0544
	add	fp, #192
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #144
	rdlong	local04, fp
	wrbyte	local04, local02
	add	fp, #144
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #96
	rdlong	local04, fp
	wrbyte	local04, local02
	sub	fp, #72
	wrlong	#0, fp
	sub	fp, #24
LR__0542
	add	fp, #24
	rdlong	local01, fp
	add	fp, #68
	rdlong	local04, fp
	sub	fp, #92
	mov	local05, local04
	cmps	local01, local05 wcz
 if_ae	jmp	#LR__0543
	add	fp, #192
	rdlong	local06, fp
	mov	local09, local06
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #168
	rdlong	local08, fp
	mov	local10, local08
	add	fp, #152
	mov	local12, fp
	add	local10, fp
	rdbyte	local13, local10
	wrbyte	local13, local06
	sub	fp, #152
	rdlong	local07, fp
	mov	local06, local07
	mov	local11, local07
	mov	local09, local11
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #24
	jmp	#LR__0542
LR__0543
LR__0544
	add	fp, #192
	rdlong	local01, fp
	sub	fp, #192
	mov	local02, local01
	mov	local03, #0
	wrbyte	#0, local02
LR__0545
	add	fp, #108
	rdlong	local02, fp wz
	sub	fp, #108
 if_e	jmp	#LR__0556
	add	fp, #72
	rdlong	local03, fp wz
	sub	fp, #72
 if_e	jmp	#LR__0556
	add	fp, #196
	rdlong	local06, fp
	sub	fp, #196
	mov	arg01, local06
	mov	local16, #0
	loc	pa,	#(@LR__0547-@LR__0546)
	call	#FCACHE_LOAD_
LR__0546
	rdbyte	local17, arg01 wz
 if_ne	add	local16, #1
 if_ne	add	arg01, #1
 if_ne	jmp	#LR__0546
LR__0547
	mov	result1, local16
	mov	local07, result1
	add	fp, #108
	rdlong	local11, fp
	sub	fp, #108
	mov	local09, local11
	cmps	local07, local09 wcz
 if_be	jmp	#LR__0556
	add	fp, #196
	rdlong	local02, fp
	add	fp, #92
	wrlong	local02, fp
	sub	fp, #252
	rdlong	local02, fp wz
	sub	fp, #36
 if_e	jmp	#LR__0548
	add	fp, #184
	wrlong	#0, fp
	sub	fp, #76
	rdlong	local02, fp
	add	fp, #176
	wrlong	local02, fp
	sub	fp, #284
	jmp	#LR__0549
LR__0548
	add	fp, #108
	rdlong	local02, fp
	sub	local02, #1
	add	fp, #76
	rdlong	local03, fp
	sub	local02, local03
	add	fp, #100
	wrlong	local02, fp
	sub	fp, #284
LR__0549
	loc	pa,	#(@LR__0551-@LR__0550)
	call	#FCACHE_LOAD_
LR__0550
	add	fp, #284
	rdlong	local02, fp wz
	sub	fp, #284
 if_e	jmp	#LR__0552
	add	fp, #288
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	wrbyte	#42, local02
	sub	fp, #4
	rdlong	local02, fp
	sub	local02, #1
	wrlong	local02, fp
	sub	fp, #284
	jmp	#LR__0550
LR__0551
LR__0552
	add	fp, #184
	rdlong	local02, fp wz
	sub	fp, #184
 if_e	jmp	#LR__0555
	add	fp, #288
	rdlong	local02, fp
	mov	local03, local02
	add	local03, #1
	wrlong	local03, fp
	wrbyte	#46, local02
	sub	fp, #4
	wrlong	#0, fp
	sub	fp, #284
LR__0553
	add	fp, #284
	rdlong	local01, fp
	sub	fp, #100
	rdlong	local05, fp
	sub	fp, #184
	cmps	local01, local05 wcz
 if_ae	jmp	#LR__0554
	add	fp, #288
	rdlong	local06, fp
	mov	local09, local06
	add	local09, #1
	wrlong	local09, fp
	mov	local10, #42
	wrbyte	#42, local06
	sub	fp, #4
	rdlong	local07, fp
	mov	local06, local07
	mov	local11, local07
	mov	local09, local11
	add	local09, #1
	wrlong	local09, fp
	sub	fp, #284
	jmp	#LR__0553
LR__0554
LR__0555
	add	fp, #288
	rdlong	local01, fp
	mov	local02, local01
	mov	local05, local01
	mov	local03, local05
	add	local03, #1
	wrlong	local03, fp
	sub	fp, #288
	mov	local04, #0
	wrbyte	#0, local02
LR__0556
	add	fp, #4
	rdlong	arg01, fp
	add	fp, #4
	rdlong	arg02, fp
	add	fp, #188
	rdlong	arg03, fp
	sub	fp, #196
	call	#__system___fmtstr
LR__0557
	mov	ptra, fp
	call	#popregs_
__system___fmtfloat_ret
	ret

__system___float_fromuns
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01 wz
 if_e	mov	result1, local01
 if_e	jmp	#LR__0558
	mov	arg02, local01
	encod	arg02, arg02 wc
 if_b	add	arg02, #1
	sub	arg02, #1
	mov	local02, #31
	sub	local02, arg02
	shl	local01, local02
	shr	local01, #2
	mov	arg01, #0
	mov	arg03, local01
	call	#__system___float_Pack
LR__0558
	mov	ptra, fp
	call	#popregs_
__system___float_fromuns_ret
	ret

__system___float_fromint
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	cmps	local01, #0 wcz
 if_b	neg	local01, local01
 if_b	mov	local02, #1
 if_ae	mov	local02, #0
	mov	arg01, local01
	call	#__system___float_fromuns
	cmp	local02, #0 wz
 if_ne	bitnot	result1, #31
	mov	ptra, fp
	call	#popregs_
__system___float_fromint_ret
	ret

__system___float_mul
	mov	COUNT_, #13
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, local01
	mov	local04, local03
	zerox	local04, #22
	mov	local05, local03
	shl	local05, #1
	shr	local05, #24
	shr	local03, #31
	mov	arg01, local02
	mov	result1, arg01
	mov	local06, result1
	mov	local07, local06
	mov	local08, local07
	zerox	local08, #22
	mov	local09, local07
	shl	local09, #1
	shr	local09, #24
	mov	local10, local09
	shr	local07, #31
	mov	local11, #0
	xor	local03, local07
	cmp	local05, #255 wz
 if_e	jmp	#LR__0562
	cmp	local10, #255 wz
 if_e	jmp	#LR__0565
	cmp	local05, #0 wz
 if_e	jmp	#LR__0567
	bith	local04, #23
LR__0559
	cmp	local10, #0 wz
 if_e	jmp	#LR__0571
	bith	local08, #23
LR__0560
	add	local05, local10
	sub	local05, #254
	mov	local12, local05
	mov	local09, local04
	shl	local09, #4
	mov	local06, local08
	shl	local06, #5
	qmul	local09, local06
	getqx	local11
	shl	local04, #4
	shl	local08, #5
	qmul	local04, local08
	getqy	local13
	cmp	local13, ##16777216 wcz
 if_b	jmp	#LR__0561
	add	local12, #1
	shr	local11, #1
	mov	local06, local13
	shl	local06, #31
	or	local11, local06
	shr	local13, #1
LR__0561
	mov	arg01, local13
	mov	arg02, local11
	mov	arg03, local12
	mov	arg04, local03
	call	#__system__pack_0789
	jmp	#LR__0575
LR__0562
	cmp	local04, #0 wz
 if_ne	mov	result1, local01
 if_ne	jmp	#LR__0575
	cmps	local10, #255 wcz
 if_ae	jmp	#LR__0563
	cmp	local10, #0 wz
 if_ne	jmp	#LR__0564
	cmp	local08, #0 wz
 if_ne	jmp	#LR__0564
	mov	result1, ##2146435072
	jmp	#LR__0575
LR__0563
	cmp	local08, #0 wz
 if_ne	mov	result1, local02
 if_ne	jmp	#LR__0575
LR__0564
	or	local03, #2
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, local05
	mov	arg04, local03
	call	#__system__pack_0789
	jmp	#LR__0575
LR__0565
	cmp	local05, #0 wz
 if_ne	jmp	#LR__0566
	cmp	local04, #0 wz
 if_e	mov	result1, ##2146435072
 if_e	jmp	#LR__0575
LR__0566
	cmp	local08, #0 wz
 if_ne	mov	result1, local02
 if_ne	jmp	#LR__0575
	mov	arg03, local10
	mov	arg04, local03
	or	arg04, #2
	mov	arg01, #0
	mov	arg02, #0
	call	#__system__pack_0789
	jmp	#LR__0575
LR__0567
	cmp	local04, #0 wz
 if_e	jmp	#LR__0570
	shl	local04, #1
	loc	pa,	#(@LR__0569-@LR__0568)
	call	#FCACHE_LOAD_
LR__0568
	cmp	local04, ##8388608 wcz
 if_b	sub	local05, #1
 if_b	shl	local04, #1
 if_b	jmp	#LR__0568
LR__0569
	jmp	#LR__0559
LR__0570
	or	local03, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	mov	arg04, local03
	call	#__system__pack_0789
	jmp	#LR__0575
LR__0571
	cmp	local08, #0 wz
 if_e	jmp	#LR__0574
	shl	local08, #1
	loc	pa,	#(@LR__0573-@LR__0572)
	call	#FCACHE_LOAD_
LR__0572
	cmp	local08, ##8388608 wcz
 if_b	sub	local10, #1
 if_b	shl	local08, #1
 if_b	jmp	#LR__0572
LR__0573
	jmp	#LR__0560
LR__0574
	mov	arg04, local03
	or	arg04, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0789
LR__0575
	mov	ptra, fp
	call	#popregs_
__system___float_mul_ret
	ret

__system___float_div
	mov	COUNT_, #15
	call	#pushregs_
	mov	local03, arg01
	mov	local04, arg02
	mov	local05, local03
	mov	local06, local05
	zerox	local06, #22
	mov	local07, local05
	shl	local07, #1
	shr	local07, #24
	shr	local05, #31
	mov	result1, local04
	mov	local08, result1
	mov	local09, local08
	zerox	local09, #22
	mov	local10, local08
	shl	local10, #1
	shr	local10, #24
	shr	local08, #31
	xor	local05, local08
	cmp	local07, #255 wz
 if_e	jmp	#LR__0581
	cmp	local10, #255 wz
 if_e	jmp	#LR__0582
	cmp	local07, #0 wz
 if_e	jmp	#LR__0583
	bith	local06, #23
LR__0576
	cmp	local10, #0 wz
 if_e	jmp	#LR__0588
	bith	local09, #23
LR__0577
	sub	local07, local10
	mov	local11, local07
	mov	arg01, local06
	shr	arg01, #2
	shl	local06, #30
	mov	arg02, local06
	mov	arg03, local09
	setq	arg01
	qdiv	arg02, arg03
	getqx	result1
	getqy	result2
	mov	local01, result1
	mov	local02, result2
	mov	local12, local01
	mov	local13, local02 wz
	mov	local14, local12
	shl	local14, #25
	mov	local15, #0
 if_ne	mov	local15, #1
	or	local14, local15
	shr	local12, #7
	cmp	local12, ##16777216 wcz
 if_b	jmp	#LR__0578
	add	local11, #1
	shr	local14, #1
	mov	local15, local12
	shl	local15, #31
	or	local14, local15
	shr	local12, #1
	jmp	#LR__0580
LR__0578
	cmp	local12, ##8388608 wcz
 if_ae	jmp	#LR__0579
	sub	local11, #1
	shl	local12, #1
	mov	local15, local14
	shr	local15, #31
	or	local12, local15
	shl	local14, #1
LR__0579
LR__0580
	mov	arg01, local12
	mov	arg02, local14
	mov	arg03, local11
	mov	arg04, local05
	call	#__system__pack_0789
	jmp	#LR__0592
LR__0581
	cmp	local06, #0 wz
 if_ne	mov	result1, local03
 if_ne	jmp	#LR__0592
	cmp	local10, #255 wz
 if_e	mov	result1, ##2146435072
 if_e	jmp	#LR__0592
	or	local05, #2
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, local07
	mov	arg04, local05
	call	#__system__pack_0789
	jmp	#LR__0592
LR__0582
	cmp	local09, #0 wz
 if_ne	mov	result1, local04
 if_ne	jmp	#LR__0592
	mov	arg04, local05
	or	arg04, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0789
	jmp	#LR__0592
LR__0583
	cmp	local06, #0 wz
 if_e	jmp	#LR__0586
	shl	local06, #1
	loc	pa,	#(@LR__0585-@LR__0584)
	call	#FCACHE_LOAD_
LR__0584
	cmp	local06, ##8388608 wcz
 if_b	sub	local07, #1
 if_b	shl	local06, #1
 if_b	jmp	#LR__0584
LR__0585
	jmp	#LR__0576
LR__0586
	cmp	local10, #0 wz
 if_ne	jmp	#LR__0587
	cmp	local09, #0 wz
 if_e	mov	result1, ##2146435072
 if_e	jmp	#LR__0592
LR__0587
	mov	arg04, local05
	or	arg04, #8
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0789
	jmp	#LR__0592
LR__0588
	cmp	local09, #0 wz
 if_e	jmp	#LR__0591
	shl	local09, #1
	loc	pa,	#(@LR__0590-@LR__0589)
	call	#FCACHE_LOAD_
LR__0589
	cmp	local09, ##8388608 wcz
 if_b	sub	local10, #1
 if_b	shl	local09, #1
 if_b	jmp	#LR__0589
LR__0590
	jmp	#LR__0577
LR__0591
	mov	arg04, local05
	or	arg04, #2
	mov	arg01, #0
	mov	arg02, #0
	mov	arg03, #0
	call	#__system__pack_0789
LR__0592
	mov	ptra, fp
	call	#popregs_
__system___float_div_ret
	ret

__system___float_cmp
	mov	_var01, arg01
	cmps	_var01, ##2139095040 wcz
 if_a	jmp	#LR__0593
	cmps	arg02, ##2139095040 wcz
 if_be	jmp	#LR__0594
LR__0593
	mov	result1, arg03
	jmp	#__system___float_cmp_ret
LR__0594
	cmp	_var01, ##-8388608 wcz
 if_a	jmp	#LR__0595
	cmp	_var01, ##-8388608 wcz
 if_be	jmp	#LR__0596
LR__0595
	mov	result1, arg03
	jmp	#__system___float_cmp_ret
LR__0596
	cmps	_var01, #0 wcz
 if_ae	jmp	#LR__0598
	cmps	arg02, #0 wcz
 if_b	mov	result1, arg02
 if_b	sub	result1, _var01
 if_b	jmp	#__system___float_cmp_ret
	cmp	arg02, #0 wz
 if_ne	jmp	#LR__0597
	cmp	_var01, ##-2147483648 wz
 if_e	mov	result1, #0
 if_e	jmp	#__system___float_cmp_ret
LR__0597
	neg	result1, #1
	jmp	#__system___float_cmp_ret
LR__0598
	cmps	arg02, #0 wcz
 if_ae	jmp	#LR__0600
	cmp	_var01, #0 wz
 if_ne	jmp	#LR__0599
	cmp	arg02, ##-2147483648 wz
 if_e	mov	result1, #0
 if_e	jmp	#__system___float_cmp_ret
LR__0599
	mov	result1, #1
	jmp	#__system___float_cmp_ret
LR__0600
	sub	_var01, arg02
	mov	result1, _var01
__system___float_cmp_ret
	ret

__system___float_Unpack
	mov	_var01, arg01
	shr	_var01, #31
	mov	_var02, arg01
	shl	_var02, #1
	shr	_var02, #24 wz
	and	arg01, ##8388607
 if_ne	shl	arg01, #6
 if_ne	bith	arg01, #29
 if_ne	jmp	#LR__0601
	mov	_var03, arg01
	encod	_var03, _var03 wc
 if_b	add	_var03, #1
	sub	_var03, #23
	mov	_var02, _var03
	mov	_var04, #7
	sub	_var04, _var03
	shl	arg01, _var04
LR__0601
	sub	_var02, #127
	mov	result3, arg01
	mov	result1, _var01
	mov	result2, _var02
__system___float_Unpack_ret
	ret

__system___float_Pack
	mov	_var01, #0
	cmp	arg03, #0 wz
 if_e	jmp	#LR__0603
	mov	_var02, arg03
	encod	_var02, _var02 wc
 if_b	add	_var02, #1
	mov	_var01, #33
	sub	_var01, _var02
	shl	arg03, _var01
	mov	_var02, #3
	sub	_var02, _var01
	add	arg02, _var02
	mov	_var03, arg02
	add	arg03, #256
	mov	_var04, arg03
	andn	_var04, #255 wz
 if_e	add	_var03, #1
	add	_var03, #127
	fges	_var03, ##-23
	fles	_var03, #255
	cmps	_var03, #1 wcz
 if_ae	jmp	#LR__0602
	shr	arg03, #1
	decod	_var04, #31
	add	_var04, arg03
	neg	_var03, _var03
	shr	_var04, _var03
	mov	arg03, _var04
	mov	_var03, #0
LR__0602
	mov	result1, arg01
	shl	result1, #31
	mov	_var02, _var03
	shl	_var02, #23
	or	result1, _var02
	mov	_var05, arg03
	shr	_var05, #9
	or	result1, _var05
	jmp	#__system___float_Pack_ret
LR__0603
	mov	result1, _var01
__system___float_Pack_ret
	ret

__system____builtin_ilogb
	mov	COUNT_, #2
	call	#pushregs_
	call	#__system___float_Unpack
	mov	local01, result2
	mov	local02, result3 wz
 if_e	mov	result1, ##-2147483647
 if_e	jmp	#LR__0605
	cmp	local01, #128 wz
 if_ne	jmp	#LR__0604
	cmp	local02, ##536870912 wz
 if_e	bmask	result1, #30
 if_e	jmp	#LR__0605
	decod	result1, #31
	jmp	#LR__0605
LR__0604
	mov	result1, local01
LR__0605
	mov	ptra, fp
	call	#popregs_
__system____builtin_ilogb_ret
	ret

__system___float_pow_n
	mov	COUNT_, #5
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	cmps	local03, #0 wcz
 if_ae	jmp	#LR__0606
	mov	local04, #1
	neg	local03, local03
	cmps	local03, #0 wcz
 if_b	mov	result1, #0
 if_b	jmp	#LR__0614
	jmp	#LR__0607
LR__0606
	mov	local04, #0
LR__0607
	mov	local05, ##1065353216
LR__0608
	cmps	local03, #0 wcz
 if_be	jmp	#LR__0610
	test	local03, #1 wz
 if_e	jmp	#LR__0609
	mov	arg01, local05
	mov	arg02, local02
	call	#__system___float_mul
	mov	local05, result1
LR__0609
	sar	local03, #1
	mov	arg01, local02
	mov	arg02, local02
	call	#__system___float_mul
	mov	local02, result1
	jmp	#LR__0608
LR__0610
	cmp	local04, #0 wz
 if_e	jmp	#LR__0611
	mov	arg01, local01
	mov	arg02, local05
	call	#__system___float_div
	mov	local05, result1
	jmp	#LR__0613
LR__0611
	mov	arg01, local01
	mov	arg02, ##1065353216
	mov	arg03, #1
	call	#__system___float_cmp
	cmp	result1, #0 wz
 if_e	jmp	#LR__0612
	mov	arg01, local01
	mov	arg02, local05
	call	#__system___float_mul
	mov	local05, result1
LR__0612
LR__0613
	mov	result1, local05
LR__0614
	mov	ptra, fp
	call	#popregs_
__system___float_pow_n_ret
	ret

__system___gc_ptrs
	mov	COUNT_, #4
	call	#pushregs_
	mov	local01, __heap_ptr
	mov	local02, local01
	add	local02, ##15992
	rdlong	local03, local01 wz
 if_ne	jmp	#LR__0615
	mov	local04, local02
	sub	local04, local01
	wrword	#1, local01
	mov	local03, local01
	add	local03, #2
	wrword	##27792, local03
	mov	local03, local01
	add	local03, #4
	wrword	#0, local03
	mov	local03, local01
	add	local03, #6
	wrword	#1, local03
	add	local01, #16
	abs	local03, local04 wc
	shr	local03, #4
 if_b	neg	local03, local03
	wrword	local03, local01
	mov	local03, local01
	add	local03, #2
	wrword	##27791, local03
	mov	local03, local01
	add	local03, #4
	wrword	#0, local03
	mov	local03, local01
	add	local03, #6
	wrword	#0, local03
	sub	local01, #16
LR__0615
	mov	result2, local02
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
__system___gc_ptrs_ret
	ret

__system___gc_nextBlockPtr
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	rdword	local02, local01 wz
 if_ne	jmp	#LR__0616
	mov	arg01, ##@LR__0704
	call	#__system___gc_errmsg
	jmp	#LR__0617
LR__0616
	mov	result1, local01
	shl	local02, #4
	add	result1, local02
LR__0617
	mov	ptra, fp
	call	#popregs_
__system___gc_nextBlockPtr_ret
	ret

__system___gc_tryalloc
	mov	COUNT_, #14
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	call	#__system___gc_ptrs
	mov	local03, result1
	mov	local04, result2
	mov	local05, local03
	mov	local06, #0
	loc	pa,	#(@LR__0619-@LR__0618)
	call	#FCACHE_LOAD_
LR__0618
	mov	local07, local05
	mov	local08, local03
	mov	local09, local05
	add	local09, #6
	rdword	local10, local09
	mov	arg01, local08
	mov	arg02, local10 wz
 if_e	mov	result1, #0
 if_ne	shl	arg02, #4
 if_ne	add	arg01, arg02
 if_ne	mov	result1, arg01
	mov	local11, result1
	mov	local05, local11 wz
 if_ne	mov	local08, local05
 if_ne	rdword	local06, local08
	cmp	local05, #0 wz
 if_e	jmp	#LR__0620
	cmps	local05, local04 wcz
 if_ae	jmp	#LR__0620
	cmps	local01, local06 wcz
 if_a	jmp	#LR__0618
LR__0619
LR__0620
	cmp	local05, #0 wz
 if_e	mov	result1, local05
 if_e	jmp	#LR__0623
	mov	local08, local05
	add	local08, #6
	rdword	local12, local08
	cmps	local01, local06 wcz
 if_ae	jmp	#LR__0622
	wrword	local01, local05
	mov	arg01, local05
	mov	local09, local01
	shl	local09, #4
	add	arg01, local09
	mov	local08, local06
	sub	local08, local01
	wrword	local08, arg01
	mov	local08, arg01
	add	local08, #2
	wrword	##27791, local08
	mov	arg02, local05 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local11, arg01
	add	local11, #4
	wrword	result1, local11
	mov	local08, local05
	add	local08, #6
	mov	local09, arg01
	rdword	local10, local08
	add	local09, #6
	wrword	local10, local09
	mov	local13, arg01
	mov	arg02, local13 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local12, result1
	call	#__system___gc_nextBlockPtr
	mov	local14, result1 wz
 if_e	jmp	#LR__0621
	cmps	local14, local04 wcz
 if_ae	jmp	#LR__0621
	mov	local08, local03
	mov	local09, local13
	mov	arg01, local08
	mov	arg02, local09 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, arg01
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local10, result1
	mov	local11, local14
	add	local11, #4
	wrword	local10, local11
LR__0621
LR__0622
	add	local07, #6
	wrword	local12, local07
	mov	local08, ##27776
	or	local08, local02
	cogid	result1
	or	local08, result1
	mov	local10, local05
	add	local10, #2
	wrword	local08, local10
	mov	local08, local03
	add	local08, #8
	mov	local09, local05
	rdword	local10, local08
	add	local09, #6
	wrword	local10, local09
	mov	arg02, local05 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local03
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	add	local03, #8
	wrword	result1, local03
	add	local05, #8
	mov	result1, local05
	or	result1, ##1669332992
LR__0623
	mov	ptra, fp
	call	#popregs_
__system___gc_tryalloc_ret
	ret

__system___gc_errmsg
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
LR__0624
	rdbyte	local02, local01 wz
	add	local01, #1
 if_e	jmp	#LR__0625
	mov	arg01, local02
	call	#__system___tx
	jmp	#LR__0624
LR__0625
	mov	result1, #0
	mov	ptra, fp
	call	#popregs_
__system___gc_errmsg_ret
	ret

__system___gc_alloc_managed
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg01
	mov	arg02, #0
	call	#__system___gc_doalloc
	mov	local02, result1 wz
 if_ne	jmp	#LR__0626
	cmps	local01, #0 wcz
 if_be	jmp	#LR__0626
	mov	arg01, ##@LR__0705
	call	#__system___gc_errmsg
	jmp	#LR__0627
LR__0626
	mov	result1, local02
LR__0627
	mov	ptra, fp
	call	#popregs_
__system___gc_alloc_managed_ret
	ret

__system___gc_doalloc
	mov	COUNT_, #6
	call	#pushregs_
	mov	local01, arg01 wz
	mov	local02, arg02
 if_e	mov	result1, #0
 if_e	jmp	#LR__0635
	add	local01, #23
	andn	local01, #15
	shr	local01, #4
	add	ptr___system__dat__, #12
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #12
	call	#__system___lockmem
	mov	arg01, local01
	mov	arg02, local02
	call	#__system___gc_tryalloc
	mov	local03, result1 wz
 if_ne	jmp	#LR__0628
	call	#__system___gc_docollect
	mov	arg01, local01
	mov	arg02, local02
	call	#__system___gc_tryalloc
	mov	local03, result1
LR__0628
	add	ptr___system__dat__, #12
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #12
	wrbyte	#0, arg01
	cmp	local03, #0 wz
 if_e	jmp	#LR__0634
	shl	local01, #4
	sub	local01, #8
	abs	local04, local01 wc
	shr	local04, #2
 if_b	neg	local04, local04
	mov	local05, local04 wz
	mov	local06, local03
 if_e	jmp	#LR__0633
	loc	pa,	#(@LR__0631-@LR__0629)
	call	#FCACHE_LOAD_
LR__0629
	rep	@LR__0632, local05
LR__0630
	wrlong	#0, local06
	add	local06, #4
LR__0631
LR__0632
LR__0633
LR__0634
	mov	result1, local03
LR__0635
	mov	ptra, fp
	call	#popregs_
__system___gc_doalloc_ret
	ret

__system___gc_isvalidptr
	mov	_var01, arg03
	mov	_var02, _var01
	and	_var02, ##-1048576
	cmp	_var02, ##1669332992 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#__system___gc_isvalidptr_ret
	sub	_var01, #8
	andn	_var01, ##-1048576
	cmps	_var01, arg01 wcz
 if_b	jmp	#LR__0636
	cmps	_var01, arg02 wcz
 if_b	jmp	#LR__0637
LR__0636
	mov	result1, #0
	jmp	#__system___gc_isvalidptr_ret
LR__0637
	mov	_var02, _var01
	xor	_var02, arg01
	and	_var02, #15 wz
 if_ne	mov	result1, #0
 if_ne	jmp	#__system___gc_isvalidptr_ret
	mov	_var02, _var01
	add	_var02, #2
	rdword	_var02, _var02
	and	_var02, ##65472
	cmp	_var02, ##27776 wz
 if_ne	mov	result1, #0
 if_e	mov	result1, _var01
__system___gc_isvalidptr_ret
	ret

__system___gc_free
	mov	COUNT_, #1
	call	#pushregs_
	mov	local01, arg01
	call	#__system___gc_ptrs
	mov	arg01, result1
	mov	arg02, result2
	mov	arg03, local01
	call	#__system___gc_isvalidptr
	mov	local01, result1 wz
 if_e	jmp	#LR__0638
	add	ptr___system__dat__, #12
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #12
	call	#__system___lockmem
	mov	arg01, local01
	call	#__system___gc_dofree
	add	ptr___system__dat__, #12
	mov	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #12
	wrbyte	#0, arg01
LR__0638
	mov	ptra, fp
	call	#popregs_
__system___gc_free_ret
	ret

__system___gc_dofree
	mov	COUNT_, #13
	call	#pushregs_
	mov	local01, arg01
	call	#__system___gc_ptrs
	mov	local02, result1
	mov	local03, result2
	mov	local04, local01
	add	local04, #2
	wrword	##27791, local04
	mov	local05, local01
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local06, result1
	loc	pa,	#(@LR__0640-@LR__0639)
	call	#FCACHE_LOAD_
LR__0639
	add	local05, #4
	rdword	arg02, local05 wz
	mov	arg01, local02
 if_e	mov	result1, #0
 if_ne	shl	arg02, #4
 if_ne	add	arg01, arg02
 if_ne	mov	result1, arg01
	mov	local05, result1 wz
 if_e	jmp	#LR__0641
	mov	arg01, local05
	mov	local07, #0
	add	arg01, #2
	rdword	local08, arg01
	cmp	local08, ##27791 wz
 if_e	neg	local07, #1
	mov	result1, local07
	mov	local09, result1 wz
 if_e	jmp	#LR__0639
LR__0640
LR__0641
	cmp	local05, #0 wz
 if_e	mov	local05, local02
	mov	local04, local05
	add	local04, #6
	mov	local09, local01
	rdword	local10, local04
	add	local09, #6
	wrword	local10, local09
	mov	arg02, local01 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local02
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local10, result1
	mov	local11, local05
	add	local11, #6
	wrword	local10, local11
	cmp	local05, local02 wz
 if_e	jmp	#LR__0644
	mov	arg01, local05
	call	#__system___gc_nextBlockPtr
	cmp	result1, local01 wz
 if_ne	jmp	#LR__0643
	rdword	local04, local05
	rdword	local11, local01
	add	local04, local11
	wrword	local04, local05
	mov	local04, local01
	add	local04, #2
	wrword	#0, local04
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local06, result1
	cmps	local06, local03 wcz
 if_ae	jmp	#LR__0642
	mov	arg02, local05 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, local02
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local11, local06
	add	local11, #4
	wrword	result1, local11
LR__0642
	mov	local04, local01
	add	local04, #6
	mov	local09, local05
	rdword	local10, local04
	add	local09, #6
	wrword	local10, local09
	add	local01, #6
	wrword	#0, local01
	mov	local01, local05
LR__0643
LR__0644
	mov	arg01, local01
	call	#__system___gc_nextBlockPtr
	mov	local12, result1 wz
 if_e	jmp	#LR__0646
	cmps	local12, local03 wcz
 if_ae	jmp	#LR__0646
	mov	arg01, local12
	mov	local07, #0
	add	arg01, #2
	rdword	local08, arg01
	cmp	local08, ##27791 wz
 if_e	neg	local07, #1
	mov	result1, local07 wz
 if_e	jmp	#LR__0646
	mov	local05, local01
	rdword	local04, local05
	mov	local01, local12
	rdword	local11, local01
	add	local04, local11
	mov	local13, local05
	wrword	local04, local13
	mov	local04, local01
	add	local04, #6
	mov	local09, local05
	rdword	local10, local04
	add	local09, #6
	wrword	local10, local09
	mov	local04, local01
	add	local04, #2
	wrword	#170, local04
	mov	local04, local01
	add	local04, #6
	wrword	#0, local04
	mov	local04, local01
	mov	arg01, local04
	call	#__system___gc_nextBlockPtr
	mov	local09, result1
	mov	local06, local09 wz
 if_e	jmp	#LR__0645
	cmps	local06, local03 wcz
 if_ae	jmp	#LR__0645
	mov	local04, local02
	mov	local09, local05
	mov	arg01, local04
	mov	arg02, local09 wz
 if_e	mov	result1, #0
 if_ne	sub	arg02, arg01
 if_ne	shr	arg02, #4
 if_ne	mov	result1, arg02
	mov	local10, result1
	mov	local11, local06
	add	local11, #4
	wrword	local10, local11
LR__0645
LR__0646
	mov	result1, local06
	mov	ptra, fp
	call	#popregs_
__system___gc_dofree_ret
	ret

__system___gc_docollect
	mov	COUNT_, #9
	call	#pushregs_
	call	#__system___gc_ptrs
	mov	local01, result2
	mov	local02, result1
	mov	arg01, local02
	call	#__system___gc_nextBlockPtr
	mov	local03, result1 wz
	cogid	result1
	mov	local04, result1
 if_e	jmp	#LR__0648
LR__0647
	cmps	local03, local01 wcz
 if_ae	jmp	#LR__0648
	mov	local05, local03
	add	local05, #2
	rdword	local06, local05
	andn	local06, #32
	mov	local07, local03
	add	local07, #2
	wrword	local06, local07
	mov	arg01, local03
	call	#__system___gc_nextBlockPtr
	mov	local03, result1 wz
 if_ne	jmp	#LR__0647
LR__0648
	mov	local06, #0
	mov	arg01, #0
	call	#__system____topofstack
	mov	local07, result1
	mov	arg01, local06
	mov	arg02, local07
	call	#__system___gc_markhub
	call	#__system___gc_markcog
	mov	arg01, local02
	call	#__system___gc_nextBlockPtr
	mov	local08, result1 wz
 if_ne	jmp	#LR__0649
	mov	arg01, ##@LR__0706
	call	#__system___gc_errmsg
	jmp	#LR__0655
LR__0649
LR__0650
	mov	local03, local08
	mov	arg01, local03
	call	#__system___gc_nextBlockPtr
	mov	local08, result1
	mov	local06, local03
	add	local06, #2
	rdword	local09, local06
	test	local09, #32 wz
 if_ne	jmp	#LR__0653
	mov	local05, local09
	and	local05, #16 wz
 if_ne	jmp	#LR__0653
	mov	local06, local09
	and	local06, #15
	mov	local09, local06
	cmp	local09, local04 wz
 if_e	jmp	#LR__0651
	cmp	local09, #14 wz
 if_ne	jmp	#LR__0652
LR__0651
	mov	local06, local03
	mov	arg01, local06
	call	#__system___gc_dofree
	mov	local05, result1
	mov	local08, local05
LR__0652
LR__0653
	cmp	local08, #0 wz
 if_e	jmp	#LR__0654
	cmps	local08, local01 wcz
 if_b	jmp	#LR__0650
LR__0654
LR__0655
	mov	ptra, fp
	call	#popregs_
__system___gc_docollect_ret
	ret

__system___gc_markhub
	mov	COUNT_, #10
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	call	#__system___gc_ptrs
	mov	local03, result1
	mov	local04, result2
LR__0656
	cmps	local01, local02 wcz
 if_ae	jmp	#LR__0657
	rdlong	arg03, local01
	add	local01, #4
	mov	arg01, local03
	mov	arg02, local04
	call	#__system___gc_isvalidptr
	mov	local05, result1 wz
 if_e	jmp	#LR__0656
	mov	arg01, local05
	mov	local06, #0
	add	arg01, #2
	rdword	local07, arg01
	cmp	local07, ##27791 wz
 if_e	neg	local06, #1
	mov	result1, local06
	mov	local08, result1 wz
 if_ne	jmp	#LR__0656
	mov	local09, local05
	add	local09, #2
	rdword	local10, local09
	andn	local10, #15
	or	local10, #46
	mov	local09, local05
	add	local09, #2
	wrword	local10, local09
	jmp	#LR__0656
LR__0657
	mov	ptra, fp
	call	#popregs_
__system___gc_markhub_ret
	ret

__system___gc_markcog
	mov	COUNT_, #6
	call	#pushregs_
	call	#__system___gc_ptrs
	mov	local01, result1
	mov	local02, result2
	mov	local03, #0
LR__0658
	mov	local04, #496
	sub	local04, local03
	add	local04, #496
	'.live	local04
	alts	local04, #0
	mov	local05, local04
	mov	arg01, local01
	mov	arg02, local02
	mov	arg03, local05
	call	#__system___gc_isvalidptr
	mov	local05, result1 wz
 if_e	jmp	#LR__0659
	mov	local06, local05
	add	local06, #2
	rdword	local04, local06
	or	local04, #32
	add	local05, #2
	wrword	local04, local05
LR__0659
	add	local03, #1
	cmps	local03, #496 wcz
 if_b	jmp	#LR__0658
	mov	ptra, fp
	call	#popregs_
__system___gc_markcog_ret
	ret

__system____default_getc
__system____default_getc_ret
	ret

__system____default_putc
__system____default_putc_ret
	ret

__system____default_putc_terminal
__system____default_putc_terminal_ret
	ret

__system____default_flush
__system____default_flush_ret
	ret

__system____getftab
	cmp	arg01, #10 wcz
 if_ae	mov	result1, #0
 if_ae	jmp	#__system____getftab_ret
	qmul	arg01, #44
	getqx	result1
	add	ptr___system__dat__, ##568
	add	result1, ptr___system__dat__
	sub	ptr___system__dat__, ##568
__system____getftab_ret
	ret

__system___strrev
	rdbyte	_var01, arg01 wz
 if_e	jmp	#__system___strrev_ret
	mov	_var02, arg01
	loc	pa,	#(@LR__0661-@LR__0660)
	call	#FCACHE_LOAD_
LR__0660
	rdbyte	_var01, _var02 wz
 if_ne	add	_var02, #1
 if_ne	jmp	#LR__0660
LR__0661
	sub	_var02, #1
LR__0662
	cmps	_var02, arg01 wcz
 if_be	jmp	#LR__0663
	rdbyte	_var03, arg01
	rdbyte	_var04, _var02
	wrbyte	_var04, arg01
	wrbyte	_var03, _var02
	add	arg01, #1
	sub	_var02, #1
	jmp	#LR__0662
LR__0663
__system___strrev_ret
	ret

__system___fmtpad
	mov	COUNT_, #12
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg04
	getbyte	local04, local02, #1
	shr	local02, #22
	and	local02, #3 wz
	mov	local05, #0
 if_e	mov	local02, #1
	test	local02, local03 wz
 if_e	mov	result1, #0
 if_e	jmp	#LR__0667
	sub	local04, arg03
	mov	local06, local04
	cmps	local06, #0 wcz
 if_be	mov	result1, #0
 if_be	jmp	#LR__0667
	cmp	local02, #3 wz
 if_ne	jmp	#LR__0664
	cmp	local03, #1 wz
	wrz	local07
	add	local06, local07
	abs	local06, local06 wc
	shr	local06, #1
 if_b	neg	local06, local06
LR__0664
	mov	local08, #0
LR__0665
	cmps	local08, local06 wcz
 if_ae	jmp	#LR__0666
	mov	local09, local01
	rdlong	local07, local09
	add	local09, #4
	rdlong	local10, local09
	mov	arg01, #32
	mov	local11, objptr
	mov	objptr, local07
	call	local10
	mov	objptr, local11
	mov	local12, result1
	cmps	local12, #0 wcz
 if_b	mov	result1, local12
 if_b	jmp	#LR__0667
	add	local05, local12
	add	local08, #1
	jmp	#LR__0665
LR__0666
	mov	result1, local05
LR__0667
	mov	ptra, fp
	call	#popregs_
__system___fmtpad_ret
	ret

__system___uitoa
	mov	COUNT_, #9
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, arg05 wz
	mov	local06, local01
	mov	local07, #0
 if_ne	mov	local08, #55
 if_e	mov	local08, #87
LR__0668
	mov	muldiva_, local02
	mov	muldivb_, local03
	call	#unsdivide_
	mov	local09, muldiva_
	cmp	local09, #10 wcz
 if_b	add	local09, #48
 if_ae	add	local09, local08
	wrbyte	local09, local06
	mov	muldiva_, local02
	mov	muldivb_, local03
	add	local06, #1
	call	#unsdivide_
	mov	local02, muldivb_ wz
	add	local07, #1
 if_ne	jmp	#LR__0668
	cmp	local07, local04 wcz
 if_b	jmp	#LR__0668
	wrbyte	#0, local06
	mov	arg01, local01
	call	#__system___strrev
	mov	result1, local07
	mov	ptra, fp
	call	#popregs_
__system___uitoa_ret
	ret

__system__disassemble_0355
	mov	COUNT_, #22
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	mov	local05, arg05
	mov	arg01, local05
	call	#__system___float_fromint
	mov	local06, result1
	mov	local07, #0
	mov	local08, #1
	mov	arg01, local01
	mov	arg02, #0
	mov	arg03, #1
	call	#__system___float_cmp
	mov	local09, result1 wz
 if_e	wrlong	#0, local02
 if_e	wrlong	#0, local03
 if_e	jmp	#LR__0681
	mov	arg01, local01
	call	#__system____builtin_ilogb
	mov	local10, result1
	cmp	local05, #10 wz
 if_ne	jmp	#LR__0669
	mov	muldiva_, local10
	shl	muldiva_, #1
	add	muldiva_, local10
	mov	muldivb_, #10
	call	#divide_
	mov	local10, muldivb_
	mov	local11, #9
	jmp	#LR__0670
LR__0669
	mov	local11, #24
LR__0670
LR__0671
	cmps	local07, #8 wcz
	add	local07, #1
 if_ae	jmp	#LR__0672
	mov	arg01, ##1065353216
	mov	arg02, local06
	mov	arg03, local10
	call	#__system___float_pow_n
	mov	local12, result1
	mov	arg01, local01
	mov	arg02, local12
	call	#__system___float_div
	mov	local13, result1
	mov	arg01, local13
	mov	local08, #1
	mov	arg02, ##1065353216
	mov	arg03, #1
	call	#__system___float_cmp
	mov	local09, result1
	cmps	local09, #0 wcz
 if_b	sub	local10, #1
 if_b	jmp	#LR__0671
	mov	arg01, local13
	mov	arg02, local06
	neg	local08, #1
	neg	arg03, #1
	call	#__system___float_cmp
	mov	local09, result1
	cmps	local09, #0 wcz
 if_ae	add	local10, #1
 if_ae	jmp	#LR__0671
LR__0672
	mov	arg01, local13
	call	#__system____builtin_ilogb
	mov	local14, result1
	mov	local15, local13
	mov	local16, local15
	and	local16, ##8388607
	bith	local16, #23
	shl	local16, local14
	cmp	local05, #2 wz
 if_e	shl	local04, #2
	mov	local17, #0
	cmps	local04, #0 wcz
 if_ae	jmp	#LR__0673
	mov	local18, local10
	sub	local18, local04
	mov	local04, local18
	cmps	local04, #0 wcz
 if_b	jmp	#LR__0680
	jmp	#LR__0674
LR__0673
	add	local04, #1
LR__0674
	fles	local04, local11 wcz
	mov	local19, #1
	loc	pa,	#(@LR__0676-@LR__0675)
	call	#FCACHE_LOAD_
LR__0675
	cmp	local17, ##8388608 wcz
 if_ae	jmp	#LR__0677
	cmps	local04, #0 wcz
	sub	local04, #1
 if_be	jmp	#LR__0677
	mov	local20, local16
	shr	local20, #23
	and	local16, ##8388607
	qmul	local17, local05
	getqx	local17
	qmul	local19, local05
	getqx	local19
	qmul	local16, local05
	getqx	local16
	add	local17, local20
	jmp	#LR__0675
LR__0676
LR__0677
	mov	local18, local05
	shl	local18, #23
	abs	local21, local18 wc
	shr	local21, #1
 if_b	neg	local21, local21
	cmp	local16, local21 wcz
 if_a	jmp	#LR__0678
	mov	local08, local05
	shl	local08, #23
	abs	local09, local08 wc
	shr	local09, #1
 if_b	neg	local09, local09
	cmp	local16, local09 wz
 if_ne	jmp	#LR__0679
	mov	local22, local17
	and	local22, #1 wz
 if_e	jmp	#LR__0679
LR__0678
	mov	local18, local17
	mov	local21, local17
	add	local21, #1
	mov	local17, local21
	cmp	local17, local19 wz
 if_e	mov	local18, local10
 if_e	add	local18, #1
 if_e	mov	local10, local18
LR__0679
LR__0680
	wrlong	local17, local02
	wrlong	local10, local03
LR__0681
	mov	ptra, fp
	call	#popregs_
__system__disassemble_0355_ret
	ret

__system__emitsign_0357
	mov	_var01, #0
	cmp	arg02, #0 wz
 if_ne	wrbyte	arg02, arg01
 if_ne	mov	_var01, #1
 if_ne	add	arg01, #1
	cmp	arg03, #0 wz
 if_e	jmp	#LR__0682
	wrbyte	#48, arg01
	add	arg01, #1
	wrbyte	arg03, arg01
	add	_var01, #2
LR__0682
	mov	result1, _var01
__system__emitsign_0357_ret
	ret

__system___gettxfunc
	mov	COUNT_, #3
	call	#pushregs_
	call	#__system____getftab
	mov	local01, result1 wz
 if_e	jmp	#LR__0683
	add	local01, #8
	rdlong	local02, local01
	sub	local01, #8
	mov	local03, local02 wz
 if_ne	jmp	#LR__0684
LR__0683
	mov	result1, #0
	jmp	#LR__0685
LR__0684
	mov	arg01, local01
	mov	arg02, ptr____struct_s_vfs_file_t_putchar_
	call	#__system___make_methodptr
LR__0685
	mov	ptra, fp
	call	#popregs_
__system___gettxfunc_ret
	ret

__system___rxtxioctl_0725
	mov	COUNT_, #2
	call	#pushregs_
	mov	local01, arg02
	mov	local02, arg03
	cmp	local01, #256 wz
 if_e	jmp	#LR__0686
	cmp	local01, #257 wz
 if_e	jmp	#LR__0687
	jmp	#LR__0688
LR__0686
	add	ptr___system__dat__, #8
	rdlong	result1, ptr___system__dat__
	sub	ptr___system__dat__, #8
	wrlong	result1, local02
	mov	result1, #0
	jmp	#LR__0689
LR__0687
	rdlong	arg01, local02
	add	ptr___system__dat__, #8
	wrlong	arg01, ptr___system__dat__
	sub	ptr___system__dat__, #8
	mov	result1, #0
	jmp	#LR__0689
LR__0688
	add	ptr___system__dat__, ##564
	wrlong	#10, ptr___system__dat__
	sub	ptr___system__dat__, ##564
	neg	result1, #1
LR__0689
	mov	ptra, fp
	call	#popregs_
__system___rxtxioctl_0725_ret
	ret

__system____dummy_flush_0726
	mov	result1, #0
__system____dummy_flush_0726_ret
	ret

__system__pack_0789
	mov	COUNT_, #8
	call	#pushregs_
	mov	local01, arg01
	mov	local02, arg02
	mov	local03, arg03
	mov	local04, arg04
	add	local03, #127
	test	local04, #4 wz
 if_e	jmp	#LR__0690
	cmp	local01, #0 wz
 if_e	decod	local01, #22
	bith	local01, #247
	jmp	#LR__0699
LR__0690
	test	local04, #2 wz
 if_ne	mov	local01, ##2139095040
 if_ne	mov	local02, #0
 if_ne	jmp	#LR__0698
	mov	local05, local04
	test	local05, #8 wz
 if_ne	mov	local01, #0
 if_ne	jmp	#LR__0697
	cmps	local03, #255 wcz
 if_ae	mov	local01, ##2139095040
 if_ae	mov	local02, #0
 if_ae	jmp	#LR__0696
	cmps	local03, #0 wcz
 if_a	jmp	#LR__0694
	shr	local02, #1
	mov	local06, local01
	and	local06, #1
	shl	local06, #31
	or	local02, local06
	shr	local01, #1
	loc	pa,	#(@LR__0692-@LR__0691)
	call	#FCACHE_LOAD_
LR__0691
	cmps	local03, #0 wcz
 if_ae	jmp	#LR__0693
	cmp	local01, #0 wz
 if_e	jmp	#LR__0693
	mov	local07, local02
	and	local07, #1
	add	local03, #1
	shr	local02, #1
	mov	local06, local01
	and	local06, #1
	shl	local06, #31
	or	local02, local06
	or	local02, local07
	shr	local01, #1
	jmp	#LR__0691
LR__0692
LR__0693
	cmps	local03, #0 wcz
 if_ae	jmp	#LR__0695
	cmp	local02, #0 wz
	wrnz	local02
	jmp	#LR__0695
LR__0694
	andn	local01, ##-8388608
	shl	local03, #23
	or	local01, local03
LR__0695
LR__0696
LR__0697
LR__0698
LR__0699
	test	local01, #1 wz
 if_ne	or	local02, #1
	mov	local08, local02
	mov	local06, #0
	add	local02, ##2147483647
	cmp	local02, local08 wcz
 if_b	mov	local06, #1
	add	local01, local06
	test	local04, #1 wz
 if_ne	bith	local01, #31
	mov	result1, local01
	mov	ptra, fp
	call	#popregs_
__system__pack_0789_ret
	ret

___struct_s_vfs_file_t_putchar
	mov	COUNT_, #4
	call	#pushregs_
	add	objptr, #20
	rdlong	local01, objptr wz
	sub	objptr, #20
 if_e	mov	result1, #0
 if_e	jmp	#LR__0700
	add	objptr, #20
	rdlong	local01, objptr
	sub	objptr, #20
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	mov	arg02, objptr
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	cmps	result1, #0 wcz
 if_b	mov	local01, #0
 if_ae	mov	local01, #1
	mov	result1, local01
LR__0700
	mov	ptra, fp
	call	#popregs_
___struct_s_vfs_file_t_putchar_ret
	ret

___struct_s_vfs_file_t_getchar
	mov	COUNT_, #4
	call	#pushregs_
	add	objptr, #24
	rdlong	local01, objptr wz
	sub	objptr, #24
 if_e	neg	result1, #1
 if_e	jmp	#LR__0701
	add	objptr, #24
	rdlong	local01, objptr
	sub	objptr, #24
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	mov	arg01, objptr
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
LR__0701
	mov	ptra, fp
	call	#popregs_
___struct_s_vfs_file_t_getchar_ret
	ret

___struct__bas_wrap_sender_tx
	mov	COUNT_, #4
	call	#pushregs_
	rdlong	local01, objptr
	rdlong	local02, local01
	add	local01, #4
	rdlong	local03, local01
	mov	local04, objptr
	mov	objptr, local02
	call	local03
	mov	objptr, local04
	mov	result1, #1
	mov	ptra, fp
	call	#popregs_
___struct__bas_wrap_sender_tx_ret
	ret

LR__0702
	byte	"inf"
	byte	0
LR__0703
	byte	"nan"
	byte	0
LR__0704
	byte	" !!! corrupted heap??? !!! "
	byte	0
LR__0705
	byte	" !!! out of heap memory !!! "
	byte	0
LR__0706
	byte	" !!! corrupted heap !!! "
	byte	0
LR__0707
	byte	"Power Cycling EVE"
	byte	0
LR__0708
	byte	"SPI Started"
	byte	0
LR__0709
	byte	"EVE powercycle complete."
	byte	0
LR__0710
	byte	"Waking up EVE."
	byte	0
LR__0711
	byte	"Eve now ACTIVE"
	byte	0
LR__0712
	byte	"Chip ID = 0x"
	byte	0
LR__0713
	byte	"Eve Needed Whacking"
	byte	0
LR__0714
	byte	"Eve Needed Whacking"
	byte	0
LR__0715
	byte	"First screen written"
	byte	0
LR__0716
	byte	"Clock freq = "
	byte	0
LR__0717
	byte	"Good ID: 0x"
	byte	0
LR__0718
	byte	"need "
	byte	0
LR__0719
	byte	", got "
	byte	0
LR__0720
	byte	"W4CPFE: "
	byte	0
LR__0721
	byte	"%c"
	byte	0
LR__0722
	byte	"Eve stuck - W:"
	byte	0
LR__0723
	byte	" R:"
	byte	0
LR__0724
	byte	"ftinit.."
	byte	0
LR__0725
	byte	"/files"
	byte	0
LR__0726
	byte	"/files"
	byte	0
LR__0727
	byte	"Tap on the dots to calibrate."
	byte	0
LR__0728
	byte	"resist.cal"
	byte	0
LR__0729
	byte	"wb"
	byte	0
LR__0730
	byte	" not open"
	byte	0
LR__0731
	byte	"Cals written to file "
	byte	0
LR__0732
	byte	"GAME OVER"
	byte	0
LR__0733
	byte	"PRESS TO PLAY"
	byte	0
LR__0734
	byte	"/"
	byte	0
LR__0735
	byte	"???"
	byte	0
LR__0736
	byte	"9P2000"
	byte	0
LR__0737
	byte	"9P2000"
	byte	0
LR__0738
	byte	"user"
	byte	0
LR__0739
	byte	0
	byte	0
	alignl
_dat_
	byte	$00[1084]
	byte	$e0, $01, $00, $00, $10, $01, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00[32]
	byte	$77, $77, $77, $77, $00, $ff, $ff, $ff, $60, $00, $00, $02, $07, $00, $00, $26
	byte	$0c, $ff, $ff, $ff, $f0, $00, $5a, $00, $1f, $00, $00, $06, $43, $6f, $70, $72
	byte	$6f, $63, $65, $73, $73, $6f, $72, $20, $65, $78, $63, $65, $70, $74, $69, $6f
	byte	$6e, $00, $00, $00, $00, $ff, $ff, $ff, $60, $00, $00, $02, $07, $00, $00, $26
	byte	$0c, $ff, $ff, $ff, $f0, $00, $88, $00, $1c, $00, $00, $16, $43, $6f, $70, $72
	byte	$6f, $63, $65, $73, $73, $6f, $72, $20, $65, $78, $63, $65, $70, $74, $69, $6f
	byte	$6e, $3a, $0a, $0a, $25, $73, $00, $00, $00, $00, $00, $00, $00, $ff, $ff, $ff
	byte	$60, $00, $00, $02, $07, $00, $00, $26, $0c, $ff, $ff, $ff, $f0, $00, $5a, $00
	byte	$1d, $00, $00, $06, $43, $61, $6e, $6e, $6f, $74, $20, $6f, $70, $65, $6e, $20
	byte	$66, $69, $6c, $65, $3a, $00, $00, $00, $00, $00, $00, $00, $92, $01, $24, $03
	byte	$b6, $04, $48, $06, $da, $07, $6c, $09, $fd, $0a, $8f, $0c, $21, $0e, $b2, $0f
	byte	$43, $11, $d5, $12, $65, $14, $f6, $15, $87, $17, $17, $19, $a7, $1a, $37, $1c
	byte	$c6, $1d, $56, $1f, $e5, $20, $73, $22, $02, $24, $8f, $25, $1d, $27, $aa, $28
	byte	$37, $2a, $c3, $2b, $4f, $2d, $db, $2e, $66, $30, $f1, $31, $7b, $33, $05, $35
	byte	$8e, $36, $16, $38, $9e, $39, $26, $3b, $ad, $3c, $33, $3e, $b9, $3f, $3e, $41
	byte	$c3, $42, $47, $44, $ca, $45, $4c, $47, $ce, $48, $4f, $4a, $d0, $4b, $4f, $4d
	byte	$ce, $4e, $4d, $50, $ca, $51, $47, $53, $c3, $54, $3e, $56, $b8, $57, $31, $59
	byte	$aa, $5a, $21, $5c, $98, $5d, $0e, $5f, $83, $60, $f7, $61, $6a, $63, $dc, $64
	byte	$4d, $66, $bd, $67, $2c, $69, $9a, $6a, $07, $6c, $73, $6d, $de, $6e, $48, $70
	byte	$b1, $71, $19, $73, $7f, $74, $e5, $75, $49, $77, $ac, $78, $0f, $7a, $6f, $7b
	byte	$cf, $7c, $2e, $7e, $8b, $7f, $e7, $80, $42, $82, $9b, $83, $f3, $84, $4a, $86
	byte	$a0, $87, $f5, $88, $48, $8a, $99, $8b, $ea, $8c, $39, $8e, $86, $8f, $d3, $90
	byte	$1e, $92, $67, $93, $af, $94, $f6, $95, $3b, $97, $7f, $98, $c1, $99, $02, $9b
	byte	$41, $9c, $7f, $9d, $bb, $9e, $f6, $9f, $2f, $a1, $66, $a2, $9d, $a3, $d1, $a4
	byte	$04, $a6, $35, $a7, $65, $a8, $93, $a9, $bf, $aa, $ea, $ab, $13, $ad, $3b, $ae
	byte	$60, $af, $85, $b0, $a7, $b1, $c8, $b2, $e7, $b3, $04, $b5, $1f, $b6, $39, $b7
	byte	$51, $b8, $67, $b9, $7b, $ba, $8e, $bb, $9f, $bc, $ae, $bd, $bb, $be, $c6, $bf
	byte	$d0, $c0, $d7, $c1, $dd, $c2, $e1, $c3, $e3, $c4, $e3, $c5, $e1, $c6, $dd, $c7
	byte	$d7, $c8, $d0, $c9, $c6, $ca, $bb, $cb, $ad, $cc, $9e, $cd, $8c, $ce, $79, $cf
	byte	$63, $d0, $4c, $d1, $32, $d2, $17, $d3, $f9, $d3, $da, $d4, $b8, $d5, $95, $d6
	byte	$6f, $d7, $47, $d8, $1d, $d9, $f1, $d9, $c3, $da, $93, $db, $60, $dc, $2c, $dd
	byte	$f5, $dd, $bd, $de, $82, $df, $45, $e0, $06, $e1, $c4, $e1, $81, $e2, $3b, $e3
	byte	$f3, $e3, $a9, $e4, $5d, $e5, $0e, $e6, $bd, $e6, $6a, $e7, $15, $e8, $be, $e8
	byte	$64, $e9, $08, $ea, $aa, $ea, $4a, $eb, $e7, $eb, $82, $ec, $1b, $ed, $b1, $ed
	byte	$45, $ee, $d7, $ee, $67, $ef, $f4, $ef, $7f, $f0, $08, $f1, $8e, $f1, $12, $f2
	byte	$94, $f2, $13, $f3, $90, $f3, $0a, $f4, $83, $f4, $f9, $f4, $6c, $f5, $dd, $f5
	byte	$4c, $f6, $b9, $f6, $23, $f7, $8a, $f7, $f0, $f7, $52, $f8, $b3, $f8, $11, $f9
	byte	$6d, $f9, $c6, $f9, $1d, $fa, $72, $fa, $c4, $fa, $13, $fb, $61, $fb, $ab, $fb
	byte	$f4, $fb, $3a, $fc, $7d, $fc, $be, $fc, $fd, $fc, $39, $fd, $73, $fd, $aa, $fd
	byte	$df, $fd, $12, $fe, $42, $fe, $6f, $fe, $9a, $fe, $c3, $fe, $e9, $fe, $0d, $ff
	byte	$2e, $ff, $4d, $ff, $69, $ff, $83, $ff, $9b, $ff, $b0, $ff, $c2, $ff, $d2, $ff
	byte	$e0, $ff, $eb, $ff, $f3, $ff, $fa, $ff, $fd, $ff, $ff, $ff, $00, $00, $00, $00
	byte	$00, $05, $00, $00, $00, $01, $00, $c1, $01, $08, $00, $c1, $21, $07, $01, $00
	byte	$00, $05, $00, $e0, $00, $01, $10, $20, $00, $08, $10, $40, $00, $07, $02, $00
	byte	$00, $05, $00, $a8, $01, $01, $08, $10, $00, $08, $08, $10, $20, $07, $03, $00
	byte	$00, $05, $40, $a8, $01, $01, $30, $60, $00, $08, $30, $60, $18, $07, $04, $00
	byte	$00, $05, $40, $b1, $01, $01, $08, $10, $00, $08, $08, $02, $08, $07, $40, $b1
	byte	$01, $01, $2b, $ff, $ff, $ff, $04, $00, $00, $00, $40, $b5, $01, $00, $22, $ff
	byte	$ff, $ff, $00, $00, $00, $00, $78, $9c, $ed, $9d, $cf, $8f, $23, $47, $15, $c7
	byte	$db, $6b, $d8, $84, $64, $09, $10, $f1, $2b, $64, $e2, $0d, $09, $09, $84, $fc
	byte	$1a, $b2, $b0, $f2, $61, $99, $41, $e2, $0f, $40, $fc, $07, $56, $2c, $ed, $1e
	byte	$02, $24, $0a, $87, $20, $11, $d9, $42, $fe, $13, $96, $7f, $00, $71, $ca, $05
	byte	$89, $3f, $82, $6c, $46, $73, $83, $0d, $1c, $e6, $62, $b1, $97, $b9, $44, $2b
	byte	$ee, $1e, $99, $ae, $ae, $7e, $5d, $ef, $55, $bd, $aa, $6e, $7b, $ed, $b1, $bb
	byte	$f7, $fb, $e9, $19, $77, $57, $bd, $57, $d5, $f5, $ea, $55, $55, $db, $e5, $72
	byte	$77, $af, $57, $cf, $d9, $99, $1f, $c8, $5f, $ce, $0a, $22, $ca, $e6, $c5, $57
	byte	$a8, $42, $e5, $41, $29, $ae, $d4, $62, $19, $6e, $9d, $b3, $88, $7d, $3d, $cf
	byte	$72, $29, $f7, $a5, $d6, $16, $77, $10, $e4, $b3, $13, $db, $aa, $a2, $c9, $c0
	byte	$9a, $f6, $05, $fb, $3d, $b2, $ef, $ac, $6c, $3f, $f5, $f6, $55, $ed, $4c, $a4
	byte	$73, $ed, $51, $64, $4a, $4d, $b9, $92, $ef, $80, $f5, $fa, $9f, $66, $3d, $d5
	byte	$8b, $9f, $8f, $ae, $7d, $59, $c4, $db, $67, $4c, $39, $d6, $3e, $c9, $81, $b2
	byte	$1d, $9c, $9d, $45, $da, $c2, $a5, $a0, $8d, $83, $89, $ee, $92, $1c, $3f, $cf
	byte	$e8, $40, $e6, $73, $a6, $e9, $03, $00, $00, $00, $00, $00, $00, $00, $00, $a0
	byte	$62, $58, $d0, $2b, $ff, $87, $de, $be, $92, $fb, $fb, $b6, $e8, $9b, $ff, $f3
	byte	$21, $c5, $9c, $9f, $cb, $bd, $92, $a2, $6d, $fa, $bd, $52, $a1, $88, $eb, $85
	byte	$7b, $9f, $d6, $ea, $eb, $95, $13, $d4, $49, $cb, $f4, $7b, $a1, $a2, $4b, $51
	byte	$48, $7a, $a5, $b2, $dd, $b7, $4f, $df, $28, $9e, $e7, $47, $3d, $fb, $42, $fb
	byte	$2a, $ab, $30, $59, $9b, $f4, $8b, $24, $e7, $e7, $bd, $7c, $a3, $97, $62, $5f
	byte	$d9, $ee, $35, $e9, $d6, $e9, $17, $72, $ed, $c2, $71, $2e, $6a, $48, $ec, $5b
	byte	$a7, $af, $28, $c8, $21, $99, $5f, $67, $da, $a5, $6f, $1b, $aa, $c2, $d0, $5d
	byte	$58, $58, $7d, $b5, $4e, $df, $e8, $9e, $6b, $f6, $f3, $0c, $19, $6d, $d4, $4f
	byte	$b5, $5f, $ed, $7a, $d3, $36, $fd, $64, $ff, $94, $d7, $9b, $56, $ea, $c7, $fa
	byte	$e7, $b9, $76, $e9, $6c, $a3, $be, $66, $bf, $ab, $26, $f1, $96, $ae, $65, $fa
	byte	$74, $7d, $0c, $ed, $67, $6f, $16, $f8, $78, $d5, $46, $fd, $f4, $f5, $d1, $bf
	byte	$9a, $b6, $4b, $3f, $d6, $3f, $ab, $37, $71, $43, $39, $66, $b5, $4e, $3f, $d2
	byte	$3f, $7b, $e5, $c7, $a7, $e0, $f3, $54, $bb, $f4, $cb, $37, $38, $0a, $d4, $06
	byte	$64, $73, $68, $9f, $fe, $b0, $be, $7f, $fa, $b4, $48, $df, $7e, $58, $d2, $ec
	byte	$77, $1f, $a9, $e4, $e7, $aa, $96, $e9, $9b, $9d, $8e, $f9, $14, $15, $7c, $ae
	byte	$6a, $9b, $3e, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00[30]
	byte	$b0, $0d, $b2, $59, $96, $cd, $cc, $bf, $dd, $65, $5d, $0b, $cf, $08, $77, $d4
	byte	$b1, $70, $bf, $7a, $61, $87, $dd, $09, $f7, $e7, $fd, $f2, $85, $1d, $76, $28
	byte	$bc, $eb, $fa, $dd, $7a, $d8, $32, $e7, $81, $6e, $85, $8b, $83, $b9, $75, $66
	byte	$07, $c3, $65, $83, $ad, $ec, $ed, $5a, $78, $d6, $a7, $9e, $d8, $d1, $70, $19
	byte	$27, $ba, $63, $77, $c2, $65, $e4, $9c, $8c, $ee, $58, $98, $3c, $99, $95, $a2
	byte	$ae, $85, $8b, $d6, $ca, $1b, $6c, $d7, $c2, $e4, $c7, $59, $67, $c3, $e2, $b8
	byte	$7b, $e1, $3e, $7d, $9c, $c8, $8a, $8f, $17, $1d, $0b, $03, $00, $00, $00, $00
	byte	$00[38]
	byte	$d8, $11, $7b, $76, $bf, $4e, $dc, $ff, $73, $d5, $70, $bf, $7a, $09, $ee, $8a
	byte	$d6, $85, $f0, $a6, $ef, $b7, $b9, $6f, $e1, $5d, $d7, $ef, $d6, $c3, $96, $3d
	byte	$ba, $5f, $e7, $a6, $c3, $c5, $c1, $fe, $dc, $af, $73, $d3, $e1, $7e, $cd, $fd
	byte	$33, $db, $1e, $9e, $f5, $a9, $27, $76, $34, $5c, $c6, $89, $ee, $d8, $9d, $70
	byte	$19, $b9, $2f, $f7, $eb, $dc, $74, $98, $3c, $b9, $2f, $f7, $eb, $dc, $74, $b8
	byte	$68, $ad, $bc, $c1, $76, $2d, $4c, $7e, $9c, $75, $36, $2c, $8e, $bb, $17, $ee
	byte	$ef, $d5, $fd, $3a, $37, $1d, $06, $ad, $e1, $c1, $83, $07, $bb, $2e, $c2, $56
	byte	$19, $3e, $18, $ee, $ba, $08, $db, $64, $68, $d8, $75, $21, $b6, $c8, $70, $01
	byte	$fb, $5a, $4d, $6e, $e0, $ae, $8b, $d0, $5e, $86, $3b, $22, $cb, $16, $05, $d5
	byte	$de, $1c, $66, $2c, $dc, $7a, $fb, $ac, $35, $d5, $de, $da, $b8, $70, $b1, $dd
	byte	$b3, $6f, $f1, $98, $d8, $b7, $c1, $e6, $b9, $4f, $f6, $65, $8b, $ac, $d3, $fe
	byte	$cb, $b2, $4e, $da, $d7, $dd, $f1, $73, $fb, $8c, $ee, $a6, $62, $46, $77, $6d
	byte	$68, $be, $1c, $dd, $9d, $2f, $e7, $4b, $1e, $e7, $b4, $07, $0b, $2b, $1d, $dd
	byte	$1d, $2c, $fc, $1c, $4d, $c8, $a4, $b0, $72, $1b, $f2, $cf, $67, $64, $b4, $85
	byte	$e5, $71, $67, $a7, $12, $ac, $2a, $37, $52, $2a, $81, $26, $e5, $e5, $0b, $4b
	byte	$e7, $db, $13, $da, $e7, $a7, $88, $6b, $87, $71, $e9, $f4, $97, $41, $da, $1e
	byte	$5b, $5a, $e7, $7f, $ad, $86, $b8, $ff, $75, $7b, $e3, $f5, $db, $76, $ff, $cb
	byte	$18, $cd, $3e, $5e, $a7, $31, $df, $da, $f8, $b8, $e7, $eb, $e4, $db, $43, $eb
	byte	$ff, $5c, $aa, $f5, $7f, $bf, $7d, $a7, $fa, $3f, $c9, $9c, $ff, $43, $2b, $53
	byte	$fe, $b5, $e9, $9d, $5c, $eb, $9f, $d2, $ff, $5a, $ff, $e4, $ad, $63, $df, $fa
	byte	$e7, $86, $59, $54, $db, $66, $c2, $39, $83, $cf, $e4, $29, $78, $98, $fb, $96
	byte	$6f, $56, $8b, $42, $83, $cf, $cc, $e6, $8e, $cc, $a6, $49, $b3, $05, $fb, $af
	byte	$91, $d7, $e7, $9f, $2e, $5f, $33, $fb, $36, $51, $7f, $49, $ff, $6c, $93, $c5
	byte	$e4, $a1, $fb, $a7, $c8, $c9, $43, $b3, $a5, $e4, $ee, $98, $fa, $82, $eb, $39
	byte	$a3, $bb, $2c, $7d, $99, $97, $db, $64, $7a, $17, $6f, $d3, $d9, $5c, $b8, $a6
	byte	$95, $58, $99, $9e, $be, $4e, $9e, $ca, $bf, $ae, $7c, $75, $f6, $f1, $da, $a1
	byte	$1c, $e5, $f9, $75, $b9, $3b, $7f, $5b, $70, $57, $46, $7b, $24, $c6, $c0, $85
	byte	$ab, $3d, $bf, $2e, $b9, $b4, $81, $7c, $b1, $63, $b9, $56, $be, $3a, $fb, $d4
	byte	$fa, $d9, $4c, $ad, $ef, $1f, $dc, $3a, $bf, $ef, $84, $fd, $a8, $db, $f2, $ba
	byte	$fa, $e9, $0a, $f3, $d3, $f9, $a9, $0c, $b9, $f0, $64, $36, $b8, $a0, $cd, $84
	byte	$65, $c8, $49, $27, $33, $73, $cc, $b5, $27, $33, $23, $9f, $9f, $3a, $a9, $d3
	byte	$34, $21, $9e, $7e, $7d, $79, $b3, $fc, $63, $e5, $ab, $b3, $af, $be, $7e, $76
	byte	$cc, $aa, $ef, $35, $d6, $78, $ef, $12, $7e, $1a, $72, $c7, $e9, $fe, $43, $57
	byte	$12, $ba, $a6, $f2, $ab, $2b, $1f, $9d, $8b, $b3, $2d, $34, $0d, $79, $7d, $f5
	byte	$e5, $f5, $f9, $37, $e9, $df, $29, $fb, $b6, $f1, $5e, $1a, $80, $cb, $64, $12
	byte	$2c, $26, $e1, $31, $66, $5c, $34, $7b, $1a, $1b, $79, $9c, $d3, $9e, $9f, $5a
	byte	$a9, $19, $6f, $fd, $1c, $ed, $38, $4f, $72, $1b, $f2, $cf, $e7, $46, $55, $1a
	byte	$77, $25, $7c, $64, $d6, $6c, $a8, $93, $bb, $b1, $5d, $cb, $9d, $ae, $08, $74
	byte	$6d, $08, $a5, $e9, $70, $98, $5f, $5c, $3b, $8c, $4b, $a7, $bf, $0c, $d2, $f6
	byte	$d8, $d2, $3a, $ff, $6b, $35, $c4, $fd, $af, $db, $1b, $af, $df, $b6, $fb, $5f
	byte	$c6, $68, $f6, $f1, $3a, $8d, $f9, $96, $de, $6d, $e8, $d2, $7a, $f9, $f6, $d0
	byte	$fa, $3f, $97, $6a, $fd, $df, $6f, $df, $a9, $fe, $cf, $df, $9b, $39, $1d, $49
	byte	$ca, $bf, $fe, $3b, $37, $ad, $7f, $4a, $ff, $6b, $fd, $93, $b7, $8e, $7d, $eb
	byte	$9f, $00, $00, $00, $00, $00, $00, $00, $00, $c0, $a3, $13, $ae, $a8, $e1, $31
	byte	$b4, $12, $c2, $ac, $9d, $a0, $35, $13, $72, $75, $44, $71, $bc, $b0, $52, $b3
	byte	$ee, $c2, $cf, $91, $d6, $69, $54, $2b, $34, $82, $33, $f2, $35, $19, $45, $1e
	byte	$01, $74, $76, $b7, $6a, $63, $35, $b9, $91, $56, $25, $54, $a4, $bc, $7c, $61
	byte	$e9, $7c, $7b, $42, $fb, $fc, $14, $71, $ed, $30, $2e, $9d, $fe, $32, $48, $db
	byte	$43, $6b, $75, $c8, $ff, $5a, $0d, $71, $ff, $eb, $f6, $c6, $eb, $b7, $ed, $fe
	byte	$97, $31, $fa, $0a, $44, $2e, $d7, $ca, $47, $f1, $71, $cf, $d7, $c9, $b7, $87
	byte	$d6, $ff, $b9, $54, $eb, $ff, $7e, $fb, $4e, $f5, $7f, $b9, $26, $8b, $74, $24
	byte	$29, $ff, $da, $f4, $4e, $ae, $f5, $4f, $e9, $7f, $ad, $7f, $f2, $d6, $b1, $6f
	byte	$fd, $13, $00, $00, $00, $00, $00, $00, $00, $00, $20, $f4, $df, $2d, $85, $d2
	byte	$f8, $7c, $14, $c9, $d4, $f9, $1d, $91, $bf, $3f, $db, $a1, $fd, $76, $ca, $cf
	byte	$cb, $3f, $bb, $9c, $33, $09, $cf, $17, $86, $64, $ea, $78, $8a, $58, $0d, $a4
	byte	$a4, $ce, $ca, $98, $34, $9d, $b6, $3e, $7d, $ea, $fc, $fe, $7c, $43, $7a, $06
	byte	$2a, $e6, $e3, $47, $23, $35, $bf, $54, $37, $3f, $68, $f7, $fc, $17, $75, $7e
	byte	$0e, $7c, $7e, $47, $4b, $ed, $cb, $fd, $5f, $df, $c9, $2d, $95, $bb, $2f, $6f
	byte	$92, $7f, $aa, $7c, $4d, $ec, $ab, $9b, $0f, $76, $b1, $bb, $9a, $39, $e2, $3d
	byte	$52, $93, $c5, $63, $9a, $b4, $08, $8a, $8b, $cf, $7c, $da, $19, $64, $3b, $7b
	byte	$ac, $a7, $4f, $b5, $0e, $6d, $7e, $58, $be, $c6, $e4, $75, $f9, $37, $2f, $5f
	byte	$fd, $cc, $6e, $2c, $b6, $69, $8d, $c7, $fc, $d3, $8c, $75, $db, $57, $73, $ff
	byte	$6e, $fe, $fc, $fa, $98, $18, $1b, $29, $63, $73, $fb, $71, $f9, $6a, $f9, $37
	byte	$29, $6b, $bb, $ea, $17, $00, $00, $00, $00, $00, $00, $f0, $f8, $51, $37, $7f
	byte	$e3, $af, $5f, $f2, $67, $9b, $c2, $f5, $39, $52, $23, $ff, $dc, $b5, $c8, $16
	byte	$c5, $e7, $af, $62, $1f, $7e, $72, $93, $72, $5f, $ea, $af, $bf, $92, $1a, $f2
	byte	$ae, $4d, $a1, $dc, $e6, $9c, $98, $21, $5a, $f0, $d5, $41, $ea, $2c, $c0, $42
	byte	$ca, $fd, $fa, $b3, $e7, $8d, $ad, $50, $ab, $ab, $1f, $7f, $e6, $52, $9f, $81
	byte	$d5, $8f, $1f, $1d, $b7, $7e, $93, $cf, $7e, $c9, $d2, $c8, $d5, $53, $dc, $02
	byte	$92, $fa, $fe, $e1, $36, $58, $af, $b2, $f5, $5f, $c2, $c3, $b4, $26, $90, $ad
	byte	$ff, $5a, $70, $0f, $f2, $dc, $b5, $16, $e0, $df, $b3, $cb, $6f, $01, $a1, $ef
	byte	$a5, $0f, $7d, $df, $85, $3e, $d6, $e4, $bc, $f6, $64, $fd, $48, $0f, $d3, $9c
	byte	$76, $28, $f5, $e7, $c8, $43, $8f, $6c, $86, $66, $ad, $4d, $da, $c6, $e7, $e8
	byte	$b5, $ba, $e1, $36, $70, $9f, $f0, $23, $37, $b3, $ca, $eb, $c0, $1d, $bb, $da
	byte	$b5, $de, $17, $eb, $2b, $ab, $16, $42, $63, $82, $6c, $1f, $e5, $58, $21, $e4
	byte	$ac, $ef, $79, $f2, $54, $0b, $a8, $93, $eb, $de, $97, $ed, $27, $25, $a7, $52
	byte	$eb, $35, $18, $8e, $0d, $7a, $0b, $d2, $fc, $d3, $cc, $bf, $00, $00, $00, $00
	byte	$00, $00, $00, $00, $c0, $e5, $51, $77, $b7, $fc, $3c, $ae, $ba, $cf, $a5, $7a
	byte	$77, $dc, $85, $d8, $04, $c5, $dd, $3f, $fd, $2d, $92, $37, $3f, $4b, $2c, $3d
	byte	$bf, $b7, $b7, $3b, $3f, $69, $69, $52, $7b, $8e, $f2, $ae, $a0, $6a, $f9, $d3
	byte	$f6, $b7, $9d, $e4, $fd, $4f, $83, $fb, $1d, $eb, $4f, $d0, $d0, $3c, $c3, $88
	byte	$fa, $bf, $b8, $63, $bb, $ea, $7f, $7a, $aa, $44, $da, $ff, $61, $fa, $d5, $fd
	byte	$6f, $cb, $ef, $fc, $ef, $cb, $ea, $ec, $4f, $d7, $5f, $3b, $e0, $f7, $c3, $0d
	byte	$ef, $7d, $6d, $ef, $aa, $4b, $c7, $e1, $dd, $b1, $b7, $e1, $7f, $3a, $ef, $ba
	byte	$fe, $f7, $ef, $5f, $bf, $ae, $ff, $9b, $d8, $5f, $57, $7f, $fb, $4e, $ba, $c4
	byte	$be, $54, $d7, $e6, $4f, $0d, $d0, $5b, $90, $f2, $5c, $01, $45, $1a, $7b, $9e
	byte	$92, $bb, $cf, $73, $dc, $43, $f6, $1e, $d0, $ba, $15, $f1, $b3, $a7, $bd, $19
	byte	$86, $db, $e7, $5f, $4b, $ea, $ae, $f6, $8f, $9e, $b7, $dc, $eb, $d2, $50, $c3
	byte	$85, $7c, $ef, $54, $cf, $df, $60, $52, $ae, $11, $8e, $41, $ae, $8f, $36, $3f
	byte	$7f, $b3, $f2, $6f, $86, $6d, $d6, $3f, $00, $00, $00, $00, $00, $00, $9b, $41
	byte	$5b, $d7, $e6, $af, $6e, $91, $bf, $b9, $92, $bf, $bf, $da, $ad, $dc, $5f, $c9
	byte	$15, $da, $02, $d2, $e8, $bf, $e9, $8e, $fb, $5d, $1e, $b9, $5c, $52, $72, $df
	byte	$93, $61, $de, $71, $b9, $96, $0b, $3f, $e2, $ab, $f5, $f4, $5f, $a7, $83, $a6
	byte	$d8, $a7, $a7, $c4, $9f, $70, $12, $95, $5e, $64, $17, $24, $b7, $c7, $be, $bc
	byte	$f8, $f4, $4e, $52, $4f, $a3, $fc, $dc, $7f, $c1, $37, $ef, $2c, $c9, $f4, $0d
	byte	$ce, $df, $c0, $ba, $66, $1a, $db, $20, $fd, $7c, $6a, $ff, $b9, $d1, $4a, $f8
	byte	$c2, $d6, $4f, $35, $83, $52, $84, $65, $7e, $ab, $cc, $c0, $45, $4a, $78, $c1
	byte	$5e, $83, $d2, $b9, $f3, $ba, $a7, $68, $ba, $39, $9f, $c9, $4c, $cc, $f0, $cd
	byte	$fc, $32, $f9, $72, $bf, $b4, $c6, $27, $da, $b1, $d4, $a0, $8d, $5b, $c2, $ce
	byte	$59, $b6, $2b, $27, $e7, $76, $c7, $e4, $4e, $47, $e6, $1e, $d6, $9c, $1e, $76
	byte	$e5, $e0, $35, $16, $a6, $58, $c9, $ff, $c2, $bf, $97, $e7, $7f, $bb, $c5, $fc
	byte	$ef, $cb, $43, $ff, $93, $14, $fe, $67, $1a, $d1, $d1, $aa, $94, $a6, $35, $f4
	byte	$d1, $d0, $93, $27, $be, $af, $ba, $f0, $9f, $a6, $ee, $b3, $eb, $ef, $ba, $6a
	byte	$ce, $5f, $d8, $9e, $b0, $41, $5c, $53, $b6, $70, $fe, $1a, $0d, $bd, $37, $6d
	byte	$91, $b4, $a5, $17, $c9, $f6, $50, $c9, $94, $d1, $a8, $ca, $37, $b2, $3a, $20
	byte	$96, $af, $a8, $7d, $4d, $5e, $a5, $8e, $96, $d8, $c9, $c3, $b2, $b1, $f7, $03
	byte	$4c, $93, $e9, $5d, $24, $b7, $86, $fd, $87, $97, $dd, $b3, $81, $a5, $d6, $35
	byte	$e4, $a8, $7a, $e9, $ed, $01, $00, $00, $00, $d8, $0a, $9f, $7c, $b1, $aa, $9c
	byte	$62, $ec, $fe, $93, $2f, $aa, $f0, $09, $85, $dd, $46, $31, $93, $87, $2e, $ae
	byte	$3c, $3e, $71, $29, $29, $55, $a8, $e5, $7f, $23, $4f, $e9, $78, $fe, $e1, $f3
	byte	$c2, $d3, $84, $fa, $da, $33, $c7, $57, $cd, $a3, $1d, $f0, $1a, $d7, $8e, $9c
	byte	$cf, $4c, $fd, $bb, $b8, $66, $1b, $f7, $9f, $f3, $53, $1e, $7b, $a2, $c5, $37
	byte	$c9, $c5, $4b, $2b, $3c, $2f, $da, $cf, $89, $4d, $e5, $db, $4b, $5e, $a2, $73
	byte	$bb, $55, $2b, $36, $96, $db, $4d, $21, $f2, $2a, $cf, $4f, $7b, $2e, $bd, $ee
	byte	$7f, $ad, $14, $b2, $fe, $53, $1a, $b2, $24, $31, $a9, $de, $ee, $9c, $cc, $5f
	byte	$c1, $e3, $6a, $54, $5f, $4b, $45, $f2, $50, $26, $6b, $5c, $93, $53, $ea, $78
	byte	$89, $9d, $3c, $2c, $9b, $f4, $2e, $69, $3a, $bd, $74, $4b, $a9, $ab, $2f, $2e
	byte	$d7, $d7, $0f, $69, $7e, $0f, $6b, $cf, $f9, $bd, $8d, $7d, $be, $8e, $94, $07
	byte	$ad, $57, $78, $fb, $e1, $92, $94, $7f, $aa, $b6, $ce, $c6, $01, $31, $3e, $58
	byte	$1d, $af, $77, $f3, $7e, $c6, $fa, $2d, $fc, $bf, $41, $ea, $6b, $cc, $7a, $2a
	byte	$9e, $36, $3e, $0e, $85, $1e, $92, $52, $d9, $06, $f4, $94, $f2, $ec, $31, $cf
	byte	$6b, $fe, $90, $23, $b4, $1c, $a9, $9b, $ad, $91, $0d, $b5, $57, $bf, $ce, $3f
	byte	$4a, $fd, $fa, $23, $6e, $4a, $1a, $97, $87, $e3, $ac, $9f, $ba, $2e, $67, $d7
	byte	$27, $f4, $5e, $98, $4a, $29, $e5, $a1, $8c, $db, $2e, $47, $04, $13, $b2, $ff
	byte	$71, $af, $52, $9c, $56, $77, $7e, $5f, $0d, $e3, $ea, $72, $70, $29, $62, $79
	byte	$c7, $52, $01, $00, $00, $00, $00, $ac, $ca, $e0, $62, $7e, $3a, $3f, $8d, $49
	byte	$8d, $cc, $6e, $69, $69, $93, $3c, $52, $e7, $9f, $9f, $4e, $66, $9a, $06, $49
	byte	$f5, $1c, $8c, $54, $9e, $45, $4a, $65, $29, $cc, $19, $ac, $46, $9d, $35, $b1
	byte	$75, $3c, $94, $47, $da, $56, $dd, $12, $b0, $49, $ea, $5a, $1d, $79, $2a, $e6
	byte	$0b, $d7, $12, $fc, $3c, $fc, $16, $22, $f3, $d0, $5a, $86, $6b, $bf, $8f, $9f
	byte	$df, $2f, $6f, $f4, $d0, $7a, $bf, $d9, $5c, $dd, $87, $1a, $14, $eb, $9f, $47
	byte	$d3, $a4, $3c, $52, $6d, $c6, $e9, $d4, $95, $36, $26, $07, $9b, $24, $de, $ef
	byte	$78, $ab, $d0, $74, $42, $3f, $c9, $71, $5f, $f7, $61, $13, $cf, $c2, $f7, $9b
	byte	$63, $9d, $d1, $85, $fc, $a8, $8d, $2e, $61, $0a, $d9, $4e, $c2, $36, $20, $25
	byte	$f1, $56, $f1, $78, $8e, $fe, $bb, $23, $35, $42, $db, $23, $5f, $43, $7a, $48
	byte	$7a, $4c, $1b, $b3, $65, $cb, $88, $95, $22, $f5, $6e, $b1, $2b, $68, $df, $7d
	byte	$68, $32, $6d, $86, $dd, $cd, $3a, $6b, $f3, $b4, $fa, $1c, $7b, $9d, $dc, $cd
	byte	$86, $fa, $b9, $fb, $df, $17, $69, $33, $c0, $61, $f9, $84, $6d, $27, $c5, $37
	byte	$bf, $27, $c2, $fe, $93, $e2, $fb, $22, $b1, $05, $b5, $53, $c6, $86, $f2, $76
	byte	$e2, $3c, $ad, $79, $df, $fb, $c6, $bd, $d1, $a6, $b5, $02, $3d, $a7, $a6, $79
	byte	$af, $5a, $06, $3b, $8f, $ce, $fd, $25, $36, $ae, $5b, $c5, $96, $69, $42, $6d
	byte	$cf, $df, $5d, $f7, $bf, $ff, $1d, $84, $f4, $41, $f8, $5d, $87, $ee, $a9, $7a
	byte	$39, $ef, $d9, $9a, $9f, $e3, $72, $7a, $75, $72, $eb, $6d, $f2, $ba, $fc, $7e
	byte	$47, $fa, $4d, $29, $9f, $22, $17, $f6, $f9, $1e, $0f, $56, $0c, $01, $b0, $5d
	byte	$b4, $5f, $e7, $b8, $35, $e3, $83, $45, $53, $b9, $fb, $25, $24, $ff, $45, $a4
	byte	$93, $eb, $67, $df, $9c, $3c, $2c, $db, $6a, $72, $5e, $72, $77, $b6, $cb, $2b
	byte	$ff, $7a, $72, $ff, $59, $11, $ab, $b3, $6e, $fd, $c5, $fd, $cf, $cb, $ac, $95
	byte	$7f, $bb, $f2, $58, $f9, $34, $7b, $62, $f6, $69, $ed, $37, $ac, $9b, $74, $fd
	byte	$ac, $2a, $f7, $eb, $ae, $59, $f9, $b5, $67, $85, $ac, $de, $26, $d6, $b1, $d1
	byte	$4f, $bb, $2f, $fe, $6f, $97, $3c, $f4, $b9, $ab, $cf, $66, $f5, $2f, $7d, $be
	byte	$fe, $78, $b0, $d9, $36, $c0, $cb, $90, $1e, $c3, $42, $7b, $39, $ab, $8f, $8f
	byte	$b2, $7c, $cd, $fb, $bf, $95, $af, $da, $7e, $7d, $7d, $ad, $4c, $75, $e1, $78
	byte	$1b, $68, $5a, $ff, $8f, $da, $06, $b4, $bc, $63, $75, $96, $92, $af, $e3, $ff
	byte	$6d, $bd, $07, $58, $47, $ae, $d7, $dd, $be, $bf, $87, $d1, $7c, $8f, $fb, $4f
	byte	$00[5]
	byte	$80, $04, $c3, $ec, $c1, $e2, $41, $fe, $3a, $5c, $18, $86, $59, $56, $ec, $b3
	byte	$6a, $3f, $34, $82, $61, $2e, $2f, $b5, $69, $7f, $d9, $bc, $23, $a9, $d1, $fe
	byte	$49, $48, $42, $fb, $50, $27, $a2, $fd, $76, $1c, $4d, $fd, $ad, $14, $a1, $fa
	byte	$1b, $69, $7c, $f5, $d7, $eb, $90, $ea, $3f, $ae, $87, $ab, $bf, $d6, $04, $a7
	byte	$fe, $23, $8d, $bf, $fd, $e5, $67, $5e, $4c, $a5, $ff, $43, $8d, $e5, $f2, $3f
	byte	$3f, $95, $31, $a4, $fe, $aa, $ca, $32, $4f, $70, $43, $46, $95, $fa, $af, $a8
	byte	$e4, $fa, $cb, $7f, $bf, $23, $a2, $ac, $fa, $cb, $3a, $cb, $22, $c1, $a1, $88
	byte	$2b, $f4, $5f, $d2, $59, $da, $04, $6f, $f3, $38, $a3, $fe, $fd, $08, $cb, $32
	byte	$c1, $5b, $3c, $32, $d7, $7f, $31, $c2, $92, $12, $bc, $c9, $22, $73, $fd, $eb
	byte	$11, $48, $7f, $f9, $f9, $9b, $2e, $32, $d7, $1f, $10, $1f, $de, $e3, $fc, $af
	byte	$d2, $5f, $de, $7b, $a3, $d2, $c9, $f5, $5f, $20, $ee, $2d, $63, $7c, $fe, $3a
	byte	$e9, $e4, $fa, $cf, $13, $9f, $46, $f5, $97, $9f, $bf, $56, $ea, $e4, $fa, $df
	byte	$23, $12, $fa, $cb, $4f, $4b, $9d, $5c, $fd, $39, $22, $a5, $bf, $fc, $b5, $d5
	byte	$c9, $f3, $ff, $2e, $f1, $8f, $84, $fa, $fd, $52, $27, $d7, $ff, $0e, $91, $d0
	byte	$bf, $ff, $4a, $a9, $93, $eb, $7f, $9b, $88, $eb, $df, $ff, $01, $e9, $e4, $fa
	byte	$df, $22, $7e, $fb, $df, $88, $fa, $bf, $5e, $ae, $74, $72, $fd, $6f, $46, $70
	byte	$ea, $2f, $b9, $c8, $5c, $ff, $d9, $08, $95, $fa, $8b, $2c, $d2, $e8, $7f, $43
	byte	$87, $d4, $af, $b3, $38, $a3, $9f, $7d, $5d, $c7, $aa, $ff, $73, $c0, $e3, $8a
	byte	$fe, $f2, $35, $9d, $52, $5d, $c4, $d9, $0e, $f9, $8c, $4a, $a1, $fe, $82, $88
	byte	$2a, $fb, $fb, $57, $55, $8c, $fa, $81, $8c, $a2, $01, $e5, $9a, $46, $ae, $fe
	byte	$bc, $8c, $a9, $c6, $ab, $a7, $9f, $52, $f8, $eb, $9f, $9f, $93, $11, $4f, $bb
	byte	$01, $f1, $a9, $af, $d4, $f3, $14, $1f, $70, $9f, $ac, $47, $0e, $e8, $4f, $d4
	byte	$91, $79, $5c, $4d, $e3, $ab, $67, $d9, $97, $53, $84, $ea, $79, $82, $2f, $c5
	byte	$50, $d5, $73, $fa, $3a, $11, $6d, $c3, $95, $2b, $3d, $c9, $95, $2b, $09, $6d
	byte	$83, $51, $0a, $0f, $c1, $fe, $33, $35, $2f, $cb, $3f, $15, $54, $33, $9b, $07
	byte	$af, $8e, $c7, $e3, $77, $0e, $b2, $6b, $07, $a6, $87, $1e, $67, $47, $e3, $27
	byte	$06, $b7, $3e, $98, $66, $c7, $57, $af, $0d, $fa, $e3, $a3, $ec, $99, $c1, $cd
	byte	$db, $d3, $bc, $39, $4f, $46, $93, $be, $09, $0f, $0e, $47, $93, $71, $be, $9f
	byte	$8e, $af, $5e, $33, $e3, $fb, $ad, $77, $3f, $bc, $f5, $ab, $5f, $1e, $e5, $e9
	byte	$c6, $c7, $fd, $ab, $b7, $d6, $2e, $dc, $c1, $cd, $f1, $78, $3a, $1e, $67, $79
	byte	$e6, $e6, $2f, $1b, $dc, $18, $8d, $46, $37, $06, $d9, $c7, $b7, $f3, $f2, $dd
	byte	$fe, $38, $3b, $3e, $3c, $3c, $3a, $3c, $3c, $ce, $a6, $a3, $d1, $24, $97, $64
	byte	$d7, $0f, $47, $77, $c6, $37, $ae, $67, $e3, $22, $d9, $38, $3b, $be, $66, $cb
	byte	$5f, $34, $f8, $bc, $7c, $e3, $db, $bf, $f9, $c3, $c7, $bf, $bb, $53, $be, $25
	byte	$3d, $ce, $c6, $1f, $4d, $a7, $ef, $e5, $7a, $e3, $df, $ff, $71, $fa, $fe, $9d
	byte	$b1, $29, $ef, $d8, $d8, $91, $9f, $6c, $9c, $67, $58, $84, $df, $bf, $fd, $73
	byte	$13, $be, $63, $d2, $dd, $ba, $3d, $3a, $32, $f9, $1c, $97, $43, $d7, $b8, $d4
	byte	$cf, $5f, $3e, $3a, $3a, $78, $32, $df, $bf, $37, $9d, $de, $7c, $29, $33, $a1
	byte	$a3, $8f, $c6, $d9, $8d, $1b, $cf, $0e, $8c, $de, $f4, $89, $67, $0e, $86, $1f
	byte	$4c, $37, $e0, $ae, $c7, $83, $06, $03, $f5, $56, $31, $03, $98, $f9, $7f, $b2
	byte	$fc, $ff, $c5, $df, $7b, $d9, $ff, $01, $5f, $b9, $77, $88, $00, $00, $00, $00
	byte	$00, $e0, $00, $00, $01, $00, $00, $01, $00, $10, $00, $10, $00, $00, $00, $02
	byte	$00, $08, $00, $08, $00, $00, $00, $03, $00, $30, $00, $30, $00, $00, $00, $04
	byte	$00, $08, $00, $08, $00, $00, $00, $00, $01, $00, $00, $00, $00, $00, $00, $00
	byte	$00[41]
	byte	$18, $48, $78, $a8, $d8, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00, $00, $02, $01, $00, $00, $02, $1f, $20, $21, $1e, $00, $00, $00, $00, $00
	byte	$00[550]
	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_dat_ + 6804
	long	@@@_dat_ + 6812
	byte	$00, $00, $00, $00
	long	@@@_dat_ + 6820
	long	@@@_dat_ + 6828
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_dat_ + 6836
	long	@@@_dat_ + 6844
	byte	$00, $00, $00, $00
	long	@@@_dat_ + 6852
	long	@@@_dat_ + 6860
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@_dat_ + 6868
	long	@@@_dat_ + 6876
	byte	$00, $00, $00, $00
	long	@@@_dat_ + 6884
	long	@@@_dat_ + 6892
	byte	$00[316]
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__rxtxioctl_0419
	byte	$00, $00, $00, $00
	long	@@@___dummy_flush_0420
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__rxtxioctl_0419
	byte	$00, $00, $00, $00
	long	@@@___dummy_flush_0420
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__rxtxioctl_0419
	byte	$00, $00, $00, $00
	long	@@@___dummy_flush_0420
	alignl
_SPI_spin2_dat_
	byte	$00, $fd, $0c, $fb, $f8, $ff, $9f, $ad, $01, $fc, $1c, $f2, $20, $00, $90, $ad
	byte	$03, $fc, $1c, $f2, $28, $00, $90, $ad, $02, $fc, $1c, $f2, $68, $01, $90, $ad
	byte	$04, $fc, $1c, $f2, $68, $00, $90, $ad, $00, $01, $6c, $fc, $d0, $ff, $9f, $fd
	byte	$f8, $f3, $03, $f6, $c1, $ff, $04, $fb, $c1, $01, $05, $fb, $e8, $ff, $9f, $fd
	byte	$f8, $f3, $03, $f6, $c1, $03, $05, $fb, $c1, $05, $05, $fb, $c1, $07, $05, $fb
	byte	$59, $02, $61, $fd, $00, $00, $1d, $f2, $58, $04, $61, $ad, $59, $04, $61, $5d
	byte	$18, $06, $25, $f0, $08, $0a, $05, $f6, $01, $06, $b5, $f0, $5a, $02, $61, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$f9, $0b, $6d, $fb, $1f, $fe, $60, $fd, $1f, $fe, $60, $fd, $98, $ff, $9f, $fd
	byte	$f8, $f3, $03, $f6, $c1, $03, $05, $fb, $c1, $05, $05, $fb, $c1, $0d, $05, $fb
	byte	$c1, $0f, $05, $fb, $86, $06, $c1, $fa, $01, $0c, $05, $f1, $59, $02, $61, $fd
	byte	$00, $00, $1d, $f2, $58, $04, $61, $ad, $59, $04, $61, $5d, $18, $06, $25, $f0
	byte	$01, $06, $b5, $f0, $5a, $02, $61, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $01, $06, $b5, $f0, $5a, $02, $61, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$01, $06, $b5, $f0, $5a, $02, $61, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $01, $06, $b5, $f0, $5a, $02, $61, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$01, $06, $b5, $f0, $5a, $02, $61, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $01, $06, $b5, $f0, $5a, $02, $61, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$01, $06, $b5, $f0, $5a, $02, $61, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $01, $06, $b5, $f0, $5a, $02, $61, $fd
	byte	$5f, $04, $61, $fd, $1f, $fe, $60, $fd, $5f, $04, $61, $fd, $1f, $fe, $60, $fd
	byte	$c8, $0f, $6d, $fb, $a0, $fe, $9f, $fd, $f8, $f3, $03, $f6, $c1, $03, $05, $fb
	byte	$c1, $05, $05, $fb, $c1, $07, $05, $fb, $c1, $09, $05, $fb, $51, $02, $61, $fd
	byte	$00, $00, $1d, $f2, $58, $04, $61, $ad, $59, $04, $61, $5d, $00, $06, $05, $f6
	byte	$08, $0a, $05, $f6, $5f, $04, $61, $fd, $1f, $fe, $60, $fd, $40, $02, $71, $fd
	byte	$01, $06, $a5, $f0, $5f, $04, $61, $fd, $1f, $fe, $60, $fd, $f9, $0b, $6d, $fb
	byte	$84, $06, $61, $fc, $50, $fe, $9f, $fd, $58, $08, $61, $fd, $4b, $4c, $80, $ff
	byte	$1f, $00, $65, $fd, $59, $08, $61, $fd, $4b, $4c, $80, $ff, $1f, $00, $65, $fd
	byte	$e4, $ff, $9f, $fd, $30, $fe, $9f, $fd, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00[32]
	alignl
_fs9p_internal_cc_dat_
	byte	$18, $04, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00[2220]
	long	@@@_fs9p_internal_cc_dat_ + 2300
	long	@@@_fs9p_internal_cc_dat_ + 2308
	long	@@@_fs9p_internal_cc_dat_ + 2316
	long	@@@_fs9p_internal_cc_dat_ + 2324
	long	@@@_fs9p_internal_cc_dat_ + 2332
	long	@@@_fs9p_internal_cc_dat_ + 2340
	long	@@@_fs9p_internal_cc_dat_ + 2348
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_dat_ + 2356
	long	@@@_fs9p_internal_cc_dat_ + 2364
	long	@@@_fs9p_internal_cc_dat_ + 2372
	long	@@@_fs9p_internal_cc_dat_ + 2380
	long	@@@_fs9p_internal_cc_dat_ + 2388
	long	@@@_fs9p_internal_cc_dat_ + 2396
	long	@@@_fs9p_internal_cc_dat_ + 2404
	long	@@@_fs9p_internal_cc_dat_ + 2412
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_open_0601
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_creat_0560
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_close_0562
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_read_0581
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_write_0584
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_lseek_0589
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_ioctl_0590
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_opendir_0565
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_closedir_0568
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_readdir_0576
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_stat_0578
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_mkdir_0593
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_rmdir_0596
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_remove_0595
	byte	$00, $00, $00, $00
	long	@@@_fs9p_internal_cc_v_rename_0597
	alignl
__system__dat_
	byte	$00[8]
	byte	$03, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	byte	$00[552]
	byte	$05, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@__system__dat_ + 1008
	long	@@@__system__dat_ + 1016
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1024
	long	@@@__system__dat_ + 1032
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@__system__dat_ + 1040
	long	@@@__system__dat_ + 1048
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1056
	long	@@@__system__dat_ + 1064
	byte	$00[8]
	byte	$01, $00, $00, $00, $06, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
	long	@@@__system__dat_ + 1072
	long	@@@__system__dat_ + 1080
	byte	$00, $00, $00, $00
	long	@@@__system__dat_ + 1088
	long	@@@__system__dat_ + 1096
	byte	$00[316]
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_0725
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_0726
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_0725
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_0726
	byte	$00, $00, $00, $00
	long	@@@__system___tx
	byte	$00, $00, $00, $00
	long	@@@__system___rx
	byte	$00, $00, $00, $00
	long	@@@__system___rxtxioctl_0725
	byte	$00, $00, $00, $00
	long	@@@__system____dummy_flush_0726
__heap_base
	long	0[4002]
objmem
	long	0[0]
stackspace
	long	0[1]
	org	COG_BSS_START
_var01
	res	1
_var02
	res	1
_var03
	res	1
_var04
	res	1
_var05
	res	1
_var06
	res	1
_var07
	res	1
_var08
	res	1
_var09
	res	1
_var10
	res	1
_var11
	res	1
arg01
	res	1
arg02
	res	1
arg03
	res	1
arg04
	res	1
arg05
	res	1
local01
	res	1
local02
	res	1
local03
	res	1
local04
	res	1
local05
	res	1
local06
	res	1
local07
	res	1
local08
	res	1
local09
	res	1
local10
	res	1
local11
	res	1
local12
	res	1
local13
	res	1
local14
	res	1
local15
	res	1
local16
	res	1
local17
	res	1
local18
	res	1
local19
	res	1
local20
	res	1
local21
	res	1
local22
	res	1
local23
	res	1
local24
	res	1
local25
	res	1
local26
	res	1
local27
	res	1
local28
	res	1
local29
	res	1
local30
	res	1
muldiva_
	res	1
muldivb_
	res	1
	fit	480
